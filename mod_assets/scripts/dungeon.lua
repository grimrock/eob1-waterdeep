-- This file has been generated by Dungeon Editor 1.3.7

--- level 1 ---

mapName("Upper Sewer Level")
setWallSet("sewers")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
#...############################
#.##############################
#...############################
#.#.#..#########################
#.#....#########################
################################
####################..##########
####################..##########
################...##..#########
################.#...#.#########
##########.#####.##.....########
##########.###.....###..########
##########.###.###.#.#.#########
##########.##..#...#.#.#########
###.............#..#...#########
##..#########..##.#..#.#########
##..######...##.#.#..#.#########
##..####..........#.#...#.######
##..####.#...##.##..##.#...#####
##..####.#######....#...#.######
##..##...........##.#...#.######
##..##.#.##########..#.#..######
##..##.#...........#.....#######
##..##.#...###...#####.#########
##..##.#...#.#.##......#########
##..#...###.......##############
#####.......####################
#####...########################
################################
################################
#############################.##
]])
spawn("script_entity", 10,0,2, "texts")
	:setSource("-- Text and variables library\
\
t = {}\
\
function setT(name, value)\
   t[name] = value\
end\
\
function getT(name)\
   return t[name]\
end\
\
-- Letter (starting item) --\
setT(\"commission_letter\",[[\
This document is a binding commission of service to\
the Lords and Sovereign City of Waterdeep. \
The bearers of this document are agents of the Lords\
of Waterdeep and are granted full rights of passage\
beneath the City of Waterdeep. Any who woud dare\
interfere risk the full penalty of our wrath.\
Information has been presented to us that there is\
a plot afoot in our city. Evidence points to the\
sewers that run beneath Waterdeep. We have no\
information about the exact nature of the threat,\
but we feel the urgency is grave. We commission you\
to find the nature of the danger, and to destroy it\
if you are able. You are granted full rights of\
Marque. All treasures , artifacts, or other valuables\
are yours by right of conquest.\
\
This writ is made legal and binding, by our Mark on\
this fifth day of Marpenoth in the year of Shadows.\
]])\
\
-- TEXTS in alphabetical order --\
\
setT(\"carving_to_place\", \"What an odd Carving to place here.\")\
setT(\"character_can_translate_rune\", \" can translate this text.\\nIt is the Kobold rune for Entrance.\")\
setT(\"character_cannot_translate_rune\", \" This Rune is unrecognized.\\nNo one in the party can translate it.\")\
setT(\"dagger_fits\", \"The Dagger fits.\")\
setT(\"dagger_undetachable\", \"The dagger is undetachable!\")\
setT(\"dead_end\", \"Dead end?\")\
setT(\"dead_end_show\", \"yes\")\
setT(\"door_appears_stuck\",\"The door appears stuck.\")\
setT(\"door_appears_stuck_pressed\",\"no\")\
setT(\"door_member_try_open_ok\",\" forces the door!\")\
setT(\"door_member_try_open_failed\",\" tries to force the door and fails.\")\
setT(\"door_party_try_open\",\"The party tries to force the door...\")\
setT(\"door_party_try_open_ok\",\"The party forces the door.\")\
setT(\"door_party_try_open_failed\",\"The party tries to force the door and fails.\")\
setT(\"door_party_try_open_again\",\"You can try to force the door again by moving to it once more...\")\
setT(\"drainage_grate\",\"There is a drainage grate here.\")\
setT(\"drainage_grate_eyes\",\"Something scurries deeper into the floor drain.\")\
setT(\"feel_dizzy\", \"You feel dizzy.\")\
setT(\"feels_no_longer_hungry\", \"feels no longer hungry!\")\
setT(\"goind_down\",\"Going down...\")\
setT(\"goind_up\",\"Going up...\")\
setT(\"hollow_laughter\",\"A hollow laughter echoes faintly.\")\
setT(\"look_like_travel_marker\", \"This looks like a Travel marker.\")\
setT(\"not_all_is_as_it_appears\", \"Not all is as it appears\")\
setT(\"only_the_strong\",\"Only the Strong shall pass.\")\
setT(\"room_move\",\"The Room seems to move.\")\
setT(\"smells_terrible_here\",\"It smells terrible here.\")\
setT(\"special_quest_for_this_level\", \"Special Quest for this level!\")\
setT(\"watch_your_step\", \"Watch your step.\")\
setT(\"entrance_is_blocked\",\"...the Entrance to the sewers is now blocked...\")\
setT(\"welcome_to_eob\", \"Welcome to the Eye of the Beholder recreation!\")\
setT(\"whispering_voice_illusion\", \"A whispering voice says 'Illusion, solid illusion'\")")
spawn("eob_rock", 10,15,0, "eob_rock_1")
spawn("eob_rock", 10,15,3, "eob_rock_2")
spawn("eob_sewers_door_metal", 16,11,2, "dungeon_door_metal_2")
	:addPullChain()
spawn("eob_sewers_door_metal", 18,13,0, "dungeon_door_metal_3")
	:addPullChain()
spawn("eob_lever", 13,14,0, "eob_lever_1")
	:addConnector("any", "eob_sewers_door_metal_1", "toggle")
spawn("eob_sewers_cave_in", 10,14,0, "eob_sewers_cave_in_1")
spawn("pressure_plate_hidden", 17,12,2, "pressure_plate_hidden_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "openSW1")
spawn("eob_sewers_door_metal", 17,23,3, "dungeon_door_metal_4")
	:setDoorState("open")
spawn("eob_sewers_door_metal", 14,18,1, "dungeon_door_metal_5")
spawn("script_entity", 10,8,3, "script_entity_1")
	:setSource("-- scripts for LEVEL 1 --\
\
-- open secret walls at route 1 if 2 is closed\
function openSW1()\
\9if dungeon_secret_door_3:isClosed() and\
\9dungeon_secret_door_4:isClosed() then\
\9\9dungeon_secret_door_1:open()\
\9\9dungeon_secret_door_2:open()\
\9\9dungeon_secret_door_6:open()\
\9\9dungeon_secret_door_7:open()\
\9\9spawn(\"eob_wall_button\", 1, 8, 23, 3, \"wallbutton_route1\")\
\9\9wallbutton_route1:addConnector(\"toggle\",\"dungeon_door_metal_6\",\"toggle\")\
\9end\
end\
\
-- open secret walls at route 2 if 1 is closed\
function openSW2()\
\9if dungeon_secret_door_1:isClosed() and\
\9dungeon_secret_door_2:isClosed() then\
\9\9dungeon_secret_door_3:open()\
\9\9dungeon_secret_door_4:open()\
\9\9dungeon_secret_door_8:open()\
\9\9dungeon_secret_door_9:open()\
\9\9spawn(\"eob_wall_button\", 1, 9, 21, 2, \"wallbutton_route2\")\
\9\9wallbutton_route2:addConnector(\"toggle\",\"dungeon_door_metal_6\",\"toggle\")\
\9end\
end\
\
function MessageSmellsTerrible()\
\9hudPrint(texts.getT(\"smells_terrible_here\"))\
end\
\
function SpecialQuest1()\
\9if counter_1:getValue() == 0 then\
\9\9local itc = libObject.containsItem(dungeon_alcove_1, \"eob_dagger\")\
\9\9if itc then\
\9\9\9counter_1:increment()\
\9\9\9if itc:getStackSize()>1 then\
\9\9\9\9itc:setStackSize(itc:getStackSize()-1)\
\9\9\9else\
\9\9\9\9itc:destroy()\
\9\9\9end\
\9\9\9hudPrint(texts.getT(\"special_quest_for_this_level\"))\
\9\9\9dungeon_alcove_1:addItem(spawn(\"eob_dagger_guinsoo\"))\
\9\9\9secret_1:activate()\
\9\9end\
\9end\
end")
spawn("pressure_plate_hidden", 16,10,0, "pressure_plate_hidden_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "openSW2")
spawn("eob_sewers_door_metal", 8,21,2, "dungeon_door_metal_6")
spawn("eob_sewers_door_metal", 19,19,0, "dungeon_door_metal_7")
spawn("eob_lever", 18,19,0, "eob_lever_2")
	:addConnector("any", "dungeon_door_metal_7", "toggle")
spawn("eob_rock", 20,17,2, "eob_rock_4")
spawn("eob_sewers_door_metal", 22,13,0, "dungeon_door_metal_8")
spawn("eob_sewers_pressure_plate", 22,17,1, "dungeon_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "dungeon_door_metal_9", "open")
	:addConnector("deactivate", "dungeon_door_metal_9", "close")
spawn("eob_sewers_door_metal", 22,19,0, "dungeon_door_metal_9")
spawn("eob_rock", 21,21,2, "eob_rock_5")
spawn("eob_sewers_door_metal", 22,23,2, "dungeon_door_metal_10")
	:addPullChain()
spawn("eob_arrow", 16,24,1, "eob_arrow_3")
spawn("eob_shield", 10,25,2, "eob_shield_1")
spawn("eob_sewers_pressure_plate", 16,23,3, "dungeon_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "dungeon_door_metal_4", "close")
spawn("eob_sewers_alcove", 12,25,0, "dungeon_alcove_1")
	:setActivateAlways(true)
	:addItem(spawn("scroll_armor"))
	:addItem(spawn("eob_scroll_bless"))
	:addConnector("activate", "script_entity_1", "SpecialQuest1")
spawn("eob_sewers_secret_button_large", 19,21,3, "eob_sewers_secret_button_4")
	:addConnector("toggle", "eob_sewers_secret_door_cube_1", "toggle")
	:addConnector("toggle", "eob_secret_door_empty_1", "toggle")
	:addConnector("toggle", "eob_secret_door_empty_2", "toggle")
	:addConnector("toggle", "secret_3", "activate")
spawn("eob_remains_of_tod_uphill", 14,14,2, "eob_remains_of_tod_uphill_1")
spawn("secret", 11,25,1, "secret_1")
spawn("secret", 26,20,1, "secret_2")
spawn("eob_dart_2", 25,18,0, "eob_dart_2_1")
spawn("eob_leech", 9,25,0, "eob_leech_1")
spawn("eob_leech", 5,27,0, "eob_leech_2")
spawn("eob_kobold", 11,17,1, "eob_kobold_1")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 12,19,0, "eob_kobold_2")
	:addItem(spawn("eob_mage_scroll_armor"))
spawn("eob_kobold", 24,19,1, "eob_kobold_3")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 11,18,1, "eob_kobold_4")
	:addItem(spawn("eob_dagger"))
	:addItem(spawn("eob_mage_scroll_detect_magic"))
spawn("eob_kobold", 11,27,3, "eob_kobold_5")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 16,12,3, "eob_kobold_6")
spawn("eob_kobold", 20,8,1, "eob_kobold_7")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 20,15,1, "eob_kobold_8")
	:addItem(spawn("eob_dagger"))
spawn("torch_holder", 15,15,1, "torch_holder_2")
	:addTorch()
spawn("torch_holder", 11,19,2, "torch_holder_3")
	:addTorch()
spawn("torch_holder", 15,24,2, "torch_holder_4")
	:addTorch()
spawn("torch_holder", 6,28,2, "torch_holder_5")
	:addTorch()
spawn("torch_holder", 23,11,1, "torch_holder_6")
	:addTorch()
spawn("counter", 12,24,0, "counter_1")
spawn("eob_wall_button", 23,12,2, "eob_wall_button_1")
	:addConnector("toggle", "dungeon_door_metal_8", "toggle")
spawn("eob_wall_button", 15,19,3, "eob_wall_button_2")
	:addConnector("toggle", "dungeon_door_metal_5", "toggle")
spawn("pressure_plate_hidden", 25,19,0, "pressure_plate_hidden_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "MessageSmellsTerrible")
spawn("script_entity", 11,1,0, "script_beginning")
	:setSource("function EOBsetDefaultParty()\
 -- set default party (not used for now, there is new feature from AH)\
\
\9party:getChampion(1):setName(\"Allabar\")\
\9party:getChampion(1):setRace(\"Human\")\
\9party:getChampion(1):setClass(\"Fighter\")\
\9party:getChampion(1):setSex(\"male\")\
\9party:getChampion(1):setPortrait(\"mod_assets/textures/portraits/eob1-allabar.tga\")\
\9\
\9party:getChampion(2):setName(\"Ariel\")\
\9party:getChampion(2):setRace(\"Human\")\
\9party:getChampion(2):setClass(\"Ranger\")\
\9party:getChampion(2):setSex(\"female\")\
\9party:getChampion(2):setPortrait(\"mod_assets/textures/portraits/eob1-ariel.tga\")\
\9\
\9party:getChampion(3):setName(\"Tenmiyana\")\
\9party:getChampion(3):setRace(\"Lizardman\")\9\
\9party:getChampion(3):setSex(\"female\")\
\9party:getChampion(3):setPortrait(\"mod_assets/textures/portraits/eob1-tenmiyana.tga\")\
\9\
\9party:getChampion(4):setName(\"Valanau\")\
\9party:getChampion(4):setRace(\"Human\")\
\9party:getChampion(4):setSex(\"male\")\
\9party:getChampion(4):setPortrait(\"mod_assets/textures/portraits/eob1-valanau.tga\")\
\
\
\9\
end\
\
function EOBsetDefaultItems()\
 -- set default items for the party [WIP] --\
\9party:getChampion(1):insertItem(7,spawn(\"eob_short_sword\"))\
\9party:getChampion(1):insertItem(11,spawn(\"eob_note_commission\"))\
\9party:getChampion(1):getItem(11):setScrollText(texts.getT(\"commission_letter\"))\
\9party:getChampion(1):insertItem(12,spawn(\"eob_note_map_level1\"))\
\9party:getChampion(1):getItem(12):setScrollImage(\"mod_assets/textures/gui/scroll_images/sewers_level1_map512.dds\")\
\9party:getChampion(1):insertItem(13,spawn(\"eob_iron_rations\"))\
\9party:getChampion(1):insertItem(14,spawn(\"torch\"))\
\9party:getChampion(2):insertItem(7,spawn(\"hand_axe\"))\
\9party:getChampion(2):insertItem(11,spawn(\"eob_iron_rations\"))\
\9party:getChampion(3):insertItem(11,spawn(\"eob_iron_rations\"))\
\9party:getChampion(3):insertItem(7,spawn(\"compass\"))\
\9party:getChampion(3):insertItem(8,spawn(\"eob_dagger\"))\
\9party:getChampion(4):insertItem(12,spawn(\"eob_iron_rations\"))\
end\
\
\
-- helper function for set the Wall text for Kobold runes\
function setWallTextForRune(wt)\
\9local reader = libParty.getFirstPartyRace(\"Lizardman\")\
\9local txt = findEntity(wt)\
\9if reader then\
\9\9txt:setWallText(party:getChampion(reader):getName()..texts.getT(\"character_can_translate_rune\"))\
\9else\
\9\9txt:setWallText(texts.getT(\"character_cannot_translate_rune\"))\
\9end\
end\
\
function TextRune1()\
\9setWallTextForRune(\"dungeon_wall_text_rune1\")\
end\
\
function TextRune2()\
\9setWallTextForRune(\"dungeon_wall_text_rune2\")\
end\
\
function FallingRocks()\
\9spawn(\"fx\", 1, 10, 14, 2, \"dust1\")\
\9dust1:setParticleSystem(\"earthquake_dust\")\
\9-- spawn(\"fx\", 1, 10, 15, 0, \"dust2\")\
\9-- dust2:setParticleSystem(\"earthquake_dust\")\
\9party:shakeCamera(1,1)\
\9playSoundAt(\"rockfall_01\", 1, 10, 14)\
end\
\
-- level up all champions by 2 levels (added by JKos)\
-- you can remove this if you don't like it\
function EOBlevelUp()\
\9for i=1,2 do\
\9\9for j = 1,4 do\
\9\9\9party:getChampion(j):levelUp()\
\9\9end\
\9end\9\
end\
\
function autoexec()\
\
\9EOBlevelUp()\
\9-- EOBsetDefaultParty()\
\9EOBsetDefaultItems()\
\9\
\9-- drainage grate water sounds --\
\9playSoundAt(\"waterfall_loop\", 1, 18, 17)\
\9playSoundAt(\"waterfall_loop\", 1, 13, 22)\
\9\
\9hudPrint(\" \")\
\9hudPrint(\" \")\
\9hudPrint(\" \")\
\9hudPrint(texts.getT(\"welcome_to_eob\"))\
\9hudPrint(\" \")\
\9hudPrint(texts.getT(\"entrance_is_blocked\"))\
end")
spawn("pressure_plate_hidden", 18,12,1, "pressure_plate_hidden_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_beginning", "TextRune1")
spawn("pressure_plate_hidden", 15,23,1, "pressure_plate_hidden_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_beginning", "TextRune2")
spawn("eob_lock_picks", 14,14,3, "eob_lock_picks_1")
spawn("eob_rations", 20,7,3, "eob_rations_2")
spawn("eob_rations", 10,19,2, "eob_rations_3")
spawn("eob_rations", 11,19,2, "eob_rations_4")
spawn("eob_sewers_wall_text_rune1", 18,12,1, "dungeon_wall_text_rune1")
	:setWallText("")
spawn("floor_dirt", 14,16,0, "floor_dirt_1")
spawn("eob_sewers_wall_text_rune1", 15,23,0, "dungeon_wall_text_rune2")
	:setWallText("")
spawn("sewers_fog", 18,15,2, "sewers_fog_2")
spawn("sewers_fog", 22,11,1, "sewers_fog_3")
spawn("sewers_fog", 22,21,2, "sewers_fog_4")
spawn("sewers_fog", 10,23,2, "sewers_fog_5")
spawn("sewers_fog", 6,27,2, "sewers_fog_6")
spawn("sewers_fog", 10,18,0, "sewers_fog_7")
spawn("eob_sewers_secret_door", 17,15,2, "dungeon_secret_door_1")
spawn("eob_sewers_secret_door", 17,17,0, "dungeon_secret_door_2")
spawn("eob_sewers_secret_door", 20,11,1, "dungeon_secret_door_3")
spawn("eob_sewers_secret_door", 22,11,3, "dungeon_secret_door_4")
spawn("eob_sewers_secret_door", 14,24,2, "dungeon_secret_door_6")
spawn("eob_sewers_secret_door", 14,26,0, "dungeon_secret_door_7")
spawn("eob_sewers_secret_door", 14,26,3, "dungeon_secret_door_8")
spawn("eob_sewers_secret_door", 12,26,1, "dungeon_secret_door_9")
spawn("eob_sewers_secret_door", 25,21,0, "dungeon_secret_door_5")
spawn("floor_dirt", 10,17,1, "floor_dirt_4")
spawn("floor_dirt", 10,19,3, "floor_dirt_5")
spawn("floor_dirt", 8,24,3, "floor_dirt_6")
spawn("floor_dirt", 5,28,0, "floor_dirt_7")
spawn("floor_dirt", 14,24,3, "floor_dirt_8")
spawn("floor_dirt", 25,22,2, "floor_dirt_9")
spawn("floor_dirt", 23,20,2, "floor_dirt_10")
spawn("floor_dirt", 21,18,2, "floor_dirt_11")
spawn("floor_dirt", 21,7,3, "floor_dirt_13")
spawn("floor_dirt", 23,12,1, "floor_dirt_14")
spawn("eob_sewers_door_metal", 14,14,0, "eob_sewers_door_metal_1")
spawn("eob_sewers_pressure_plate", 13,18,2, "eob_sewers_pressure_plate_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "dungeon_door_metal_5", "toggle")
spawn("eob_sewers_pressure_plate", 22,14,2, "eob_sewers_pressure_plate_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "dungeon_door_metal_8", "toggle")
spawn("sewers_fog", 25,19,1, "sewers_fog_8")
spawn("dungeon_wall_dirt_1", 25,18,3, "dungeon_wall_dirt_1_2")
spawn("dungeon_wall_dirt_2", 25,18,1, "dungeon_wall_dirt_2_1")
spawn("floor_dirt", 26,19,2, "floor_dirt_12")
spawn("floor_dirt", 24,19,2, "floor_dirt_16")
spawn("eob_sewers_secret_button_large", 25,21,1, "eob_sewers_secret_button_1")
	:addConnector("toggle", "dungeon_secret_door_5", "toggle")
	:addConnector("toggle", "secret_2", "activate")
spawn("floor_dirt", 6,21,2, "floor_dirt_18")
spawn("floor_dirt", 20,25,1, "floor_dirt_20")
spawn("floor_dirt", 17,26,1, "floor_dirt_21")
spawn("floor_dirt", 12,26,2, "floor_dirt_22")
spawn("floor_dirt", 19,22,1, "floor_dirt_23")
spawn("floor_dirt", 19,11,0, "floor_dirt_24")
spawn("dungeon_ivy_1", 25,22,1, "dungeon_ivy_1_1")
spawn("dungeon_ivy_1", 24,19,0, "dungeon_ivy_1_2")
spawn("dungeon_ivy_1", 26,19,0, "dungeon_ivy_1_3")
spawn("dungeon_ivy_1", 26,19,1, "dungeon_ivy_1_4")
spawn("dungeon_ivy_1", 25,20,1, "dungeon_ivy_1_5")
spawn("dungeon_ivy_1", 24,19,2, "dungeon_ivy_1_6")
spawn("dungeon_ivy_2", 25,20,3, "dungeon_ivy_2_1")
spawn("dungeon_ivy_2", 25,18,0, "dungeon_ivy_2_2")
spawn("dungeon_ivy_1", 10,15,2, "dungeon_ivy_1_7")
spawn("dungeon_ivy_1", 20,7,0, "dungeon_ivy_1_8")
spawn("dungeon_ivy_2", 23,18,2, "dungeon_ivy_2_3")
spawn("dungeon_ivy_1", 23,20,1, "dungeon_ivy_1_9")
spawn("dungeon_ivy_2", 7,28,1, "dungeon_ivy_2_4")
spawn("dungeon_ivy_1", 7,28,2, "dungeon_ivy_1_10")
spawn("dungeon_ivy_1", 11,21,2, "dungeon_ivy_1_11")
spawn("dungeon_ivy_2", 11,17,0, "dungeon_ivy_2_5")
spawn("eob_wall_button", 16,24,1, "eob_wall_button_3")
	:addConnector("toggle", "dungeon_door_metal_4", "open")
spawn("dungeon_ivy_1", 17,18,1, "dungeon_ivy_1_12")
spawn("temple_ceiling_lamp", 25,19,0, "temple_ceiling_lamp_1")
spawn("eob_sewers_ceiling_shaft", 25,19,0, "eob_sewers_ceiling_shaft_1")
spawn("script_entity", 13,1,1, "libParty")
	:setSource("-- Library of helper functions for the party entity --\
\
-- returns first Champion of race = race(string) in the party (order_id), otherwise returns nil\
function getFirstPartyRace(race)\
\9for p=1,4 do\
\9\9if party:getChampion(p):getRace() == race then\
\9\9\9return p\
\9\9end\
\9end\
\9return nil\
end\
\
-- returns strength of whole party (number) --\
function getPartyStrength()\
\9local s = 0\
\9for p=1,4 do\
\9\9if party:getChampion(p):getEnabled() and party:getChampion(p):isAlive() then\
\9\9\9s = s + party:getChampion(p):getStat(\"strength\")\
\9\9end\
\9end\
\9return s\
end\
\
-- returns the strongest member of the party (order_id) --\
function getStrongestMember()\
\9local m = 0\
\9for p=1,4 do\
\9\9if party:getChampion(p):getEnabled() and party:getChampion(p):isAlive() then\
\9\9\9if m == 0 then\
\9\9\9\9m = p\
\9\9\9else\
\9\9\9\9if party:getChampion(p):getStat(\"strength\") > party:getChampion(m):getStat(\"strength\") then\
\9\9\9\9\9m = p\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
\9return m\
end\
")
spawn("teleporter", 2,16,3, "teleporter_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(19,23,3,2)
spawn("eob_sewers_wall_text_long", 3,16,1, "eob_sewers_wall_text_long_3")
	:setWallText("Teleport to Level 2")
spawn("eob_sewers_wall_text_long", 3,15,3, "eob_sewers_wall_text_long_5")
	:setWallText("This room is for the Testing only, you can teleport to lower levels.")
spawn("dungeon_ivy_1", 13,16,3, "dungeon_ivy_1_14")
spawn("dungeon_ceiling_root_2", 13,16,2, "dungeon_ceiling_root_2_1")
spawn("dungeon_ceiling_root_3", 14,16,2, "dungeon_ceiling_root_3_1")
spawn("script_entity", 1,11,3, "illusion_pits")
	:setSource("function activate(pit)\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'eob_sewers_pit_illusion_off' then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\9spawn(\"eob_sewers_pit_illusion_on\", pit.level, pit.x, pit.y, 0)\
\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'teleporter' then\
\9\9\9if not e:isActivated() then\
\9\9\9\9e:activate()\
\9\9\9end\
\9\9end\
\9end\
\
\9fw.debugPrint(\"Illusionary pit and Teleporter at \"..pit.x..\",\"..pit.y..\" deactivated\")\
end\
\
function deactivate(pit)\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'eob_sewers_pit_illusion_on' then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\9spawn(\"eob_sewers_pit_illusion_off\", pit.level, pit.x, pit.y, 0)\
\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'teleporter' then\
\9\9\9if e:isActivated() then\
\9\9\9\9e:deactivate()\
\9\9\9end\
\9\9end\
\9end\
\9\
\9fw.debugPrint(\"Illusionary pit and Teleporter at \"..pit.x..\",\"..pit.y..\" activated\")\
end\
\
function toggle(pit)\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'teleporter' then\
\9\9\9if e:isActivated() then\
\9\9\9\9e:deactivate()\
\9\9\9\9self.deactivate(pit)\
\9\9\9else\
\9\9\9\9e:activate()\
\9\9\9\9self.activate(pit)\
\9\9\9end\
\9\9end\
\9end\
end\
\
function damageToPartyActivate()\
\9fw.addHooks('party','teleporter_pits', {\
\9\9onMove = function(self,dir)\
\9\9\9local p = false\
\9\9\9local t = false\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if e.name == 'eob_sewers_pit_illusion_on' then\
\9\9\9\9\9p = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'teleporter' then\
\9\9\9\9\9t = e\
\9\9\9\9end\
\9\9\9end\
\9\9\9for e in help.entitiesAtSameTile(self) do\
\9\9\9\9if e.name == 'eob_sewers_pit_illusion_on' then\
\9\9\9\9\9p = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'teleporter' then\
\9\9\9\9\9t = e\
\9\9\9\9end\
\9\9\9end\
\9\9\9if p and t then\
\9\9\9\9local timer = findEntity(\"teleporter_pits_timer\")\
\9\9\9\9if (not timer) then\
\9\9\9\9\9timer = spawn(\"timer\", t.level, t.x, t.y, t.facing, \"teleporter_pits_timer\")\
\9\9\9\9\9timer:setTimerInterval(0.4)\
\9\9\9\9\9timer:addConnector('activate','illusion_pits','doDamageToParty')\
\9\9\9\9end\
\9\9\9\9timer:activate()\
\9\9\9\9playSound(\"party_fall\")\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Party damage from illusionary pits activated\")\
end\
\
function doDamageToParty()\
\9power = 30\
\9damageTile(party.level, party.x, party.y, 0, 0, \"physical\", power)\
\9playSound(\"party_land\")\
\9party:shakeCamera(0.3,0.3)\
\9fw.debugPrint(\"Party gets damage from illusionary pits by power = \"..power)\
\9-- timer = findEntity(\"teleporter_pits_timer\")\
\9-- timer:deactivate()\
\9teleporter_pits_timer:deactivate()\
end\
")
spawn("script_entity", 1,12,0, "throwable_portcullis")
	:setSource("activeThrowableDoor = {}\
\
function activate()\
\
\9fw.addHooks('party','throwable_portcullis', {\
\9\9onMove = function(self,dir)\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if ( (e.name == 'door_throwable' or e.name == 'door_throwable_force') and \
\9\9\9\9\9e.facing == (dir + 2)%4) then\
\9\9\9\9\9throwable_portcullis.doTheMagic(e)\
\9\9\9\9end\
\9\9\9end\
\9\9\9for e in help.entitiesAtSameTile(self) do\
\9\9\9\9if ( (e.name == 'door_throwable' or e.name == 'door_throwable_force') and \
\9\9\9\9\9e.facing == dir) then\
\9\9\9\9\9throwable_portcullis.doTheMagic(e)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9})\
\
\9local timer = spawn(\"timer\", 1, 1, 1, 0, \"throwable_door_timer\")\
\9timer:setTimerInterval(0.1)\
\9timer:addConnector('activate','throwable_portcullis','deactivate')\
\9\9\
\9fw.debugPrint(\"Throwable portcullis activated\")\
end\
\
function doTheMagic(script)\
\9if script.getState() == \"closed\" then\
\9for e in help.entitiesAtSameTile(script) do\
\9\9if ( (e.name == 'eob_sewers_door_portcullis') and\
\9\9\9e.facing == script.facing) then\
\9\9\9e:setDoorState('closed')\
\9\9\9-- if not findEntity(\"blocker_\"..e.id) then\
\9\9\9--\9spawn(\"blocker\", e.level, e.x, e.y, e.facing, \"blocker_\"..e.id)\
\9\9\9-- end\
\9\9\9local timer = findEntity(\"throwable_door_timer\")\
\9\9\9timer:activate()\
\9\9\9throwable_portcullis.activeThrowableDoor[script.id] = e.id\
\9\9end\
\9end\9\
\9end\
end\
\
function deactivate()\
\9for id,eid in pairs(throwable_portcullis.activeThrowableDoor) do\
\9\9local door = findEntity(eid)\
\9\9door:setDoorState('open')\
\9\9throwable_portcullis.activeThrowableDoor[id] = nil\
\9\9for e in help.entitiesAtSameTile(door) do\
\9\9\9if ( e.name == 'door_throwable_force' ) then\
\9\9\9\9if (forceable_doors.isForced()) then\
\9\9\9\9\9self.open(e)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
\9local timer = findEntity(\"throwable_door_timer\")\
\9timer:deactivate()\
end\
\
function open(script)\
\9if script.getState() == \"closed\" then\
\9\9script.setState(\"open\")\
\9\9local fake = findEntity(\"fake_portcullis_\"..script.id)\
\9\9local door = findEntity(\"portcullis_\"..script.id)\
\9\9local block = findEntity(\"blocker_\"..script.id)\
\9\9fake:destroy()\
\9\9block:destroy()\
\9\9door:setDoorState(\"closed\")\
\9\9door:open()\
\9end\
end\
\
function close(script)\
\9if script.getState() == \"open\" then\
\9\9script.setState(\"closed\")\
\9\9local door = findEntity(\"portcullis_\"..script.id)\
\9\9spawn(\"blocker\", script.level, script.x, script.y, script.facing, \"blocker_\"..script.id)\
\9\9door:setDoorState(\"open\")\
\9\9door:close()\
\9\9local timer = findEntity(\"timer_\"..script.id)\
\9\9timer:activate()\
\9end\
end\
\
function spawnFakePortcullis(script)\
\9spawn(\"eob_portcullis_throwable\", script.level, script.x, script.y, script.facing, \"fake_portcullis_\"..script.id)\
\9local door = findEntity(\"portcullis_\"..script.id)\
\9local timer = findEntity(\"timer_\"..script.id)\
\9timer:deactivate()\
\9door:setDoorState(\"open\")\
end")
spawn("script_entity", 1,13,2, "ladders_updown")
	:setSource("\
function activate()\
\9fw.addHooks('party','ladders_updown', {\
\9\9onMove = function(self,dir)\
\9\9\9local ldn = false\
\9\9\9local lup = false\
\9\9\9local t = false\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if e.name == 'eob_ladder_down' then\
\9\9\9\9\9ldn = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'eob_ladder_up' then\
\9\9\9\9\9lup = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'teleporter' then\
\9\9\9\9\9t = e\
\9\9\9\9end\
\9\9\9end\9\9\
\9\9\9if ldn and t then\
\9\9\9\9playSound(\"ladder_steps2\")\
\9\9\9\9hudPrint(\"Going down...\")\
\9\9\9end\
\9\9\9if lup and t then\
\9\9\9\9playSound(\"ladder_steps2\")\
\9\9\9\9hudPrint(\"Going up...\")\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Party ladders activated\")\
end")
spawn("eob_sewers_wall_drainage", 17,17,1, "eob_sewers_wall_drainage_4")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 19,17,3, "eob_sewers_wall_drainage_5")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 25,21,3, "eob_sewers_wall_drainage_6")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 23,21,1, "eob_sewers_wall_drainage_7")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 13,23,0, "eob_sewers_wall_drainage_9")
	:setWallText("")
spawn("script_entity", 20,0,1, "logfw_init")
	:setSource("spawn(\"LoGFramework\", 1,1,1,0,'fwInit')\
fwInit:open()\
\
function main()\
\9fw.debug.enabled = false\
\9fwInit:close() --must be called\
end\
\
\
\
\
")
spawn("timer", 0,8,0, "timer_script_activation")
	:setTimerInterval(0.6)
	:activate()
	:addConnector("activate", "script_start", "activate")
	:addConnector("activate", "timer_script_activation_off", "deactivate")
spawn("script_entity", 1,9,0, "timer_script_activation_off")
	:setSource("function deactivate()\
\9timer_script_activation:deactivate()\
end")
spawn("script_entity", 1,8,2, "script_start")
	:setSource("-- Start scripts on timer --\
\
function activate()\
\9\
\9if (not fw.debug.enabled) then script_beginning.FallingRocks() end\
\9illusion_pits.damageToPartyActivate()\
\9throwable_portcullis.activate()\
\9ladders_updown.activate()\
\9forceable_doors.activate()\
\9party_rotators.activate()\
\9drainage_eyes_alcoves.activate()\
\9\
\9-- Wently's Notes --\
\9spawn(\"WentlysNoteSpawner\", 1,1,1,0,'wnInit')\
\9wnInit:open()\
\9wnInit:destroy()\
\9wentlys_notes.activate()\
end")
spawn("script_entity", 17,1,1, "scriptEffects")
	:setSource("-- script for timed effects [WIP, testing...] --\
-- \
--  \"strBoost\": increasing strength \
-- \
\
ActiveEffect = {}\
\
function activateEffect(effect, champion, amount, duration)\
\9if self.ActiveEffect[effect..\"_\"..champion] then\
\9\9return false\
\9end\
\9fw.debugPrint(\"Effect \"..effect..\" is activated: Champion=\"..champion..\", Amount=\"..amount..\", Duration=\"..duration..\"s\")\
\9self.ActiveEffect[effect..\"_\"..champion] = { amount=amount, duration=duration }\
\9local timer = findEntity(\"timer_effect_\"..effect..\"_\"..champion)\
\9timer:setTimerInterval(duration)\
\9timer:activate()\
\9return true\
end\
\
function stopEffect_strBoost(id)\
\9local champion = party:getChampion(id)\
\9champion:setStatMax(\"strength\", champion:getStatMax(\"strength\") - self.ActiveEffect[\"strBoost_\"..id].amount)\
\9self.ActiveEffect[\"strBoost_\"..id] = nil\
\9local timer = findEntity(\"timer_effect_strBoost_\"..id)\
\9timer:deactivate()\
\9playSound(\"generic_spell\")\
\9fw.debugPrint(\"strBoost deactivated for champion=\"..id)\
\9fw.debugPrint(\"Actual Stat=\"..champion:getStat(\"strength\")..\", StatMax=\"..champion:getStatMax(\"strength\"))\
\9hudPrint(champion:getName()..\" feels less stronger!\")\
end\
function stopEffect_strBoost_1()\
\9self.stopEffect_strBoost(1)\
end\
function stopEffect_strBoost_2()\
\9self.stopEffect_strBoost(2)\
end\
function stopEffect_strBoost_3()\
\9self.stopEffect_strBoost(3)\
end\
function stopEffect_strBoost_4()\
\9self.stopEffect_strBoost(4)\
end\
\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_1\")\
timer_effect_strBoost_1:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_1\")\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_2\")\
timer_effect_strBoost_2:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_2\")\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_3\")\
timer_effect_strBoost_3:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_3\")\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_4\")\
timer_effect_strBoost_4:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_4\")\
")
spawn("floor_corpse", 25,19,1, "floor_corpse_2")
spawn("secret", 18,21,2, "secret_3")
spawn("script_entity", 1,14,2, "forceable_doors")
	:setSource("forceable_doors_to_close = {}\
\
function activate()\
\9fw.addHooks('party','force_door', {\
\9\9onMove = function(self,dir)\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
--\9\9\9\9if ((e.name == 'eob_sewers_door_metal_force') and e.facing == (dir + 2)%4) then\
-- carlos update to include more doors\
\9\9\9\9if \9   (string.find(e.name,\"door\") ~= nil \
\9\9\9\9\9and string.find(e.name,\"force\") ~= nil \
\9\9\9\9\9and e.facing == (dir + 2)%4)\
\9\9\9\9then\
\9\9\9\9\9forceable_doors.force(e)\
\9\9\9\9end\
\9\9\9end\
\9\9\9for e in help.entitiesAtSameTile(self) do\
--\9\9\9\9if ((e.name == 'eob_sewers_door_metal_force')\
\9\9\9\9if \9   (string.find(e.name,\"door\") ~= nil \
\9\9\9\9\9and string.find(e.name,\"force\") ~= nil \
\9\9\9\9\9and e.facing == dir) then\
\9\9\9\9\9forceable_doors.force(e)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Forceable / Stucked doors activated\")\
end\
\
function isForced()\
\9local member = party:getChampion(libParty.getStrongestMember())\
\9local partystr = member:getStat(\"strength\")\
\9local doorstr = math.random(1,25)\
\9fw.debugPrint(\"ForceDoor: partyStr=\"..partystr..\", doorStr=\"..doorstr)\
\9hudPrint(\"ForceDoor: partyStr=\"..partystr..\", doorStr=\"..doorstr)\
\9if (partystr>doorstr) then\
\9\9hudPrint(member:getName()..texts.getT(\"door_member_try_open_ok\"))\
\9\9return true\
\9else\
\9\9hudPrint(member:getName()..texts.getT(\"door_member_try_open_failed\"))\
\9\9hudPrint(texts.getT(\"door_party_try_open_again\"))\
\9\9return false\
\9end\
end\
\
function force(door)\
\9if door:isClosed() then\
\9\9if (self.isForced()) then\
\9\9\9door:open()\
\9\9else\
\9\9\9door:open()\
\9\9\9local timer = findEntity(\"force_open_door_timer\")\
\9\9\9if (not timer) then\
\9\9\9\9timer = spawn(\"timer\", self.level, self.x, self.y, self.facing, \"force_open_door_timer\")\
\9\9\9\9timer:setTimerInterval(0.4)\
\9\9\9\9timer:addConnector(\"activate\",\"forceable_doors\",\"close\")\
\9\9\9end\
\9\9\9forceable_doors.forceable_doors_to_close[door.id] = door\
\9\9\9timer:activate()\
\9\9end\
\9end\
end\
\
function close()\
\9force_open_door_timer:deactivate()\
\9for id,door in pairs(forceable_doors.forceable_doors_to_close) do\
\9\9door:close()\
\9\9forceable_doors.forceable_doors_to_close[id] = nil\
\9end\
end")
spawn("eob_sewers_cave_in_ceiling", 10,14,0, "eob_sewers_cave_in_ceiling_2")
spawn("eob_sewers_cave_in_ceiling", 10,13,0, "eob_sewers_cave_in_ceiling_3")
spawn("script_entity", 1,15,2, "party_rotators")
	:setSource("function activate()\
\
fw.addHooks('party','party_rotator', {\
\9onMove = function(self,dir)\
\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9if e.name == 'teleporter_rotator90' then\
\9\9\9\9e:setTeleportTarget(e.x, e.y, (self.facing + 1)%4)\
\9\9\9\9fw.debugPrint(\"Party rotated by 90\")\
\9\9\9end\
\9\9\9if e.name == 'teleporter_rotator180' then\
\9\9\9\9e:setTeleportTarget(e.x, e.y, (self.facing + 2)%4)\
\9\9\9\9fw.debugPrint(\"Party rotated by 180\")\
\9\9\9end\
\9\9\9if e.name == 'teleporter_rotator270' then\9\9\9\9\9\
\9\9\9\9e:setTeleportTarget(e.x, e.y, (self.facing + 3)%4)\
\9\9\9\9fw.debugPrint(\"Party rotated by 270\")\
\9\9\9end\
\9\9end\
\9end\
})\
fw.debugPrint(\"Teleporter rotators activated\")\
\
end")
spawn("script_entity", 1,16,3, "wentlys_notes")
	:setSource("function activate()\
\
wentlys_note_found = {}\
\
fw.addHooks('party','wentlys_notes', {\
\9onPickUpItem = function(self,item)\
\9\9if item.name == 'wentlys_note' then\
\9\9\9local isfound = false\9\
\9\9\9for id,note in pairs(wentlys_notes.wentlys_note_found) do\
\9\9\9\9if item.id == note then\
\9\9\9\9\9isfound = true\
\9\9\9\9end\
\9\9\9end\
\9\9\9if (not isfound) then\
\9\9\9\9-- wentlys_notes.wentlys_note_found[item.id] = item.id\
\9\9\9\9local n = #wentlys_notes.wentlys_note_found\
\9\9\9\9wentlys_notes.wentlys_note_found[n+1] = item.id\
\9\9\9\9hudPrint(\"New Wently's note found! (\"..#wentlys_notes.wentlys_note_found..\"/\"..wentlys_note_total:getValue()..\")\")\
\9\9\9\9playSound(\"discover_spell\")\
\9\9\9end\
\9\9end\
\9end\
})\
fw.debugPrint(\"Wently's Note counter activated\")\
\
end")
spawn("blocker", 8,18,2, "blocker_5")
spawn("blocker", 6,21,3, "blocker_6")
spawn("blocker", 11,26,2, "blocker_8")
spawn("eob_leech", 6,25,0, "eob_leech_3")
spawn("eob_ladder_down", 18,23,1, "eob_ladder_down_2")
spawn("teleporter", 18,23,3, "teleporter_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(19,23,3,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_pit_fake", 18,23,3, "eob_sewers_pit_fake_2")
spawn("blocker", 22,9,3, "blocker_9")
spawn("script_entity", 15,1,2, "libObject")
	:setSource("-- Library of helper functions for the objects --\
\
-- returns Item if alcove contains the given item (by name)\
function containsItem(alcove, item_name)\
    if alcove:getItemCount() == 0 then\
\9\9return false\
\9end\
\9for it in alcove:containedItems() do\
      \9if it.name == item_name then\
         \9return it\
      \9end\
   \9end\
   \9return false\
end")
spawn("eob_sewers_wall_pipe", 20,11,2, "eob_sewers_wall_pipe_1")
	:setWallText("This slimy, smelly drain pipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 20,13,0, "eob_sewers_wall_pipe_2")
	:setWallText("")
spawn("eob_sewers_wall_pipe", 20,23,2, "eob_sewers_wall_pipe_3")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 20,25,0, "eob_sewers_wall_pipe_4")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 6,24,1, "eob_sewers_wall_pipe_5")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 8,24,3, "eob_sewers_wall_pipe_6")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("script_entity", 23,0,2, "add_spells")
	:setSource("-- AD&D spell system and spells by JKos\
-- spell book \
-- spells must be memorized by resting before they can be cast\
-- \
settings = {}\
\
function activate()\
\
\9defineSpells()\
\9for i,champ in ipairs(help.getChampions()) do\
\9\9if champ:getClass() == 'Mage' then\
\9\9\9initChampion(champ)\
\9\9end\
\9end\
\9\
\9fw.addHooks('party','add_spells_memorize',{\
\9\9\9onRest = function(p)\
\9\9\9\9add_spells.learnSpells()\
\9\9\9end,\
\9\9\9onWakeUp = function(p)\
\9\9\9\9add_spells.stopLearnSpells()\
\9\9\9end,\
\9\9\9onLevelUp = function(champ)\
\9\9\9\9if champ:getClass() == 'Mage' then\
\9\9\9\9\9add_spells.updateSpellPoints(champ)\
\9\9\9\9end\
\9\9\9end\
\9\9}\9\
\9)\9\
\9\
\9fw.setHook('party.add_spells.onCastSpell',_onCastSpell)\
\
end\
\
\
function defineSpells()\
\
\
\9fw_magic.defineSpell{\
\9\9name='magic_missile',\
\9\9uiname='Magic missile',\
\9\9description = [[\
Range: Long\
Duration: Instantaneous\
Area of Effect: One target\
\
The mage creates a bolt of magic force that unerringly strikes one target. \
Magic Missiles do greater damage as a mage increases in level. \
Initially, Magic Missile does two to five points of damage, and for every two extra levels the spell does two to five more points. So a first or second-level mage does two to five points of damage, but a third or fourth-level mage does four to ten, and so on.]],\
\9\9level=1,\
\9\9runes='A',\
\9\9book_page=1,\
\9\9--skill='spellcraft',\
\9\9projectile='spell_projectile',\
\9\9sound='fireball_launch',\
\9\9onHitSound='fireball_hit',\
\9\9particleEffect='magic_missile',\
\9\9onHitParticleEffect='magic_missile_hit',\
\9\9speed=12,\
\9\9damageType = 'physical',\
\9\9calculateDamage=function(caster)\
\9\9\9local modifier = math.ceil(caster:getLevel()/2)\
\9\9\9return  math.random(modifier*2, modifier * 5)\9\
\9\9end\
\9}\
\9\
\9fw_magic.defineSpell{\
\9\9name='fireball',\
\9\9uiname='Fireball',\
\9\9description = [[Range: Long\
Duration: Instantaneous\
Area of Effect: Target square\
\
A fireball is an explosive blast of flame that damages everything in the target square. The explosion does one to six points of damage for every level of the caster to a maximum of 10th level. For example a 10th level mage does 10-60 points of damage.\
 ]],\9\9\
\9\9level=3,\
\9\9runes='AD',\
\9\9book_page=3,\
\9\9projectile='spell_projectile',\
\9\9sound='fireball_launch',\
\9\9onHitSound='fireball_hit',\
\9\9particleEffect='fireball',\
\9\9onHitParticleEffect='fireball_hit',\
\9\9speed=14,\
\9\9damageType = 'fire',\
\9\9calculateDamage=function(caster)\
\9\9\9return math.random(caster:getLevel()*2,caster:getLevel() * 6)\
\9\9end\
\9}\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='flame_arrow',\
\9\9uiname='Flame arrow',\
\9\9description = [[Range: Long\
Duration: Special\
Area of Effect: One target\
\
The caster of this spell can fire a flaming energy 'arrow' that does 3 to 30 hit points of damage. When the mage reaches 10th level the amount of damage is doubled to 6 to 60 points. ]],\9\9\
\9\9level=3,\
\9\9runes='AC',\
\9\9book_page=3,\
\9\9projectile='arrow',\
\9\9sound='frostbolt_launch',\
\9\9onHitSound='fireball_hit',\
\9\9particleEffect='fireball',\
\9\9onHitParticleEffect='fireball_hit',\
\9\9speed=14,\
\9\9damageType = 'fire',\
\9\9calculateDamage=function(caster)\
\9\9\9local modifier = 1\9\9\9\
\9\9\9if caster:getLevel() > 9 then modifier = 2 end\
\9\9\9return math.random(3 * modifier,30 * modifier)\
\9\9end\
\9}\9\9\
\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='melfs_acid_arrow',\
\9\9uiname=\"Melf's acid arrow\",\
\9\9description = [[Range: Long\
Duration: Special\
Area of Effect: One target\
\
this spell creates a magical arrow that launches itself at a target as though it were fired by a fighter of the same level as the mage. The arrow is not affect by distance. The arrow does two to eight points of damage per attack. For every three levels the mage has earned, the arrow gains an additional attack. For example, at 3rd to 5th level the arrow attacks twice, and at 6th to 8th level the arrow attacks 3 times. ]]\
,\9\9\
\9\9level=2,\
\9\9runes='AB',\
\9\9book_page=3,\
\9\9projectile='spell_projectile',\
\9\9sound='poison_bolt_launch',\
\9\9onHitSound='poison_bolt_hit',\
\9\9particleEffect='poison_bolt',\
\9\9onHitParticleEffect='hit_slime',\
\9\9speed=14,\
\9\9onHit = add_spells.melfs_acid_arrow_onHit\
\9}\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='lightning_bolt',\
\9\9uiname='Lightning bolt',\
\9\9description = [[Range: Long\
Duration: Instantaneous\
Area of Effect: 2 square\
\
This spell alows the mage to cast a powerful bolt of electrical energy. The spell flies to its first target and then continues into the next square. The bolt does one to six points of damage for every level of the caster to a maximum of 10th level. For example, a 10th level mage does 10-60 points of damage.\
 ]],\9\9\
\9\9level=3,\
\9\9runes='AE',\
\9\9book_page=3,\
\9\9projectile='spell_projectile',\
\9\9sound='lightning_bolt_launch',\
\9\9onHitSound='lightning_bolt_hit',\
\9\9particleEffect='lightning_bolt',\
\9\9onHitParticleEffect='lightning_bolt_hit',\
\9\9speed=14,\
\9\9area = {from={0,0},to={1,0}},\
\9\9damageType = 'shock',\
\9\9calculateDamage=function(caster)\
\9\9\9return math.random(caster:getLevel(),caster:getLevel()*6)\9\
\9\9end\9\9\
\9}\9\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='cone_of_cold',\
\9\9uiname='Cone of cold',\
\9\9description = [[Range: 0\
Duration: Instantaneous\
Area of Effect: 3 squares\
\
This spell causes the mage to project a chilling cone of sub-zero cold. The numbing cone causes two to five points of damage per level of the caster. For example, a 10th level mage would be 20-50 points of damage.]]\
,\9\9\
\9\9level=5,\
\9\9runes='AH',\
\9\9book_page=3,\
\9\9sound='frostbolt_launch',\
\9\9onHitSound='frostbolt_hit',\
\9\9particleEffect='frostbolt',\
\9\9onHitParticleEffect='frostbolt_hit',\
\9\9speed=14,\
\9\9area = {from={0,0},to={2,0}},\
\9\9damageType = 'cold',\
\9\9calculateDamage=function(caster)\
\9\9\9return  math.random(caster:getLevel()*2,caster:getLevel()*5)\9\
\9\9end,\9\9\
\9\9onCast = function(caster)\
\9\9\9local entity = caster\
\9\9\9if caster.getOrdinal then\
\9\9\9\9entity = party\
\9\9\9end\
\9\9\9local x,y = help.getCoordsOfTileAtDir(entity,entity.facing,1)\
\9\9\9fw_magic.dealSpellDamage('cone_of_cold',caster,x,y)\
\9\9end\
\9}\9\9\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='ice_storm',\
\9\9uiname='Ice storm',\
\9\9description = [[Range: Medium to long\
Duration: Instantaneous\
Area of Effect: A cross-shaped area of 3x3 squares\
\
The magically created storn this spell produces is a pounding torrent of huge hailstones. The spell pummels the targets with 3-30 points of damage. The range of this spell is based on the caster's level.]]\
,\9\9\
\9\9level=4,\
\9\9runes='AI',\
\9\9book_page=4,\
\9\9sound='frostbolt_launch',\
\9\9onHitSound='frostbolt_hit',\
\9\9particleEffect='ice_shards',\
\9\9onHitParticleEffect='ice_shards',\
\9\9speed=14,\
\9\9area = {from={-1,-1},to={1,1}},\
\9\9damageType = 'cold',\
\9\9calculateDamage=function(caster)\
\9\9\9return math.random(3,30)\
\9\9end,\9\9\
\9\9onCast = function(caster)\
\9\9\9local range = 4 \
\9\9\9local entity = caster\
\9\9\9if caster.getOrdinal then\
\9\9\9\9entity = party\
\9\9\9end\
\9\9\9range = caster:getLevel()\
\9\9\9if range < 4 then range = 4 end\
\9\9\9\
\9\9\9local target = help.nextEntityAheadOf(entity, range,'monster',true)\9\
\9\9\9local x,y = 0,0\9\
\9\9\9if target then\
\9\9\9\9x = target.x\
\9\9\9\9y = target.y\
\9\9\9else\
\9\9\9\9x,y = help.getCoordsOfTileAtDir(entity,entity.facing,range)\
\9\9\9end\
\9\9\9-- cross shaped damage area hack --\
\9\9\9fw_magic.spells['ice_storm'].area = {from={-1,0},to={1,0}}\
\9\9\9fw_magic.dealSpellDamage('ice_storm',caster,x,y)\
\9\9\9fw_magic.spells['ice_storm'].area = {from={0,1},to={0,1}}\
\9\9\9fw_magic.dealSpellDamage('ice_storm',caster,x,y)\
\9\9\9fw_magic.spells['ice_storm'].area = {from={0,-1},to={0,-1}}\
\9\9\9fw_magic.dealSpellDamage('ice_storm',caster,x,y)\
\9\9end\
\9}\9\
\9\9\
\9fw_magic.defineSpell{\
\9\9name='shield',\
\9\9uiname='Shield',\
\9\9description = [[Range:0\
Duration: Short to medium\
Area of Effect: Spell-caster\
\
This spell produves an invisible barrier in front of the mage that totally blocks Magic Missile attacks. It also offers AC2 against hurled weapons (darts, spears) and AC 3 against propelled missiles (arrows, sling-stones). The spell does not have a cumulative effect with the Armor spell. THe spell duration increases with the level of the caster. ]]\
\9,\9\9\
\9\9level=1,\
\9\9runes='D',\
\9\9book_page=1,\
\9\9onCast = add_spells.shield\
\9}\9\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='armor',\
\9\9uiname='Armor',\
\9\9description = [[Range:0\
Duration: Special\
Area of Effect: Once Character\
\
With this spell the mage can surround a character with a magical field that protects as chain mail (AC 6). The spell has no effect on characters who already have AC 6 or greater and it does not have a cumulative effect with the Shield spell. The spell lasts until the character suffers 8 points + 1 per level of the caster of damage or a Dispel Magic is cast. ]]\
\9,\9\9\
\9\9level=1,\
\9\9runes='F',\
\9\9book_page=1,\
\9\9onCast = add_spells.armor\
\9}\9\
\9\9\
\9fw_magic.defineSpell{\
\9\9name='haste',\
\9\9uiname='Haste',\
\9\9description = [[Range:0\
Duration: Medium\
Area of Effect: One target per caster level \
\
This spell causes all targets to move and fight at double their normal rate. The spell's duration increases with the level of the caster.]],\9\9\
\9\9level=3,\
\9\9runes='AF',\
\9\9book_page=3,\
\9\9onCast = add_spells.haste\
\9}\9\
\
\9fw_magic.defineSpell{\
\9\9name='invisibility',\
\9\9uiname='Invisibility',\
\9\9description = [[Range:0\
Duration: Special\
Area of Effect: One target\
\
This spell causes the target to vanish from sight. The invisible character remains unseen until he attacks a monster or is hit. Certain powerful monsters can sense invisible characters, or even see them outright. ]]\
,\9\9\
\9\9level=2,\
\9\9runes='H',\
\9\9book_page=2,\
\9\9onCast = add_spells.invisibility\
\9}\9\9\
\9fw_magic.defineSpell{\
\9\9name='invisibility_10_radius',\
\9\9uiname='Invisibility 10\\' radius',\
\9\9description = [[Range:0\
Duration: Special\
Area of Effect: Entire party\
\
This spell is similar to the second-level invisibility spell, except that the entire party is affected. If an individual character is hit while under the spell's effect, that character becomes visible. If any character in the party attacks, the spell is broken for all. ]]\
,\9\9\9\
\9\9level=3,\
\9\9runes='I',\
\9\9book_page=3,\
\9\9onCast = add_spells.invisibility_10_radius\
\9}\9\
\
\9fw_magic.defineSpell{\
\9\9name='hold_monster',\
\9\9uiname='Hold monster',\
\9\9description = [[Range:Long\
Duration:Medium\
Area of Effect:One square\
\
This spell is similar to the Hold Person spell except that if affects a wider range of creatures. The spell does not affect undead creatures. The spell's duration increases with the level of the caster. ]]\
,\9\9\9\9\9\
\9\9level=5,\
\9\9runes='E',\
\9\9book_page=5,\
\9\9onCast = add_spells.hold_monster\
\9}\9\9\9\9\
\
\9\
\9fw_magic.defineSpell{\
\9\9name='burning_hands',\
\9\9uiname='Burning hands',\
\9\9description = [[Range:Close\
Duration: Instantaneous\
Area of Effect: One target\
\
When a mage casts this spell, a jet of searing flame shoots from hisfingertips. The damage inflicted bu the flame increases as the mage increases in level and gains power. The spell does one to three points of damage plus two points per level of the caster. For example, a 10th level mage would do 21-23 points of damage.]]\
,\9\9\9\9\9\
\9\9level=1,\
\9\9runes='B',\
\9\9book_page=1,\
\9\9onCast = function(caster, x, y, direction, skill)\
\9\9\9local dx,dy = getForward(direction)\
\9\9\9playSoundAt(\"fireburst\",party.level,x,y)\
\9\9\9local originator = 2 ^ (caster:getOrdinal()+1) \
\9\9\9local skill = caster:getLevel()\
\9\9\9damageTile(party.level, x+dx, y+dy, direction, originator, 'fire', 3+skill*2)\
\9\9end\
\9}\9\
\9\
\9fw_magic.defineSpell{\
\9\9name='ice_shards',\
\9\9uiname='Vampiric touch',\
\9\9description = [[Range:Close\
Duration:One attack\
Area of Effect:Caster\
  When the caster touches an opponent with a successful attack, the spell does 1-6 points of damage for every two levels of the mage. For example, a 10th level mage would do 5 to 30 points of damage. These points in turn are transferred temporarily to the mage, so any damages he takes is subtracted from these points first.]],\9\9\9\9\9\
\9\9level=3,\
\9\9runes='BD',\
\9\9book_page=1,\
\9\9onCast = function(caster, x, y, direction, skill)\
\9\9\9local dx,dy = getForward(direction)\
\9\9\9playSoundAt(\"snail_attack\",party.level,x,y)\
\9\9\9local originator = 2 ^ (caster:getOrdinal()+1) \
\9\9\9local skill = caster:getLevel()\
\9\9\9local damage = math.random(1*skill,6*skill)\
\9\9\9damageTile(party.level, x+dx, y+dy, direction, originator + 1, 'physical', damage)\
\9\9\9caster:modifyStat('health', damage)\
\9\9end\
\9}\9\9\
\
\9fw_magic.defineSpell{\
\9\9name='stoneskin',\
\9\9uiname='Stoneskin',\
\9\9description = [[Range:0\
Duration: Special\
Area of Effect: 1 character\
\
This spell grants the recipient virtual immunity to any attack by cut, blow, projectile, or the like. Stoneskin protects the user from almost any non-magical attack and also gives +35 resistance to fire. The spell lasts for one to four attacks plus one for every two levels of the caster. For example, a 9th level mage casting Stoneskin would protect against 5 to 8 attacks.]]\
,\9\9\9\9\9\
\9\9level=4,\
\9\9runes='BC',\
\9\9book_page=4,\
\9\9onCast = add_spells.stoneskin\
\9}\9\9\9\9\9\9\
\
end\
\
-- SPELLS ++\
\
melfs_acid_arrow_onHit = function(projectile,target,damage,damageType)\
\9\9\9if target.getOrdinal then\
\9\9\9\9target = party\
\9\9\9end\
\9\9\9local caster = fw.getById(data.get(projectile,'caster_id')) \
\9\9\
\9\9\9local callback = function(caster_id,target_id)\
\9\9\9\9\9local target = fw.getById(target_id) \
\9\9\9\9\9local caster = fw.getById(caster_id) \
\9\9\9\9\9local originator = 0 \
\9\9\9\9\9local modifier = 1\
\9\9\9\9\9local damage = math.random(2,6)\9\
\9\9\9\9\9\
\9\9\9\9\9if caster.getOrdinal then\
\9\9\9\9\9\9originator = 2 ^ (caster:getOrdinal()+1) \
\9\9\9\9\9\9modifier = math.ceil(caster:getLevel()/2)\
\9\9\9\9\9end\
\9\9\9\9\9\9\9\
\9\9\9\9\9damageTile(target.level,target.x,target.y,(target.facing + 2)%4,originator+1, 'physical',damage)\
\9\9\9\9\9local fx = spawn('fx',target.level,target.x,target.y,target.facing)\
\9\9\9\9\9fx:setParticleSystem('hit_slime')\
\9\9\9\9\9fx:translate(0,1,0)\9\9\
\9\9\9end\
\9\9\9local casterLevel = 4\
\9\9\9if caster.getLevel then\
\9\9\9\9casterLevel = caster:getLevel()\
\9\9\9end\
\9\9\9local attacks = math.ceil(casterLevel/3)\9\
\9\9\9fw.repeatFunction(attacks,1,{fw.getId(caster),fw.getId(target)},callback,true)\9\9\9\
\9\9\9return false\
end\
\
-- SHIELD --\
\
settings.shield = {}\
settings.shield.level = 1\
settings.shield.duration = 5 --seconds + (skill/2)\
settings.shield.missiles = 6 -- how many damagepoints are subtracted (max value)\
settings.shield.throwing = 8 -- how many damagepoints are subtracted (max value)\
\
function shield(caster, x, y, direction, skill)\
\9skill = 1\
\9if (caster.getLevel) then\
\9 \9skill = caster:getLevel() \
\9end\
\9\
\9local timerId = fw_magic.createSpellTimer(caster,settings.shield.duration+skill/2,{'add_spells','shieldDestructor'})\
\9playSoundAt(\"fireball_launch\",party.level,x,y)\
\9\
\9fw.addHooks(fw.getId(caster),timerId,{\
\9\9onProjectileHit = function(champion,projectile,damage,damageType)\
\9\9\9if projectile.name == 'magic_missile'  then\
\9\9\9\9hudPrint('Magic missile deflected')\
\9\9\9\9return false\
\9\9\9end\
\9\9\9if help.isEntityType(projectile,'item_missileweapon') then\
\9\9\9\9champion:damage(damage - math.random(add_spells.settings.shield.missiles), damageType)\
\9\9\9\9hudPrint('Shield spell deflected some damage')\
\9\9\9\9champion:playDamageSound()\
\9\9\9\9return false\
\9\9\9end\
\9\9\9if help.isEntityType(projectile,'item_throwingweapon') then\
\9\9\9\9champion:damage(damage - math.random(add_spells.settings.shield.throwing), damageType)\
\9\9\9\9hudPrint('Shield spell deflected some damage')\
\9\9\9\9champion:playDamageSound()\
\9\9\9\9return false\
\9\9\9end\9\9\9\
\9\9\
\9\9end\
\9}\
\9)\
end\
\
function shieldDestructor(timer)\
\9fw_magic.spellTimerDestructor(timer)\
\9hudPrint('The effect of the shield spell has worn out.')\
end\
\
-- STONESKIN--\
\
\
function stoneskin(caster, x, y, direction, skill)\
\9local selector = fw_magic.createTargetSelector()\
\9selector.skill = caster:getLevel()\
\9selector.onSelectChampion = add_spells.castStoneskin\
end\
\
function castStoneskin(target,skill)\9\
\9\
\9skill = math.random(1,4) + math.floor(skill/2)\
\9playSoundAt(\"generic_spell\",party.level,party.x,party.y)\
\
\9data.set(target,'add_spells_stoneskin_count',skill)\
\9target:setCondition('fire_shield',10000)\
\9fw.addHooks(fw.getId(target),'add_spells_stoneskin',{\
\9\9onProjectileHit = function(champion,projectile,damage,damageType)\
\9\9\9return add_spells.stoneskinCheck(champion,damageType,projectile)\
\9\9end,\
\9\9onDamage = function(champion,damage,damageType)\
\9\9\9return add_spells.stoneskinCheck(champion,damageType)\
\9\9end\9\9\
\9}\
\9)\
end\
\
function stoneskinCheck(champion,damageType,projectile)\
\9if projectile and projectile.name == 'spell_projectile' then\
\9\9return\
\9end\9\
\
\9if damageType == 'physical' then \
\9\9local count = data.get(champion,'add_spells_stoneskin_count')\
\9\9count = count - 1\
\9\9data.set(champion,'add_spells_stoneskin_count',count)\
\9\9hudPrint('('..champion:getName()..') Stoneskin spell prevented the attack.')\
\9\9\
\9\9if count < 1 then\
\9\9\9fw.removeHooks(fw.getId(champion),'add_spells_stoneskin')\
\9\9\9champion:setCondition('fire_shield',0)\
\9\9\9hudPrint('('..champion:getName()..') Stoneskin spell has worn out.')\
\9\9\9data.unset(champion,'add_spells_stoneskin_count')\
\9\9end\9\
\9\9\
\9\9return false \
\9end\
end\
\
-- HOLD MONSTER --\
\
settings.hold_monster = {}\
settings.hold_monster.level = 5\
settings.hold_monster.duration = 9 --seconds + (skill/2)\9\
settings.hold_monster.immune= {\
\9skeleton_archer=true,\
\9skeleton_warrior=true\
}\
\
\
function hold_monster(caster, x, y, direction, skill)\
\
\9skill = caster:getLevel()\
\9if caster.getOrdinal then\
\9\9caster = party\
\9end\9\
\9\
\9local target = help.nextEntityAheadOf(caster,3,{'monster','party'})\
\9\
\9if not target then return false end\
\9if add_spells.settings.hold_monster.immune[target.name] then return false end\
\9\
\9playSoundAt(\"frostbolt_launch\",caster.level,caster.x,caster.y)\
\
\9\
\9--dynamically add hooks which prevents monster to attack or move\9\
\9-- use timerId as hook-id so the hook can be removed on destructor\
\9local hold_monsterHook = function() return false end\
\9\
\9local timerId = fw_magic.createSpellTimer(target,add_spells.settings.hold_monster.duration+skill)\
\9\
\9local fx = spawn('fx',target.level,target.x,target.y,target.facing)\
\9fx:setParticleSystem('hold_monster')\
\9fx:translate(0,1,0)\9\9\9\
\9\
\9fw.addHooks(target.id,timerId,{\
\9\9onMove = hold_monsterHook,\
\9\9onAttack = hold_monsterHook,\
\9\9onRangedAttack = hold_monsterHook,\
\9\9onTurn = hold_monsterHook\
\9},\
\0091)\
\9return true\
end\
\
\
-- HASTE --\
\
\
settings.haste = {}\
settings.haste.level = 3\
settings.haste.duration = 10\
 \
settings.haste.count = 0\
function haste(caster, x, y, direction, skill)\
\9local selector = fw_magic.createTargetSelector()\
\9selector.skill = caster:getLevel()\
\9selector.caster_id = fw.getId(caster)\
\9if settings.haste.count == 0 then\
\9\9settings.haste.count = caster:getLevel()\
\9\9if settings.haste.count > 4 then\
\9\9\9settings.haste.count = 4\
\9\9end\
\9end\
\9selector.onSelectChampion = add_spells.castHaste\
\9selector.afterCast = add_spells.hasteAfterCast\
end\
\
function castHaste(target,skill,caster_id)\
\9target:setCondition('haste',settings.haste.duration + skill)\
\9playSoundAt('generic_spell',party.level,party.x,party.y)\
\
end\
\
function hasteAfterCast(caster_id)\
\9settings.haste.count = settings.haste.count - 1\
\9\
\9if settings.haste.count > 0 then\
\9\9add_spells.haste(fw.getById(caster_id))\
\9end\
end\
\
\
-- ARMOR --\
\
settings.armor = {}\
-- threshold + skill (how much damage champion can get before spell is deactivated)\
settings.armor.threshold = 8 \
settings.armor.protection = 6 -- sets protection stat to this level\
\
\
function armor(caster, x, y, direction, skill)\
\9local selector = fw_magic.createTargetSelector()\
\9selector.skill = caster:getLevel()\
\9selector.onSelectChampion = add_spells.castArmor\
end\
\
\
function castArmor(champion,skill)\
\9if champion:getStat('protection') >= add_spells.settings.armor.protection then\
\9\9hudPrint('Armor spell has no effect on '..champion:getName())\
\9\9return false\
\9end\
\9\
\9skill = champion:getLevel() \
\
\9playSoundAt(\"generic_spell\",party.level,party.x,party.y)\
\9data.set(champion,'spell_armor_orig_protection',champion:getStat('protection'))\
\9data.set(champion,'spell_armor_max_protection',champion:getStatMax('protection'))\9\
\9champion:setStatMax('protection',add_spells.settings.armor.protection)\
\9champion:setStat('protection',add_spells.settings.armor.protection)\
\
\9data.set(champion,'spell_armor_damage_threshold',add_spells.settings.armor.threshold + skill)\
\9\
\9fw.addHooks(fw.getId(champion),'spell_armor',{\
\9\
\9\9onDamage = function(champion,damage)\
\9\9\9local damageThreshold = data.get(champion,'spell_armor_damage_threshold') - damage\
\9\9\9if damageThreshold < 1 then\
\9\9\9\9fw.removeHooks(fw.getId(champion),'spell_armor')\
\9\9\9\9champion:setStat('protection',data.get(champion,'spell_armor_orig_protection'))\
\9\9\9\9champion:setStatMax('protection',data.get(champion,'spell_armor_max_protection'))\
\9\9\9\9hudPrint('Effect of armor spell worn out.')\9\9\9\9\
\9\9\9else\
\9\9\9\9data.set(champion,'spell_armor_damage_threshold',damageThreshold)\
\9\9\9end\
\9\9end\
\9\
\9})\9\
\9\
end\
\
-- INVISIBILITY --\
\
settings.invisibility = {}\
settings.invisibility.level = 2\
\
\
function invisibility(caster, x, y, direction, skill)\
\9local selector = fw_magic.createTargetSelector()\
\9selector.skill = skill\
\9selector.onSelectChampion = add_spells.castInvisibility\9\
end\
\
function castInvisibility(champion,skill)\
\9champion:setCondition('invisibility',10000)\
\9playSoundAt('generic_spell',party.level,party.x,party.y)\
\9fw.addHooks(fw.getId(champion),'spell_inivisibility',{\
\9\9onDamage = function(self)\
\9\9\9self:setCondition('invisibility',0)\
\9\9\9fw.removeHooks(fw.getId(self),'spell_inivisibility')\
\9\9end \
\9})\
end\
\
-- INVISIBILITY 10' RADIUS --\
\
settings.invisibility_10_radius = {}\
settings.invisibility_10_radius.level = 3\
\
function invisibility_10_radius(caster, x, y, direction, skill)\
\9for i,champ in ipairs(help.getChampions()) do\
\9\9castInvisibility(champ)\
\9end\
end\
\
-- SPELLS --\
\
-- MAGIC SYSTEM ++\
\
function initChampion(champ)\
\9\
\9data.set(champ,'spellPoints',{0,0,0,0,0})\
\9data.set(champ,'spells',{})\
\9\
\9updateSpellPoints(champ)\
\9\
\9createSpellBook(champ)\
end\
\
\
function _onCastSpell(champ,spellName)\
\9local memorizedSpells = data.get(champ,'spells')\
\9local canCast = false\
\9if fw_magic.spells[spellName] == nil then\
\9\9return false\
\9end\
\9local spellLevel = fw_magic.spells[spellName].level\
\9if memorizedSpells[spellLevel] == nil then return false end\
\9\
\9for spellIndex,spell in pairs(memorizedSpells[spellLevel]) do\
\9\9if not canCast and spell.name == spellName and spell.memorized then\
\9\9\9canCast = true\
\9\9\9spell.memorized = false\
\9\9end\
\9end\
\9\
\9if not canCast then\
\9\9hudPrint('You must memorize the spell before you can cast it.')\
\9end\
\9add_spells.updateSpellBook(champ)\
\9return canCast\
end\
\
function stopLearnSpells()\
\9local timer = timers:find('memorize_spells_timer')\
\9if timer then\
\9\9timer:deactivate()\
\9\9timer:destroy()\
\9end\
end\
\
function learnSpells()\
\
\9local timer = timers:create('memorize_spells_timer')\
\9\
\9\
\9local memorizeSpells = function(self)\
\9\9for i,champ in pairs(help.getAliveChampions()) do\
\9\9\9if champ:getClass() == 'Mage' then\
\9\9\9\9\
\9\9\9\9local spells = data.get(champ,'spells')\
\9\9\9\9if (spells[self.tick] ~= nil) then\
\9\9\9\9\9for _,spell in pairs(spells[self.tick]) do\
\9\9\9\9\9\9spell.memorized = true\
\9\9\9\9\9end\
\9\9\9\9\9data.set(champ,'spells',spells)\
\9\9\9\9\9add_spells.updateSpellBook(champ)\
\9\9\9\9end\
\9\9\9end\
\9\9end\9\
\9\9hudPrint('Level '..self.tick..' spells memorized')\
\9\9timer:setTimerInterval(5 * self.tick)\
\9end\9\
\9timer:addCallback(memorizeSpells)\
\9timer:setTickLimit(5,true) \
\9timer:setTimerInterval(5)\
\9timer:activate()\
end\
\
function updateSpellPoints(champ)\
\9local progressionTable = {\
\9{1, 0, 0, 0, 0},\
\9{2, 0, 0, 0, 0},\
\9{2, 1, 0, 0, 0},\
\9{3, 2, 0, 0, 0},\
\9{4, 2, 1, 0, 0},\
\9{4, 2, 2, 0, 0},\
\9{4, 3, 2, 1, 0},\
\9{4, 3, 3, 2, 0},\
\9{4, 3, 3, 2, 1},\
\9{4, 4, 3, 2, 2},\
\9{4, 4, 4, 3, 3},\
\9{4, 4, 4, 4, 4},\
\9{5, 5, 5, 4, 4},\
\9{6, 6, 6, 5, 5},\
\9{5, 5, 5, 5, 5},\
\9{5, 5, 5, 5, 5},\
\9{5, 5, 5, 5, 5},\
\9{5, 5, 5, 5, 5},\
\9{5, 5, 5, 5, 5},\
\9{5, 5, 5, 5, 5},\
\9{5, 5, 5, 5, 5},\
}\
\9local spellPoints = data.get(champ,'spellPoints')\
\9-- in case a Mage joins to the party\
\9if spellPoints == nil then\
\9\9add_spells.initChampion(champ)\
\9\9spellPoints = data.get(champ,'spellPoints')\
\9end \
\9\
\9local spells = data.get(champ,'spells')\
\9\
\9for spellLevel,points in ipairs(progressionTable[champ:getLevel()]) do\
\9\9local memorizedCount = 0\
\9\9if spells[spellLevel] then\
\9\9\9memorizedCount = #spells[spellLevel]\
\9\9end\
\9\9\
\9\9spellPoints[spellLevel] = points - memorizedCount\
\9end\
\9data.set(champ,'spellPoints',spellPoints)\
\
end\
\
function memorizeSpell(champion,spellName)\
\9local sp = data.get(champion,'spellPoints')\
\9local sl = fw_magic.spells[spellName].level\
\9if (sp[sl] < 1) then\
\9\9hudPrint('Not enough spell points.')\
\9\9return false\
\9end\
\9sp[sl] = sp[sl] - 1\
\9data.set(champion,'spellPoints',sp)\
\
\9local champSpells = data.get(champion,'spells')\
\9if (champSpells[sl] == nil) then champSpells[sl] = {} end\
\9\
\9table.insert(champSpells[sl],{name=spellName,memorized=false})\
\9\
\9data.set(champion,'spells',champSpells)\9\
\9add_spells.updateSpellBook(champion)\
\9return true\
end\
\
function unmemorizeSpell(champion,spellName)\
\9local sl = fw_magic.spells[spellName].level\
\9local champSpells = data.get(champion,'spells')\
\9if champSpells[sl] == nil then return end\
\9\
\9for i,spell in ipairs(champSpells[sl]) do\
\9\9if (spell.name == spellName) then\
\9\9\9table.remove(champSpells[sl],i)\
\9\9\9local sp = data.get(champion,'spellPoints')\
\9\9\9sp[sl] = sp[sl] + 1\
\9\9\9add_spells.updateSpellBook(champion)\
\9\9\9return\
\9\9end\
\9end\
end\
\
function updateSpellBook(champ)\
\9local book = gw.getElement('spell_book_'..champ:getOrdinal(),'inventory')\
\9book:update()\
end\
\
-- SPELL BOOK ++\
\
function createSpellBook(champion)\
\9-- testing\
\9\
\9local book = gw_spell_book.createSpellBook(champion)\
\9\
\9book.onMemorize = function(book,champion,spellName,text)\
\9\9add_spells.memorizeSpell(champion,spellName)\
\9\9book:update()\
\9end\
\
\9book.onUnmemorize = function(book,champion,spellName,text)\
\9\9add_spells.unmemorizeSpell(champion,spellName)\
\9\9book:update()\
\9end\9\
\9\
\9book.update = function(self)\
\9\9local champion = self:getChampion()\
\9\9local champSpells = data.get(champion,'spells')\
\9\9\
\9\9for _,spell in pairs(fw_magic.spells) do\
\9\9\9local unmemorizedCount = 0\
\9\9\9local memorizedCount = 0\
\9\9\9if (champSpells[spell.level]) then\
\9\9\9\9for i, cspell in ipairs(champSpells[spell.level]) do\
\9\9\9\9\9if cspell.name == spell.name then\
\9\9\9\9\9\9if cspell.memorized then\
\9\9\9\9\9\9\9memorizedCount = memorizedCount + 1\
\9\9\9\9\9\9else\
\9\9\9\9\9\9\9unmemorizedCount = unmemorizedCount + 1\
\9\9\9\9\9\9end\
\9\9\9\9\9end\
\9\9\9\9end\
\9\9\9end\
\9\9\9text = self:getChild('page1'):getChild(spell.name):getChild(spell.name..'_text')\
\9\9\9if (memorizedCount == 0 and unmemorizedCount == 0) then\
\9\9\9\9text.text = spell.uiname\
\9\9\9else\
\9\9\9\9text.text = spell.uiname..'  '..memorizedCount..'/'..unmemorizedCount\
\9\9\9\9if memorizedCount > 0 then\
\9\9\9\9\9text.textColor = {255,255,255,255}\
\9\9\9\9else\
\9\9\9\9\9text.textColor = {200,200,200,200}\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
\9\
\9local page1 = book:getChild('page1')\
\9\
\9for i=1,5 do \
\9\9local level = page1:addChild('text','level'..i,20,20,300,30,'Level '..i)\
\9\9level.level = i\
\9\9level.onDraw = function(self,ctx)\
\9\9\9local champion = self:getAncestor():getChampion()\
\9\9\9local sp = data.get(champion,'spellPoints')\
\9\9\9self.text = 'Level '..self.level..' (spell points: '..sp[self.level]..')'\
\9\9end\
\9\9level:setRelativePosition{'below_previous'}\
\9\9\
\9\9for spellName,spell in pairs(fw_magic.spells) do \
\9\9\9if (spell.level == i) then\
\9\9\9\9book:addSpell(spell)\
\9\9\9end\
\9\9end\
\9\9\
\9\9\
\9end\
\9\
\9\
\9gw.addElement(book,'inventory')\
end\
")
spawn("script_entity", 22,0,0, "fw_magic")
	:setSource("activeSpells = {}\
selector = {\
\9skill = 0,\
\9onSelectChampion = nil,\
\9caster_id = nil\
}\
\
spells = {}\
\
mages = {}\
\
testMode = false\
\
function setTestMode(enabled)\
\9testMode = enabled\
end\
\
function activate()\
\9-- scroll hook --\
\9\
\9fw.addHooks('scrolls','fw_magic',{\
\9\9onReadScroll = function(scroll,champ) \
\9\9\9local spellName = string.sub(scroll.name,8)\
\9\9\9if champ:getClass() ~= 'Mage' or fw_magic.spells[spellName].level > champ:getLevel() then\
\9\9\9\9return false\
\9\9\9end\
\9\9\9fw.executeHooks(spellName,'onCast',champ, party.x, party.y, party.facing, champ:getLevel())\
\9\9\9return true\
\9\9end\
\9})\9\
end\
\
function defineSpell(spellDef)\
\9spells[spellDef.name] = spellDef\
\9\
\9if not spellDef.onCast then\
\9\9fw.setHookVars(spellDef.name,'fw_magic_spells','onCast',spellDef.name)\
\9\9spellDef.onCast = function(caster)\
\9\9 \9local spellName = fw.getHookVars()\
\9\9\9fw_magic.shootSpell(spellName,caster)\
\9\9end\
\9end\
\9\
\9--default onHit-hook\
\9\
\9if spellDef.projectile and not spellDef.onHit then\
\9\9spellDef.onHit = function(projectile,target,damage,damageType)\
\9\9\9if target.getOrdinal then\
\9\9\9\9target = party\
\9\9\9end\9\
\9\9\9local spellName = fw.getHookVars()\
\9\9\9local caster = fw.getById(data.get(projectile,'caster_id')) \
\9\9\9fw_magic.dealSpellDamage(spellName,caster,target.x,target.y)\
\9\9\9return false\
\9\9end\9\
\9end\
\
\9fw.addHooks(spellDef.name,'fw_magic_spells',{\
\9\9onCast = spellDef.onCast\
\9})\9\9\
\9for i=1, #mages do\
\9\9spawnSpellBook(party:getChampion(mages[i]))\
\9end\
\
end\
\
function dealSpellDamage(spellName,caster,target_x,target_y)\
\9\
\9\9local dir = caster.facing\
\9\9if caster.getOrdinal then\9\
\9\9\9dir = party.facing\9\9\
\9\9end\
\
\9\9\9local damageArea = fw_magic.spells[spellName].area\
\9\9\9\9\9\
\9\9\9if (damageArea) then\
\9\9\9\9\
\9\9\9\9local from_x,to_x,from_y,to_y = 0,0,0,0\
\9\9\9\9if dir == 0 then\
\9\9\9\9\9from_x = damageArea.from[2]\
\9\9\9\9\9to_x =  damageArea.to[2]\
\9\9\9\9\9from_y = - damageArea.to[1]\
\9\9\9\9\9to_y =  - damageArea.from[1]\9\9\9\9\9\
\9\9\9\9elseif dir == 1 then\
\9\9\9\9\9from_x = damageArea.from[1]\
\9\9\9\9\9to_x =  damageArea.to[1]\
\9\9\9\9\9from_y = damageArea.from[2]\
\9\9\9\9\9to_y =  damageArea.to[2]\9\9\9\9\9\
\9\9\9\9elseif dir == 2 then\
\9\9\9\9\9from_x = damageArea.from[2]\
\9\9\9\9\9to_x =  damageArea.to[2]\
\9\9\9\9\9from_y = damageArea.from[1]\
\9\9\9\9\9to_y =  damageArea.to[1]\9\9\9\9\9\9\
\9\9\9\9else\
\9\9\9\9\9from_x = -damageArea.to[1]\
\9\9\9\9\9to_x =  -damageArea.from[1]\
\9\9\9\9\9from_y = -damageArea.to[2]\
\9\9\9\9\9to_y =  -damageArea.from[2]\9\9\9\9\9\
\9\9\9\9end\
\9\9\9\9\
\9\9\9\9for x = from_x,to_x do\
\9\9\9\9\9for y = from_y,to_y do\
\9\9\9\9\9\9fw_magic.doDamage(spellName,caster,target_x + x, target_y + y)\9\9\
\9\9\9\9\9end\
\9\9\9\9end \
\9\9\9else\
\9\9\9\9fw_magic.doDamage(spellName,caster,target_x,target_y)\9\
\9\9\9end\
\9\9\
end\
\
function doDamage(spellName,caster,x,y)\
\9\9local originator = 0\
\9\9local damage = fw_magic.spells[spellName].calculateDamage(caster)\
\9\9local damageType = fw_magic.spells[spellName].damageType\
\9\9\
\9\9if caster.getOrdinal then\
\9\9\9originator = 2 ^ (caster:getOrdinal()+1) \9\
\9\9\9caster = party\9\9\
\9\9end\
\9\9\
\9\9damageTile(caster.level,x, y,(caster.facing + 2)%4,originator+1, damageType,damage)\
\9\9local fxName = fw_magic.spells[spellName].onHitParticleEffect\
\9\9local fx = spawn('fx',caster.level,x ,y ,0)\9\9\
\9\9fx:setParticleSystem(fxName)\
\9\9fx:translate(0,1,0)\9\9\9\9\
\9\9local light = fw_fx.getLightPreset(spellName..'_hit')\
\9\9if light then\
\9\9\9fx:setLight(unpack(light))\9\
\9\9end\
\
\9\9if fw_magic.spells[spellName].onHitSound then\
\9\9\9playSoundAt(fw_magic.spells[spellName].onHitSound,caster.level,x,y)\
\9\9end \9\9\
\9\9\9\
end\
\
\
function addSpell(spellName,hookFunction,projectileName)\
\9fw.addHooks(spellName,'fw_magic_spells',{\
\9\9\9onCast = hookFunction\
\9\9}\
\9)\
\9\
\9local onHitHook = function(projectile,target,damage,damageType)\
\9\9\9if target.getOrdinal then\
\9\9\9\9target = party\
\9\9\9end\9\
\9\9\9local caster = fw.getById(data.get(projectile,'caster_id')) \
\9\9\9\
\9\9\9if caster.getOrdinal then\
\9\9\9\9local originator = 2 ^ (caster:getOrdinal()+1) \9\9\9\
\9\9\9\9damageTile(target.level,target.x,target.y,(target.facing + 2)%4,originator, damageType,damage)\
\9\9\9\9return false\
\9\9\9end\
\9\9\9\
\9\9end\9\
\9\
\9if projectileName then\
\9\9fw.addHooks(projectileName,'fw_magic_spells',{\
\9\9\9onHit = onHitHook\
\9\9})\9\
\9end\
end\
\
\
function createTargetSelector()\
\9if inventory_scanner then\
\9\9destroyTargetSelector()\9\
\9end\
\9local selectorCursor = spawn('spell_selector',nil,nil,nil,nil,'spell_selector')\
\9setMouseItem(selectorCursor)\
\9spawn('timer',party.level,0,0,0,'inventory_scanner')\
\9inventory_scanner:setTimerInterval(0.1)\
\9inventory_scanner:addConnector('activate','fw_magic','scanInventory')\
\9inventory_scanner:activate()\
\9return selector\
end\
\
function destroyTargetSelector()\
\9\9local selectorCursor = findEntity('spell_selector')\
\9\9if (selectorCursor) then\
\9\9\9selectorCursor:destroy()\
\9\9end\
\9\9inventory_scanner:deactivate()\
\9\9inventory_scanner:destroy()\9\
end\
\
function scanInventory()\
\9\
\9for ordinal, champ in ipairs(help.getChampions()) do\
\9\9for slot=1,31 do \
\9\9\9local item = champ:getItem(slot)\
\9\9\9if item and item.name == 'spell_selector' then\
\9\9\9\9champ:removeItem(slot)\
\9\9\9\9selector.onSelectChampion(champ,selector.skill,selector.caster_id)\
\9\9\9\9if (getMouseItem() and getMouseItem().name == 'spell_selector') then\
\9\9\9\9\9setMouseItem()\
\9\9\9\9elseif getMouseItem() then\
\9\9\9\9\9champ:insertItem(slot,getMouseItem())\
\9\9\9\9\9setMouseItem()\
\9\9\9\9end\
\9\9\9\9item:destroy()\
\9\9\9\9break\
\9\9\9end\
\9\9end\
\9end\
\9if getMouseItem() == nil or getMouseItem().name ~= 'spell_selector' then\
\9\9destroyTargetSelector()\9\
\9\9if selector.afterCast then\
\9\9\9selector.afterCast(selector.caster_id)\
\9\9end\
\9end\
end\
\
-- creates a  spell timer\
-- entity = affected entity, \
-- time = how many seconds spells effect  lasts \
-- destructorName = name of the function which is called when the effect of the spell is worn out.\
--                  {script_entity_name,function_name}\
-- returns id of timer\
function createSpellTimer(entity,time,destructorName)\
\9local timer = spawn('timer',party.level,0,0,0)\
\9timer:setTimerInterval(time)\
\9-- store entity.id to table indexed by timer.id so we can access it in spell-destructor\
\9activeSpells[timer.id] = fw.getId(entity)\
\9\
\9if (not destructorName) then\
\9\9destructorName = {'fw_magic','spellTimerDestructor'}\
\9end\
\9\
\9timer:addConnector('activate',destructorName[1],destructorName[2])\
\9timer:activate()\
\9return timer.id\
end\
\
function spellTimerDestructor(timer)\
\9fw.removeHooks(fw_magic.activeSpells[timer.id],timer.id)\
\9fw.debugPrint(fw_magic.activeSpells[timer.id]..' spell effect ended')\
\9fw_magic.activeSpells[timer.id] = nil\
\9timer:deactivate()\
\9timer:destroy()\
\
end\
\
function castSpell(spellName,caster)\
\9fw.executeHooks(spellName,'onCast',caster)\
end\
\
function shootSpell(spellName,caster,speed,damage,fx,onHitFx,sound,onHitSound,area)\
\
\9local spellDef = spells[spellName]\
\9sound = sound or spellDef.sound\
\9onHitSound = onHitSound or spellDef.onHitSound\
\9speed = speed or spellDef.speed\
\9\
\9if spellDef.calculateDamage then\
\9\9damage = spellDef.calculateDamage(caster) \
\9else\
\9\9damage = damage or 0\
\9end\
\9\
\9fx = fx or spellDef.particleEffect\
\9onHitFx = onHitFx or spellDef.onHitParticleEffect\
\
    local caster_id = fw.getId(caster)\
\
\9if caster.getOrdinal then \
\9\9caster = party \
\9end\
\
\9shootProjectile(spellDef.projectile, caster.level, caster.x, caster.y, caster.facing, speed, 0, 0, 0, 0, 0,\
\9\9damage, caster, true)\
\
\9local projectile = nil\
\9for ent in entitiesAt(caster.level, caster.x, caster.y) do\
\9\9if ent.name == spellDef.projectile then\
\9\9\9projectile = ent\
\9\9\9break\
\9\9end\
\9end\
\9data.set(projectile,'caster_id',caster_id)\
\9\
\9fw.setHookVars(projectile.id,'fw_magic_spells','onHit',spellDef.name)\
\9fw.addHooks(projectile.id,'fw_magic_spells',{\
\9\9onHit=spellDef.onHit\
\9})\
\9if fx then\
    \9local effect = fw_fx.addProjectileEffect(projectile,fx,speed,onHitFx,sound,onHitSound)\
\9end\
\9\
\9return projectile \9\
end\
\
function canCast(caster,spellName)\
\9if data.get(caster,'learnedSpells')[spellName] then return true end\
\9hudPrint(caster:getName()..\" haven't learned this spell yet\")\
\9playSound('swipe')\
\9return false\9\
end\
\
-- SPELL BOOK ++\
\
\
-- monsters spell support\
\
function addSpellsToMonsters(monsterNamespace,spellName,amount,targets,range,propability,cooldown)\
\
\9local spellHook = function(monster,dir)\
\9\9\9if data.get(monster,'spell_cooldown') then\
\9\9\9\9return false\
\9\9\9end\
\9\9\9local v = fw.getHookVars()\
\9\9\9if math.random() > v.prop then return end\
\9\9\9if (help.nextEntityAheadOf(monster, v.range,v.targets,true)) then\9\9\9\9\
\9\9\9\9local count = data.get(monster,v.spellName..'_count') or v.amount\
\9\9\9\9if count < 1 then\
\9\9\9\9\9return\
\9\9\9\9end\
\9\9\9\9fw.executeHooks(v.spellName,'onCast',monster)\
\9\9\9\9data.set(monster,v.spellName..'_count',count - 1)\
\9\9\9\9data.set(monster,'spell_cooldown',true)\
\9\9\9\9fw.repeatFunction(1,v.cooldown,{monster.id},function(monster_id)\
\9\9\9\9\9\9local monster = fw.getById(monster_id)\
\9\9\9\9\9\9if monster then\
\9\9\9\9\9\9\9data.unset(monster,'spell_cooldown')\
\9\9\9\9\9\9end\
\9\9\9\9\9end\
\9\9\9\9)\
\9\9\9\9return false\
\9\9\9end\
\9\9end\
\9\9\
\9local vars = {}\
\9vars.spellName=spellName\
\9vars.amount=amount\
\9vars.targets=targets\9\9\
\9vars.range = range or 5\
\9vars.prop = propability or 0.5\
\9vars.cooldown = cooldown or 2\
\9\
\9fw.setHookVars(monsterNamespace,'fw_magic_monsters_'..spellName,'onMove',vars)\
\9fw.setHookVars(monsterNamespace,'fw_magic_monsters_'..spellName,'onTurn',vars)\9\
\9\
\9fw.addHooks(monsterNamespace,'fw_magic_monsters_'..spellName,{\
\9\9onMove = spellHook,\
\9\9onTurn = spellHook\
\9})\
end")
spawn("eob_sewers_wall_text_long", 3,17,1, "eob_sewers_wall_text_long_14")
	:setWallText("Teleport to Level 3")
spawn("teleporter", 2,17,1, "teleporter_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(26,4,1,3)
spawn("script_entity", 8,14,1, "script_entity_11")
	:setSource("function levelUp()\
\9party:getChampion(4):levelUp()\
end")
spawn("eob_sewers_wall_text_long", 8,15,0, "eob_sewers_wall_text_long_13")
	:setWallText("Level UP button for character in slot 4 (default mage).\
This is feature to testing AD&D Spells")
spawn("eob_wall_button", 8,15,0, "eob_wall_button_13")
	:addConnector("toggle", "script_entity_11", "levelUp")
spawn("note", 8,15,3, "note_1")
	:setScrollText("Hi!\
We, developers of this mod, frequently test various\
aspects of the dungeon. To make it easier, we've\
put couple things here: experience button, teleports\
to lower levels and possibly other cheaty stuff.\
\
We are currently under dark spell of forgetfullness,\
so we forgot to hide our secret lair and it's open\
now. Be a nice player and don't use any of those.\
\
                        Your friendly developers")
spawn("eob_sewers_door_metal_force", 9,15,3, "eob_sewers_door_metal_force_5")
spawn("teleporter", 2,18,0, "teleporter_12")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(16,14,0,4)
spawn("teleporter", 2,19,3, "teleporter_14")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(10,24,3,5)
spawn("teleporter", 2,20,1, "teleporter_15")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(17,22,1,6)
spawn("teleporter", 2,21,0, "teleporter_16")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,19,0,7)
spawn("teleporter", 2,22,3, "teleporter_17")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(7,28,3,8)
spawn("teleporter", 2,23,1, "teleporter_18")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(21,4,1,9)
spawn("teleporter", 2,24,2, "teleporter_19")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,11,2,10)
spawn("teleporter", 2,25,2, "teleporter_20")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(14,10,2,11)
spawn("teleporter", 2,26,0, "teleporter_21")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(15,11,0,12)
spawn("eob_sewers_wall_text_long", 3,18,1, "eob_sewers_wall_text_long_16")
	:setWallText("Teleport to Level 4")
spawn("eob_sewers_wall_text_long", 3,19,1, "eob_sewers_wall_text_long_17")
	:setWallText("Teleport to Level 5")
spawn("eob_sewers_wall_text_long", 3,20,1, "eob_sewers_wall_text_long_18")
	:setWallText("Teleport to Level 6")
spawn("eob_sewers_wall_text_long", 3,21,1, "eob_sewers_wall_text_long_19")
	:setWallText("Teleport to Level 7")
spawn("eob_sewers_wall_text_long", 3,22,1, "eob_sewers_wall_text_long_20")
	:setWallText("Teleport to Level 8")
spawn("eob_sewers_wall_text_long", 3,23,1, "eob_sewers_wall_text_long_21")
	:setWallText("Teleport to Level 9")
spawn("eob_sewers_wall_text_long", 3,24,1, "eob_sewers_wall_text_long_22")
	:setWallText("Teleport to Level 10")
spawn("eob_sewers_wall_text_long", 3,25,1, "eob_sewers_wall_text_long_23")
	:setWallText("Teleport to Level 11")
spawn("eob_sewers_wall_text_long", 3,26,1, "eob_sewers_wall_text_long_24")
	:setWallText("Teleport to Level 12")
spawn("script_entity", 30,31,3, "t")
	:setSource("-- this script is for testing purposes only, you can call these functions from console. \
-- Eg. type t.to(floor_dirt_13) to console and the party is moved to the location of floor_dirt_13\
-- or t.t(22,16,1) moves the party to location level x=22,y=16,level=1. Level is optional (default is party.level)\
\
-- move party to x,y,[level]\
-- if the first argument is an entity then teleport to it's location\
function to(x,y,level)\
\9local to_level = level or party.level\
\9local to_x = x\
\9local to_y = y\
\9local to_facing = party.facing\
\9if x == nil then \
\9\9print('Invalid entity name')\
\9\9return\
\9end\
\9\
\9if (type(x) == 'table' and x.x) then\
\9\9to_x = x.x\
\9\9to_y = x.y\
\9\9to_level = x.level\
\9\9to_facing = x.facing\
\9end\
\9party:setPosition(to_x, to_y, to_facing,to_level)\
end\
\
-- teleports party to testpoint location and executes testpoint.activate function if defined\
-- eg. t.run(testpoint_1)\
function run(tp)\
\9if type(tp) ~= 'table' or tp.name ~= 'testpoint'  then \
\9\9print('Invalid testpoint')\
\9\9return\
\9end\
\9to(tp)\
\9if tp.activate then\
\9\9tp.activate()\
\9end\
end\
\
-- lists all entities whose name matches to entityName (even partially)\
-- eg. t.list('scroll',3) list all entities whose name contains a string 'scroll'\
function list(entityName,plevel)\
\9grimq.fromAllEntitiesInWorld():where(\
\9\9function(e) \
\9\9\9if string.find(e.name, entityName) and (not plevel or e.level == plevel) then\
\9\9\9\9print('X:'..e.x..', Y:'..e.y..', L:'..e.level..', N:'..e.name..' ID:'..e.id)\
\9\9\9end \
\9\9end\
\9)\
end\
\
\
\
")
spawn("script_entity", 21,0,1, "illusion_walls")
	:setSource("\
function isIllusionWall(entity)\
\9return grimq.isDoor(entity) and string.find(entity.name,'illusion_wall')\
end\
\
function activate()\
\9\
\9fw.addHooks('party','illusion_walls',{\
\9\9\9onMove = function(self,dir)\
\9\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9\9if (illusion_walls.isIllusionWall(e) and e.facing == (dir + 2)%4) then\
\9\9\9\9\9\9illusion_walls.doTheMagic(e,self)\
\9\9\9\9\9end\
\9\9\9\9end\
\9\9\9\9for e in help.entitiesAtSameTile(self) do\
\9\9\9\9\9if (illusion_walls.isIllusionWall(e) and e.facing == dir) then\
\9\9\9\9\9\9illusion_walls.doTheMagic(e,self)\
\9\9\9\9\9end\
\9\9\9\9end\9\9\9\
\9\9\9end,\
\9\9\9onAttack = function(champion,weapon)\
\9\9\9\9fw.hooks.party.illusion_walls.onMove(party,party.facing)\
\9\9\9end\
\9\9}\
\9)\
\
end --activate\
\
function doTheMagic(wall,opener)\
\9if wall:isOpen() then return end\
\9fw.debugPrint(\"open illusionwall secret door id=\"..wall.id)\
\9wall:setDoorState('open')\
end\
")
spawn("testpoint", 29,31,3, "testpoint_1")
	:setSource("-- (This script is here just for a syntax reference, and of course it can be used as a template for your testpoints) \
-- If you want to make a new testpoint just put a new testpoint entity to dungeon and copy paste \
-- the activate function in it.\9\9\
-- You can call t.run(testpoint_1) the party will be spawned to testpoint_1's location and the activate-function is called\
-- to run your testpoint just call t.run(your_testpoint_id)\
\
-- Skills and stats and inventory slots for a reference\
-- skills:air_magic,armors,assassination,athletics,axes,daggers,dodge,earth_magic,fire_magic,ice_magic,maces,\
--       missile_weapons,spellcraft,staves,swords,throwing_weapons, unarmed_combat.\
-- stats:health, energy, strength, dexterity, vitality, willpower, protection, evasion, resist_fire, resist_cold, \
--       resist_poison, resist_shock.\
-- inventory slots: 1 (head), 2 (torso), 3 (legs), 4 (feet), 5 (cloak), 6 (neck), 7 (handl), 8 (handr), \
--                  9 (gaunlets), 10 (bracers), 11-31 (backpack slots).\
\
function activate()\
\9help.modifyChampion{\
\9\9id = 1, -- champion ordinal\
\9\9levelUp = 1, -- raise level by 1 \
\9\9statsUp = {strength=1}, -- raise strength by 1\
\9\9skillsUp= {swords=4}, -- raise swords skill by 1\
\9\9items = {handr=eob_shield_1,[16]=note_1} -- move eob_shield_1 and note_1 from dungeon to inventory\
\9}\
\9help.modifyChampion{\
\9\9id = 2,\
\9\9levelUp = 1,\
\9\9skillsUp= {axes=4},\
\9\9items = {[15]=eob_remains_of_tod_uphill_1}\
\9}\9\
\9help.modifyChampion{\
\9\9id = 3,\
\9\9levelUp = 1,\
\9\9skillsUp = {dodge=2,missile_weapons=2},\
\9\9items = {[15]=eob_lock_picks_1,handl='rock*30'} -- spawn 30 rocks\
\9}\9\9\
\9help.modifyChampion{\
\9\9id = 4,\
\9\9levelUp = 1,\
\9\9skillsUp = {spellcraft=4},\
\9\9items = {[15]=eob_scroll_detect_magic}\
\9}\9\
end")
spawn("script_entity", 12,8,0, "encounters")
	:setSource("-- encounters\
\
function update(ctx, partx)\
\
\9local items=\"\"\
    for i in entitiesAt(party.level, party.x, party.y) do\
\9\9if i.class == \"ScriptEntity\" then\
\9\9\9processEncounter(ctx, i)\
\9\9end\
    end\
end\
\
function processEncounter(ctx, eventScript)\
\9if not sanityCheck(eventScript) then\
\9\9return\
\9end\
\
\9local state = eventScript.state\
\9if state == nil then\
\9\9state = 1\
\9end\
\
\9-- Check if image is defined for this event\
\9local image_x = eventScript.x\
\9local image_y = eventScript.y\
\9if not image_x then\
\9    image_x = 20\
\9end\
\9if not image_y then\
\9\9image_y = 20\
\9end\
\9if eventScript.image then\
\9   ctx.drawImage(eventScript.image, image_x, image_y)\
\9end\
\9\
\9\
\9-- Ok, now write a text\
\9local text_x = eventScript.text_x\
\9local text_y = eventScript.text_y\
\9if not text_x then\
\9\9text_x = 200\
\9end\
\9if not text_y then\
\9\9text_y = 50\
\9end\
\9\
\9stateData = eventScript.states[state]\
\9ctx.color(255, 255, 255)\
\9ctx.drawText(stateData[2], text_x, text_y)\
\9\9\
\9local tbl = eventScript.actions\
\9\9\
\9local buttons_x = eventScript.buttons_x\
\9local buttons_y = eventScript.buttons_y\
\9local buttons_width = eventScript.buttons_width\
\9\9\
\9printChoices(ctx, state, tbl, buttons_x, buttons_y, buttons_width)\
end\
\
function printChoices(ctx, current_state, states, x, y, width)\
\9for key1,value in pairs(states) do\
\9\9if value[1] == current_state then\
\9\9\9showButton(ctx, x, y, width, value[2], value[3])\
\9\9\9y = y + 30\
\9\9end\
\9end\
\
end\
\
function sanityCheck(e)\
\9if e.name ~= \"event\" then\
\9\9return false\
\9end\
    if e.states == nil then\
\9\9return false\
\9end\
\9\
\9if e.actions == nill then\
\9\9return false\
\9end\
\9\
\9if (e.enabled ~= true) then\
\9\9return false\
\9end\
\9\
\9return true\
\
end\
\
function showButton(ctx, x, y, width, text, callback)\
    -- draw button1 with text\
    ctx.color(128, 128, 128)\
    ctx.drawRect(x, y, width, 20)\
    ctx.color(255, 255, 255)\
    ctx.drawText(text, x + 10, y + 15)\
\9local name=\"button\"..x..y\
\9local height = 30\
    if ctx.button(\"button1\", x, y, width, height) then\
\9\9callback(ctx)\
\9end\
end")
spawn("script_entity", 31,1,2, "compass")
	:setSource("-- This example draws a compass as a GUI element. Depending on which\
-- activation mode is chosen, it can be visible all time, toggled\
-- with 'c' key or shown only when 'c' is pressed.\
\
-- draws actual compass\
-- this function is called when compass is visible all time\
function drawCompass(self, g)\
\9local x = 10\
\9local y = g.height - 200\
\9\
\9local dir = string.sub(\"NESW\", party.facing + 1, party.facing + 1)\
\9g.drawImage(\"mod_assets/grimwidgets/images/compass_full_\"..dir..\".tga\", x, y)\
end\
\
-- this is a simple wrapper function that is called as key press\
-- hook. It calls drawCompass function.\
function callback(g)\
\9drawCompass(self, g)\
end\
\
function autoexec()\
\9local e = {}\
\9e.id = 'compass'\
\9e.draw = drawCompass\
\9e.callback = callback\
\9\
\9-- uncomment this to enabled/disable compass by pressing C\
\9gw.setKeyHook('c', true, e.callback)\
\9\
\9-- Uncomment this to show compass by pressing C\
\9-- gw.setKeyHook('c', false, e.callback)\
\9\
\9-- Uncomment this to have compass permanently visible\
\9-- gw.addElement(e,'gui')\
end")
spawn("sewers_wall_pipe_water", 20,11,2, "sewers_wall_pipe_water_1")
spawn("sewers_wall_pipe_water", 20,13,0, "sewers_wall_pipe_water_2")
spawn("eob_sewers_secret_door_cube", 19,20,0, "eob_sewers_secret_door_cube_1")
spawn("eob_secret_door_empty", 19,20,3, "eob_secret_door_empty_1")
spawn("eob_secret_door_empty", 19,20,2, "eob_secret_door_empty_2")
spawn("sewers_fog", 13,15,0, "sewers_fog_1")
spawn("script_entity", 15,14,2, "eob_drainage_eyes_alcove_1_15_14")
	:setSource("-- ============================================== config begin\
-- eyestate: 0 = create alcoves, 1,2 = eyes in alcove 1,2\
eyestate = 0\
-- eyes: array of alcove position - x,y,facing\
eyes = { { 14, 14, 1 }, { 16, 14, 3 } }\
alcovename = \"eob_sewers_drainage_bent_alcove\"\
eyesname = \"eob_drainage_eyes\"\
-- ============================================== config end\
\
function setDrainageEyes()\
\9if ( eyestate == 0 ) then\
\9\9for i=1,2 do\
\9\9\9for e in entitiesAt(self.level, eyes[i][1], eyes[i][2]) do\
\9\9\9\9if (e.name == alcovename and e.facing == eyes[i][3]) then\
\9\9\9\9\9e:destroy()\
\9\9\9\9end\
\9\9\9end\
\9\9\9spawn(alcovename, self.level, eyes[i][1], eyes[i][2], eyes[i][3], self.id..\"_\"..i)\
\9\9\9spawn(\"sewers_drainage_darkness\", self.level, eyes[i][1], eyes[i][2], eyes[i][3])\
\9\9end\
\9\9eyestate = 1\
\9end\
\9if ( eyestate > 0 ) then\
\9\9local alcovetmp = findEntity(self.id..\"_\"..eyestate)\
\9\9alcovetmp:addItem(spawn(eyesname, nil, nil, nil, nil, self.id..\"_eyes\"))\
\9end\
end\
\
function action()\
\9eyestate = eyestate % 2 + 1\
\9fw.debugPrint(\"destroying items... (\"..eyestate..\")\")\
\9for i=1,2 do\
\9\9local atmp = findEntity(self.id..\"_\"..i)\
\9\9for itm in atmp:containedItems() do\
\9\9\9itm:destroy()\
\9\9end\
\9end\
\9findEntity(self.id..\"_\"..eyestate):addItem(spawn(eyesname, nil, nil, nil, nil, self.id..\"_eyes\"))\
\9hudPrint(texts.getT(\"drainage_grate_eyes\"))\
end\
\
setDrainageEyes()")
spawn("script_entity", 1,17,3, "drainage_eyes_alcoves")
	:setSource("\
function activate()\
\9fw.addHooks('party','drainage_eyes_alcoves', {\
\9\9onPickUpItem = function(self, item)\
\9\9\9if item.name == \"eob_drainage_eyes\" then\
\9\9\9\9local scriptmp = findEntity(string.sub(item.id,1,-6))\
\9\9\9\9fw.debugPrint(\"scriptid = \"..scriptmp.id)\
\9\9\9\9scriptmp:action()\
\9\9\9\9return false\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Drainage eyes alcoves activated\")\
end")
spawn("eob_sewers_drainage_bent_alcove", 14,14,1, "eob_sewers_drainage_bent_alcove_1")
spawn("eob_sewers_drainage_bent_alcove", 16,14,3, "eob_sewers_drainage_bent_alcove_2")
spawn("eob_sewers_drainage_alcove", 13,21,2, "eob_sewers_drainage_alcove_1")
	:addItem(spawn("eob_rock_glowing"))
spawn("sewers_drainage_water", 13,21,2, "sewers_drainage_water_1")
spawn("sewers_drainage_water", 13,23,0, "sewers_drainage_water_2")
spawn("sewers_drainage_water", 17,17,1, "sewers_drainage_water_3")
spawn("sewers_drainage_water", 19,17,3, "sewers_drainage_water_4")
spawn("script_entity", 23,1,2, "gw_spell_book")
	:setSource("spells = {}\
\
function getRuneImage(runeChar)\
\9local runeMap = {\
\9\9A='rune1_fire',\
\9\9B='rune2_death',\
\9\9C='rune3_air',\
\9\9D='rune4_spirituality',\
\9\9E='rune5_balance',\
\9\9F='rune6_physicality',\
\9\9G='rune7_earth',\
\9\9H='rune8_life',\
\9\9I='rune9_water'\
\9}\
\
\9return 'mod_assets/grimwidgets/images/'..runeMap[runeChar]..'.tga'\
end\
\
function getRunePosition(runeChar)\
\9local  positions = {\
\9\9A = {1,1},\
\9\9B = {2,1},\
\9\9C = {3,1},\
\9\9D = {1,2},\
\9\9E = {2,2},\
\9\9F = {3,2},\
\9\9G = {1,3},\
\9\9H = {2,3},\
\9\9I = {3,3}\9\9\9\9\9\9\
\9}\
\9return positions[runeChar]\
end\
\
function createSpellBook(champion)\
\9local book = gw_image.create('spell_book_'..champion:getOrdinal(),20,20,900,800,'mod_assets/grimwidgets/images/book2_900.tga')\
\9book.onDraw = function(self,ctx,champion) \
\9\9if champion == nil then return false end\
\9\
\9\9if champion:getClass() ~= 'Mage' or self:getChampion():getOrdinal() ~= champion:getOrdinal() then\
\9\9\9return false\
\9\9end\9\9\
\9end\
\9book.addSpell = addSpell\
\9book.championId = fw.getId(champion)\
\9\
\9book.getChampion = function(self)\
\9\9return fw.getById(self.championId)\
\9end\
\9\
\9book.onMemorize = function() end\
\9\
\9local page1 = book:addChild('element','page1',20,0,350,500)\
\9local page2 = book:addChild('element','page2',490,30,350,500)\
\9\
\9return book\
\
end\
\
function memorize(button)\
\9local book = button:getAncestor()\
\9local champion = book:getChampion()\
\9local text = button.parent:getChild(button.spellName..'_text')\
\9book.onMemorize(book,champion,button.spellName,text)\
end\
\
\
function unmemorize(button)\
\9local book = button:getAncestor()\
\9local champion = book:getChampion()\
\9local text = button.parent:getChild(button.spellName..'_text')\
\9book.onUnmemorize(book,champion,button.spellName,text)\
end\
\
function addSpell(book,spell)\
\9page1 = book:getChild('page1')\
\9\
\9local line = page1:addChild('element',spell.name,0,20,200,30)\
\9\
\9line.marginLeft = 20\
\
\9line:setRelativePosition('below_previous')\
\9local bmemorize = line:addChild('button',spell.name..'_memo',0,0,' + ')\
\9bmemorize.spellName = spell.name\
\9bmemorize.onClick = gw_spell_book.memorize\
\9\
\9--bmemorize.width = 50\
\9bmemorize.color = {0,0,0,100}\
\9local bunmemorize = line:addChild('button',spell.name..'_memo',0,0,' - ')\
\9bunmemorize.spellName = spell.name\
\9bunmemorize.onClick = gw_spell_book.unmemorize\
\9bunmemorize.color = {0,0,0,100}\9\
\9bunmemorize:setRelativePosition('after_previous')\
\9bunmemorize.marginLeft = 2\
\9\
\9local text = line:addChild('text',spell.name..'_text',0,0,300,20,spell.uiname)\
\9text.marginLeft = 10\
\9text.textColor = {200,200,200,200}\
\9text:setRelativePosition('after_previous')\
\9\
\9text.onClick = _turnPage\
\9\
\9local page2 = book:getChild('page2')\
\9\
\9local spellDescr = page2:addChild('element','runes_'..spell.name,0,0,350,400)\
\9spellDescr:deactivate()\
\9text.spellDescr = spellDescr\
\9\
\9local runes = spellDescr:addChild('element','runes_'..spell.name,0,0,240,240)\
\9runes:setRelativePosition{'top','center'}\
\9\
\9for _,runeChar in ipairs({'A','B','C','D','E','F','G','H','I'}) do\
\9\9\
\9\9local runeImg = runes:addChild('image','rune_'..runeChar,0,0,100,100,gw_spell_book.getRuneImage(runeChar))\
\9\9local pos = gw_spell_book.getRunePosition(runeChar)\
\9\9runeImg.x = pos[1] * 80 - 80\
\9\9runeImg.y = pos[2] * 80 - 80\
\9\9if not string.find(spell.runes,runeChar) then\
\9\9\9runeImg.color = {100,100,100,150}\
\9\9end\
\9end\9\9\
\9\
\9local spellText = spellDescr:addChild('text','spell_text_'..spell.name,0,250,350,200,spell.description)\
\9spellText.textColor = {200,200,200,200}\
\9spellText.textSize = 'medium'\
\
end\
\
\
function _turnPage(self)\
\9for i, elem in ipairs(self:getAncestor():getChild('page2').children) do\
\9\9elem:deactivate()\
\9end\
\9self.spellDescr:activate()\
end\
")

--- level 2 ---

mapName("Middle Sewer Level")
setWallSet("sewers")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
################################
###..#...######.....############
#........#...###.#.#......######
###..##.##.#...#.#...#..#.#..###
#........#...#.....##.....##.###
###..#...#.#..#.##....#.##...###
######...#.###.....#.#...#.#.###
##.#######.#...#.#.#...#...#.###
##.##..###.#.##....###...##..###
#......###.#....###...#.####.###
#...#..##....#....#...##.....###
##.#####..#.#..##.##.#...#######
##.......#...#.....#.#...#....##
#####.####.#...#.#.#.#..##.#..##
###..#...#...#...#.#.###...#.###
###....#..#######....#.....#..##
########..#.......####.#...#..##
####.#....#.#######....#########
####.###..#.#...###.#.#.....####
###....####.#.......#.#.#.#.####
#....####...#...###.#.#.....####
###....####.##.####.##.#.#.#####
###..####....#...#.......#.#####
#......#..######.##.##.##..#####
###.#####.#.......#.########...#
###.####..#.#.#####.##.....#...#
###..###.##...#........#...###.#
#......#....###.###.##...#.....#
#.#...####..##..###.##.....#####
##....#.....##..###...##########
################################
]])
spawn("script_entity", 1,1,2, "script_entity_2")
	:setSource("-- Base scripts for Level 2 --\
\
function TeleportR1()\
\9teleporter_3:setTeleportTarget(25, 29, (party.facing + 2)%4)\
end\
function TeleportR2()\
\9teleporter_2:setTeleportTarget(25, 26, (party.facing + 2)%4)\
end\
\
-- creates Illusionary Wall at 20,30\
function IluWall1()\
\9spawn(\"eob_sewers_wall_cube\", 2, 20, 30, 0, \"illusion_wall_2_20_30\")\
\9playSound(\"laugh_human_male_echo\")\
\9hudPrint(texts.getT(\"hollow_laughter\"))\
\9teleporter_4:setTeleportTarget(party.x, party.y, (party.facing + 1)%4)\
\9timer_1:activate()\
end\
function Teleport4Deact()\
\9teleporter_4:deactivate()\
\9timer_1:deactivate()\
end\
\
function MessageDeadEnd()\
\9if texts.getT(\"dead_end_show\") == \"yes\" then \
\9\9hudPrint(texts.getT(\"dead_end\"))\
\9\9texts.setT(\"dead_end_show\",\"no\")\
\9end\
end\
\
function DoorStuckOpen() \
\9if texts.getT(\"door_appears_stuck_pressed\") == \"no\" then\
\9\9eob_sewers_door_metal_stucked:open()\
\9\9timer_2:activate()\
\9end\
end\
function DoorStuckClose()\
\9if texts.getT(\"door_appears_stuck_pressed\") == \"no\" then\
\9\9texts.setT(\"door_appears_stuck_pressed\",\"yes\")\
\9\9hudPrint(texts.getT(\"door_appears_stuck\"))\
\9end\
\9eob_sewers_door_metal_stucked:close()\
\9timer_2:deactivate()\
end\
\
function SpecialQuest2(sender)\
    if sender:getItemCount() == 0 then\
\9\9setMouseItem(nil)\
\9\9sender:addItem(spawn(\"eob_dagger\"))\
\9\9return false\
\9end\
\9if data.get(sender, \"activated\") then\
\9\9hudPrint(texts.getT(\"dagger_undetachable\"))\
\9\9return false\
\9end\
\9counter_sq2:increment()\
\9data.set(sender, \"activated\", true)\
\9playSound(\"key_lock\")\
\9fw.debugPrint(sender.id..\" is activated\")\
\9-- option for open door by insert dagger in carving\
\9if sender.id == \"eob_sewers_alcove_dagger_1\" and door_throwable_3.getState() == \"closed\" then\
\9\9door_throwable_3.open()\
\9end\
\9-- option for open door by insert dagger in carving\
\9if sender.id == \"eob_sewers_alcove_dagger_4\" and door_throwable_4.getState() == \"closed\" then\
\9\9door_throwable_4.open()\
\9end\
\9local dagger = libObject.containsItem(sender, \"eob_dagger\")\
\9if dagger:getStackSize()>1 then\
\9\9spawn(\"eob_dagger\", party.level, party.x, party.y, party.facing):setStackSize(dagger:getStackSize()-1)\
\9\9dagger:setStackSize(1)\
\9end\
\9if (counter_sq2:getValue() > 0 and counter_sq2:getValue() < 4) then\
\9\9hudPrint(texts.getT(\"dagger_fits\"))\
\9else\
\9\9hudPrint(texts.getT(\"special_quest_for_this_level\"))\
\9\9secret_sq2:activate()\
\9\9spawn(\"eob_rations\", 2, 22, 16, 0)\
\9\9spawn(\"eob_rations\", 2, 21, 30, 2)\
\9\9spawn(\"eob_rations\", 2, 14, 29, 3)\
\9\9spawn(\"eob_rations\", 2, 9, 30, 2)\
\9end\
end\
\
\
\
eob_sewers_walltext_rune_transport_1:setWallText(texts.getT(\"look_like_travel_marker\"))\
\
eob_sewers_wall_text_long_1:setWallText(texts.getT(\"not_all_is_as_it_appears\"))\
eob_sewers_wall_text_long_2:setWallText(texts.getT(\"watch_your_step\"))\
eob_sewers_wall_text_long_strength:setWallText(texts.getT(\"only_the_strong\"))\
--eob_sewers_wall_text_carving_1:setWallText(texts.getT(\"carving_to_place\"))\
\
\
")
spawn("eob_sewers_door_metal", 19,24,2, "dungeon_door_metal_11")
spawn("eob_sewers_door_metal", 19,22,0, "dungeon_door_metal_12")
spawn("eob_sewers_door_metal", 20,23,1, "dungeon_door_metal_13")
spawn("eob_lock_silver", 19,24,1, "eob_lock_silver_1")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "dungeon_door_metal_11", "open")
spawn("eob_lock_silver", 20,23,0, "eob_lock_silver_2")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "dungeon_door_metal_13", "open")
spawn("eob_lock_silver", 19,22,3, "eob_lock_silver_3")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "dungeon_door_metal_12", "open")
spawn("eob_silver_key", 19,23,1, "eob_silver_key_1")
spawn("eob_sling", 19,28,3, "eob_sling_1")
spawn("eob_sewers_pressure_plate", 21,30,3, "eob_sewers_pressure_plate_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:addConnector("activate", "script_entity_2", "IluWall1")
spawn("eob_rock", 21,30,0, "eob_rock_3")
spawn("eob_sewers_alcove", 28,28,2, "eob_sewers_alcove_3")
	:addItem(spawn("eob_rations"))
	:addItem(spawn("eob_silver_key"))
	:addConnector("any", "script_entity_3", "AlcoveDoors")
spawn("eob_rations", 28,26,2, "eob_rations_1")
spawn("eob_arrow", 30,28,1, "eob_arrow_1")
spawn("eob_arrow", 30,28,2, "eob_arrow_2")
spawn("eob_sewers_wall_text_long", 19,26,1, "eob_sewers_wall_text_long_1")
	:setWallText("Not all is as it appears")
spawn("teleporter", 21,30,2, "teleporter_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(21,30,2,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("timer", 22,30,3, "timer_1")
	:setTimerInterval(1)
	:addConnector("activate", "script_entity_2", "Teleport4Deact")
spawn("pressure_plate_hidden", 17,27,1, "pressure_plate_hidden_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_2", "MessageDeadEnd")
spawn("blocker", 15,28,3, "blocker_1")
spawn("scroll_shield", 15,27,3, "eob_scroll_shield_1")
spawn("eob_zombie", 14,29,1, "eob_zombie_1")
spawn("eob_zombie", 14,30,1, "eob_zombie_2")
spawn("eob_zombie", 29,13,3, "eob_zombie_3")
spawn("eob_zombie", 4,15,2, "eob_zombie_4")
spawn("eob_zombie", 5,16,1, "eob_zombie_5")
spawn("eob_zombie", 3,16,1, "eob_zombie_6")
spawn("eob_zombie", 6,10,3, "eob_zombie_7")
spawn("eob_zombie", 6,9,3, "eob_zombie_8")
spawn("eob_zombie", 12,13,2, "eob_zombie_9")
spawn("eob_zombie", 14,13,2, "eob_zombie_10")
spawn("eob_zombie", 19,6,1, "eob_zombie_11")
spawn("eob_skeleton", 21,21,0, "eob_skeleton_1")
spawn("eob_skeleton", 4,18,2, "eob_skeleton_2")
spawn("eob_skeleton", 16,7,2, "eob_skeleton_3")
spawn("eob_skeleton", 6,22,3, "eob_skeleton_4")
	:addItem(spawn("leather_cap"))
spawn("eob_skeleton", 6,24,3, "eob_skeleton_5")
spawn("eob_skeleton", 3,26,0, "eob_skeleton_6")
spawn("eob_skeleton", 1,24,1, "eob_skeleton_7")
spawn("eob_skeleton", 6,20,3, "eob_skeleton_8")
spawn("eob_skeleton", 23,4,2, "eob_skeleton_9")
spawn("eob_skeleton_g4", 2,8,2, "eob_skeleton_g4_1")
spawn("counter", 17,30,2, "counter_sq2")
spawn("eob_sewers_wall_text_long", 22,24,3, "eob_sewers_wall_text_long_2")
	:setWallText("Watch your step")
spawn("teleporter", 23,23,1, "teleporter_pit_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(2,30,1,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_lever", 22,24,1, "eob_lever_3")
	:addConnector("any", "script_illusion_pit", "toggle")
spawn("teleporter", 24,22,1, "teleporter_pit_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(3,29,1,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_pressure_plate", 24,21,2, "eob_sewers_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("any", "script_entity_5", "toggle")
spawn("teleporter", 22,22,2, "teleporter_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,28,2,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 1,29,0, "teleporter_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(22,23,0,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_ceiling_shaft", 2,30,2, "eob_sewers_ceiling_shaft_2")
spawn("eob_sewers_ceiling_shaft", 3,29,2, "eob_sewers_ceiling_shaft_3")
spawn("teleporter", 23,21,0, "teleporter_pit_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(2,28,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 25,20,1, "teleporter_pit_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(4,27,1,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 26,23,3, "teleporter_pit_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(5,30,3,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 27,21,0, "teleporter_pit_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(6,28,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_wall_button", 26,22,3, "eob_wall_button_4")
	:addConnector("toggle", "script_entity_6", "toggle")
	:addConnector("toggle", "script_entity_7", "toggle")
spawn("eob_sewers_ceiling_shaft", 5,30,2, "eob_sewers_ceiling_shaft_5")
spawn("eob_sewers_ceiling_shaft", 2,28,2, "eob_sewers_ceiling_shaft_6")
spawn("eob_sewers_ceiling_shaft", 6,28,2, "eob_sewers_ceiling_shaft_7")
spawn("eob_sewers_ceiling_shaft", 4,27,2, "eob_sewers_ceiling_shaft_8")
spawn("teleporter", 25,21,0, "teleporter_pit_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(4,28,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_sewers_ceiling_shaft", 4,28,2, "eob_sewers_ceiling_shaft_9")
spawn("eob_sewers_pressure_plate", 27,20,1, "eob_sewers_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_8", "toggle")
spawn("eob_rations", 25,24,3, "eob_rations_5")
spawn("eob_sewers_alcove", 23,19,0, "eob_sewers_alcove_1")
	:addItem(spawn("eob_rations"))
	:addItem(spawn("eob_silver_key"))
	:addConnector("deactivate", "script_entity_3", "AlcoveDoors")
spawn("eob_wall_button", 19,19,1, "eob_wall_button_5")
	:addConnector("toggle", "script_entity_2", "DoorStuckOpen")
spawn("eob_sewers_wall_text_long", 19,20,1, "eob_sewers_wall_text_long_strength")
	:setWallText("")
spawn("timer", 20,19,3, "timer_2")
	:setTimerInterval(0.5)
	:addConnector("activate", "script_entity_2", "DoorStuckClose")
spawn("eob_potion_healing", 2,30,3, "eob_potion_healing_1")
spawn("eob_potion_vitality", 21,21,2, "eob_potion_vitality_1")
spawn("sewers_fog", 24,23,1, "sewers_fog_9")
spawn("sewers_fog", 25,19,0, "sewers_fog_10")
spawn("sewers_fog", 19,27,3, "sewers_fog_11")
spawn("floor_dirt", 24,19,3, "floor_dirt_17")
spawn("floor_dirt", 26,24,3, "floor_dirt_26")
spawn("floor_dirt", 26,29,1, "floor_dirt_29")
spawn("floor_dirt", 26,26,1, "floor_dirt_30")
spawn("floor_dirt", 30,25,2, "floor_dirt_31")
spawn("dungeon_ivy_1", 28,25,0, "dungeon_ivy_1_13")
spawn("dungeon_ivy_2", 30,25,1, "dungeon_ivy_2_6")
spawn("dungeon_ivy_2", 15,30,2, "dungeon_ivy_2_7")
spawn("dungeon_ivy_2", 23,20,3, "dungeon_ivy_2_8")
spawn("sewers_fog", 22,18,1, "sewers_fog_12")
spawn("eob_sewers_secret_button_large", 25,15,0, "eob_sewers_secret_button_2")
	:addConnector("toggle", "eob_sewers_secret_door_1", "open")
spawn("eob_sewers_alcove", 29,17,1, "eob_sewers_alcove_2")
	:addItem(spawn("eob_silver_key"))
	:addItem(spawn("eob_rations"))
	:addItem(spawn("eob_potion_giant_strength"))
	:addConnector("any", "script_entity_3", "AlcoveDoors")
spawn("dungeon_ceiling_root_1", 17,27,2, "dungeon_ceiling_root_1_1")
spawn("teleporter_rotator90", 19,27,3, "teleporter_rotator90_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(19,27,3,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("dungeon_wall_dirt_1", 19,30,2, "dungeon_wall_dirt_1_1")
spawn("dungeon_ceiling_root_1", 19,30,3, "dungeon_ceiling_root_1_2")
spawn("script_entity", 23,23,1, "script_illusion_pit")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_on", 23,23,3, "eob_sewers_pit_illusion_on_1")
spawn("eob_sewers_pit_illusion_on", 24,22,2, "eob_sewers_pit_illusion_on_2")
spawn("script_entity", 24,22,1, "script_entity_5")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_on", 23,21,0, "eob_sewers_pit_illusion_on_3")
spawn("script_entity", 25,21,1, "script_entity_6")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("script_entity", 26,23,1, "script_entity_7")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_on", 26,23,2, "eob_sewers_pit_illusion_on_4")
spawn("eob_sewers_pit_illusion_off", 25,21,2, "eob_sewers_pit_illusion_off_1")
spawn("script_entity", 27,21,1, "script_entity_8")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_off", 27,21,0, "eob_sewers_pit_illusion_off_2")
spawn("eob_sewers_pit_illusion_on", 25,20,3, "eob_sewers_pit_illusion_on_5")
spawn("floor_dirt", 26,17,1, "floor_dirt_33")
spawn("dungeon_ivy_2", 26,17,1, "dungeon_ivy_2_9")
spawn("sewers_fog", 28,14,1, "sewers_fog_13")
spawn("floor_dirt", 29,14,0, "floor_dirt_34")
spawn("floor_dirt", 28,17,1, "floor_dirt_35")
spawn("dungeon_ivy_1", 29,13,1, "dungeon_ivy_1_15")
spawn("dungeon_ivy_2", 28,17,2, "dungeon_ivy_2_10")
spawn("dungeon_ivy_1", 26,29,1, "dungeon_ivy_1_16")
spawn("dungeon_ivy_1", 22,26,3, "dungeon_ivy_1_17")
spawn("eob_sewers_secret_door", 19,20,3, "eob_sewers_secret_door_a1")
spawn("eob_sewers_secret_door", 18,20,3, "eob_sewers_secret_door_a2")
spawn("eob_sewers_secret_door", 16,20,1, "eob_sewers_secret_door_a3")
spawn("script_entity", 29,19,2, "script_entity_3")
	:setSource("-- open secret door if alcove is empty\
function AlcoveDoors()\
\9for i=1,3 do\
\9\9local alcove = findEntity(\"eob_sewers_alcove_\"..i)\
\9\9if alcove:getItemCount() == 0 then\
\9\9\9local sd = findEntity(\"eob_sewers_secret_door_a\"..i)\
\9\9\9sd:open()\
\9\9\9fw.debugPrint(\"Secret door opened: \"..sd.id)\
\9\9end\
\9end\
end\
")
spawn("eob_stone_dagger", 13,21,2, "eob_stone_dagger_1")
spawn("sewers_fog", 14,20,2, "sewers_fog_14")
spawn("dungeon_ivy_2", 13,19,0, "dungeon_ivy_2_11")
spawn("dungeon_ivy_1", 15,21,2, "dungeon_ivy_1_18")
spawn("dungeon_ivy_1", 12,25,2, "dungeon_ivy_1_19")
spawn("dungeon_ivy_2", 11,27,3, "dungeon_ivy_2_12")
spawn("sewers_fog", 11,28,0, "sewers_fog_15")
spawn("floor_dirt", 11,25,1, "floor_dirt_36")
spawn("floor_dirt", 17,25,3, "floor_dirt_37")
spawn("dungeon_ceiling_root_3", 17,25,0, "dungeon_ceiling_root_3_2")
spawn("dungeon_ceiling_root_2", 17,25,1, "dungeon_ceiling_root_2_2")
spawn("dungeon_ceiling_root_2", 11,30,2, "dungeon_ceiling_root_2_3")
spawn("dungeon_ceiling_root_1", 8,28,3, "dungeon_ceiling_root_1_3")
spawn("eob_sewers_pressure_plate", 7,30,1, "eob_sewers_pressure_plate_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setActivateOnce(true)
	:addConnector("activate", "door_throwable_4", "open")
spawn("eob_potion_healing_extra", 8,30,3, "eob_potion_healing_extra_1")
spawn("eob_rations", 8,30,0, "eob_rations_6")
spawn("dungeon_ivy_2", 8,26,0, "dungeon_ivy_2_13")
spawn("secret", 9,29,2, "secret_sq2")
spawn("eob_teleporter_rats", 8,24,1, "eob_teleporter_rats_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,1,2)
spawn("eob_sewers_wall_drainage", 12,23,1, "eob_sewers_wall_drainage_1")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 26,24,2, "eob_sewers_wall_drainage_10")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 26,26,0, "eob_sewers_wall_drainage_11")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 14,23,3, "eob_sewers_wall_drainage_12")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 15,27,0, "eob_sewers_wall_drainage_13")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 15,25,2, "eob_sewers_wall_drainage_14")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 11,17,0, "eob_sewers_wall_drainage_15")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 11,15,2, "eob_sewers_wall_drainage_16")
	:setWallText("")
spawn("eob_leather_boots", 19,10,0, "eob_leather_boots_1")
spawn("eob_rations", 19,10,3, "eob_rations_7")
spawn("eob_sewers_door_metal", 20,12,0, "eob_sewers_door_metal_2")
spawn("eob_lock_silver", 20,12,1, "eob_lock_silver_4")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "eob_sewers_door_metal_2", "open")
spawn("eob_wall_button", 9,21,3, "eob_wall_button_6")
	:addConnector("toggle", "elevator_room", "Button1")
spawn("pressure_plate_hidden", 23,26,2, "pressure_plate_hidden_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_2", "TeleportR1")
spawn("teleporter", 23,26,0, "teleporter_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,29,0,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("pressure_plate_hidden", 23,29,2, "pressure_plate_hidden_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_2", "TeleportR2")
spawn("teleporter", 23,29,0, "teleporter_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,26,0,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("sewers_fog", 4,29,3, "sewers_fog_16")
spawn("eob_sewers_door_metal", 10,21,3, "elevator_door_1")
	:addPullChain()
spawn("script_entity", 7,21,1, "elevator_room")
	:setSource("function PressButton(btn)\
\9local timer = findEntity(\"elevator_timer\")\
\9if (timer) then\
\9\9if timer:isActivated() then\
\9\9\9return\
\9\9end\
\9end\
\9local edoor = findEntity(\"elevator_door_\"..btn)\
\9if edoor:isOpen() then\
\9\9edoor:close()\
\9\9return \
\9else\
\9\9hudPrint(texts.getT(\"room_move\"))\
\9\9if (not timer) then\
\9\9\9timer = spawn(\"timer\", self.level, self.x, self.y, self.facing, \"elevator_timer\")\
\9\9\9timer:setTimerInterval(5.8)\
\9\9\9timer:addConnector(\"activate\",\"elevator_room\",\"MoveFrom\"..btn)\
\9\9end\
\9\9playSound(\"wall_sliding\")\
\9\9party:shakeCamera(0.5,0.5)\
\9\9elevator_timer:activate()\
\9end\
end\
\
-- move room: lvl (level number 1/2/3), dto (door to open 1/2/3)\
function MoveRoom(lvl,dto)\
\9elevator_timer:deactivate()\
\9elevator_timer:destroy()\
\9local eteleporter = findEntity(\"elevator_teleporter_\"..lvl)\
\9eteleporter:activate()\
\9local timer2 = findEntity(\"elevator_timer2\")\
\9if (not timer2) then\
\9\9timer2 = spawn(\"timer\", self.level, self.x, self.y, self.facing, \"elevator_timer2\")\
\9\9timer2:setTimerInterval(0.1)\
\9\9timer2:addConnector(\"activate\",\"elevator_room\",\"DeactivateTeleporters\")\
\9end\
\9elevator_timer2:activate()\
\9local edoor = findEntity(\"elevator_door_\"..dto)\
\9edoor:open()\
end\
\
function DeactivateTeleporters()\
\9playSound(\"party_land\")\
\9party:shakeCamera(0.3,0.3)\
\9elevator_timer2:deactivate()\
\9elevator_teleporter_1:deactivate()\
\9elevator_teleporter_2:deactivate()\
\9elevator_teleporter_3:deactivate()\
end\
\
function MoveFrom1()\
\9elevator_room.MoveRoom(1,2)\
end\
\
function Button1()\
\9elevator_room.PressButton(1)\
end\
\
function MoveFrom2()\
\9elevator_room.MoveRoom(2,3)\
end\
\
function Button2()\
\9elevator_room.PressButton(2)\
end\
\
function MoveFrom3()\
\9elevator_room.MoveRoom(3,1)\
end\
\
function Button3()\
\9elevator_room.PressButton(3)\
end")
spawn("teleporter", 9,21,0, "elevator_teleporter_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,21,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_sewers_door_metal", 2,21,3, "elevator_door_2")
	:addPullChain()
spawn("eob_sewers_wall_text_long", 1,21,2, "eob_sewers_wall_text_long_7")
	:setWallText("Correction Facility.")
spawn("teleporter", 1,21,0, "elevator_teleporter_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(6,18,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("teleporter", 6,18,0, "elevator_teleporter_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(9,21,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_sewers_door_metal", 7,18,3, "elevator_door_3")
	:addPullChain()
spawn("eob_wall_button", 1,21,3, "eob_wall_button_10")
	:addConnector("toggle", "elevator_room", "Button2")
spawn("eob_wall_button", 6,18,3, "eob_wall_button_11")
	:addConnector("toggle", "elevator_room", "Button3")
spawn("eob_sewers_wall_text_long", 6,18,2, "eob_sewers_wall_text_long_8")
	:setWallText("Death section")
spawn("eob_sewers_door_metal", 2,24,3, "eob_sewers_door_metal_3")
	:addPullChain()
spawn("eob_sewers_door_metal", 3,26,0, "eob_sewers_door_metal_4")
	:addPullChain()
spawn("eob_sewers_door_metal", 5,24,1, "eob_sewers_door_metal_5")
	:addPullChain()
spawn("eob_sewers_door_metal", 6,22,3, "eob_sewers_door_metal_6")
	:addPullChain()
spawn("eob_sewers_door_metal", 6,20,3, "eob_sewers_door_metal_7")
	:addPullChain()
spawn("eob_sewers_door_metal", 4,19,0, "eob_sewers_door_metal_8")
	:addPullChain()
spawn("eob_bow", 6,20,2, "eob_bow_1")
spawn("scroll_invisibility", 6,24,2, "eob_scroll_invisibility_1")
	:setScrollText("")
spawn("eob_sewers_secret_button_large", 3,26,3, "eob_sewers_secret_button_3")
	:addConnector("toggle", "eob_sewers_secret_door_cube_2", "open")
	:addConnector("toggle", "eob_secret_door_empty_4", "open")
	:addConnector("toggle", "eob_secret_door_empty_3", "open")
	:addConnector("toggle", "secret_4", "activate")
spawn("torch_holder", 13,20,3, "torch_holder_1")
	:addTorch()
spawn("torch_holder", 20,23,2, "torch_holder_7")
	:addTorch()
spawn("torch_holder", 26,16,1, "torch_holder_8")
	:addTorch()
spawn("eob_sewers_wall_text_long", 9,21,2, "eob_sewers_wall_text_long_9")
	:setWallText("Entry Level.")
spawn("sewers_fog", 4,22,0, "sewers_fog_17")
spawn("eob_gold_key", 3,15,0, "eob_gold_key_1")
spawn("eob_sewers_cave_in_ceiling", 9,16,0, "eob_sewers_cave_in_ceiling_1")
spawn("eob_rock", 9,16,0, "eob_rock_6")
spawn("sewers_fog", 4,16,3, "sewers_fog_18")
spawn("sewers_fog", 8,17,1, "sewers_fog_19")
spawn("floor_dirt", 8,19,0, "floor_dirt_2")
spawn("floor_dirt", 8,15,2, "floor_dirt_3")
spawn("dungeon_ivy_1", 9,16,1, "dungeon_ivy_1_20")
spawn("dungeon_ivy_2", 9,17,1, "dungeon_ivy_2_14")
spawn("dungeon_ivy_2", 9,19,2, "dungeon_ivy_2_15")
spawn("dungeon_ivy_1", 8,19,3, "dungeon_ivy_1_21")
spawn("dungeon_ivy_1", 7,15,0, "dungeon_ivy_1_22")
spawn("dungeon_ivy_1", 4,15,0, "dungeon_ivy_1_23")
spawn("floor_corpse", 9,18,2, "floor_corpse_1")
spawn("eob_metal_hooks_chain", 9,18,1, "eob_metal_hooks_chain_1")
spawn("eob_metal_hooks_chain", 3,15,0, "eob_metal_hooks_chain_2")
spawn("eob_sewers_secret_door", 17,11,2, "eob_sewers_secret_door_5")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 17,13,0, "eob_sewers_secret_door_6")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 16,13,3, "eob_sewers_secret_door_7")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 14,13,1, "eob_sewers_secret_door_8")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 11,11,2, "eob_sewers_secret_door_9")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 11,13,0, "eob_sewers_secret_door_10")
	:setDoorState("open")
spawn("eob_sewers_door_metal", 5,13,3, "eob_sewers_door_metal_11")
spawn("eob_sewers_pressure_plate", 5,14,0, "eob_sewers_pressure_plate_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "eob_sewers_door_metal_11", "open")
	:addConnector("deactivate", "eob_sewers_door_metal_11", "close")
spawn("eob_sewers_secret_door", 12,10,0, "eob_sewers_secret_door_11")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 12,8,2, "eob_sewers_secret_door_12")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 16,2,2, "eob_sewers_secret_door_13")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 16,4,0, "eob_sewers_secret_door_14")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 20,3,1, "eob_sewers_secret_door_15")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 22,3,3, "eob_sewers_secret_door_16")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 22,7,2, "eob_sewers_secret_door_17")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 22,9,0, "eob_sewers_secret_door_18")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 21,8,1, "eob_sewers_secret_door_19")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 14,12,3, "eob_sewers_secret_door_20")
spawn("eob_sewers_secret_door", 10,11,0, "eob_sewers_secret_door_21")
spawn("eob_sewers_secret_door", 10,5,1, "eob_sewers_secret_door_22")
spawn("eob_sewers_secret_door", 12,5,3, "eob_sewers_secret_door_23")
spawn("eob_sewers_secret_door", 12,4,0, "eob_sewers_secret_door_24")
spawn("eob_sewers_wall_drainage", 12,8,0, "eob_sewers_wall_drainage_17")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 12,6,2, "eob_sewers_wall_drainage_18")
	:setWallText("")
spawn("eob_sewers_secret_door", 18,2,3, "eob_sewers_secret_door_25")
spawn("eob_sewers_secret_door", 16,2,1, "eob_sewers_secret_door_26")
spawn("eob_sewers_secret_door", 22,4,2, "eob_sewers_secret_door_27")
spawn("eob_sewers_secret_door", 21,5,1, "eob_sewers_secret_door_28")
spawn("eob_sewers_secret_door", 23,5,3, "eob_sewers_secret_door_29")
spawn("eob_rations", 13,6,1, "eob_rations_8")
spawn("eob_teleporter_rats", 27,9,1, "eob_teleporter_rats_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(9,24,1,2)
spawn("torch_holder", 20,10,0, "torch_holder_9")
	:addTorch()
spawn("eob_sewers_door_metal", 4,10,1, "eob_sewers_door_metal_9")
spawn("eob_sewers_door_portcullis", 2,9,0, "portcullis_door_throwable_force_3")
	:setDoorState("open")
spawn("eob_wall_button", 2,8,0, "eob_wall_button_12")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_sewers_secret_door_9", "close")
	:addConnector("toggle", "eob_sewers_secret_door_10", "close")
	:addConnector("toggle", "eob_sewers_secret_door_8", "close")
	:addConnector("toggle", "eob_sewers_secret_door_7", "close")
	:addConnector("toggle", "eob_sewers_secret_door_5", "close")
	:addConnector("toggle", "eob_sewers_secret_door_6", "close")
	:addConnector("toggle", "eob_sewers_secret_door_11", "close")
	:addConnector("toggle", "eob_sewers_secret_door_12", "close")
	:addConnector("toggle", "eob_sewers_secret_door_13", "close")
	:addConnector("toggle", "eob_sewers_secret_door_14", "close")
	:addConnector("toggle", "eob_sewers_secret_door_15", "close")
	:addConnector("toggle", "eob_sewers_secret_door_16", "close")
	:addConnector("toggle", "eob_sewers_secret_door_27", "close")
	:addConnector("toggle", "eob_sewers_secret_door_28", "close")
	:addConnector("toggle", "eob_sewers_secret_door_29", "close")
	:addConnector("toggle", "eob_sewers_secret_door_19", "open")
	:addConnector("toggle", "eob_sewers_secret_door_18", "open")
	:addConnector("toggle", "eob_sewers_secret_door_17", "open")
	:addConnector("toggle", "eob_sewers_secret_door_20", "open")
	:addConnector("toggle", "eob_sewers_secret_door_21", "open")
	:addConnector("toggle", "eob_sewers_secret_door_22", "open")
	:addConnector("toggle", "eob_sewers_secret_door_23", "open")
	:addConnector("toggle", "eob_sewers_secret_door_24", "open")
	:addConnector("toggle", "eob_sewers_secret_door_26", "open")
	:addConnector("toggle", "eob_sewers_secret_door_25", "open")
spawn("eob_lever", 2,8,1, "eob_lever_4")
	:addConnector("activate", "eob_sewers_door_metal_9", "open")
spawn("eob_potion_healing", 6,11,2, "eob_potion_healing_2")
spawn("sewers_fog", 14,11,0, "sewers_fog_20")
spawn("sewers_fog", 23,5,2, "sewers_fog_21")
spawn("floor_dirt", 6,9,2, "floor_dirt_38")
spawn("floor_dirt", 14,15,3, "floor_dirt_39")
spawn("floor_dirt", 14,4,3, "floor_dirt_40")
spawn("dungeon_ivy_1", 6,10,1, "dungeon_ivy_1_24")
spawn("dungeon_ivy_1", 15,9,0, "dungeon_ivy_1_25")
spawn("dungeon_ivy_2", 15,2,3, "dungeon_ivy_2_16")
spawn("dungeon_ivy_2", 19,2,1, "dungeon_ivy_2_17")
spawn("dungeon_ivy_2", 2,13,3, "dungeon_ivy_2_18")
spawn("sewers_fog", 4,10,2, "sewers_fog_22")
spawn("sewers_fog", 15,7,0, "sewers_fog_23")
spawn("sewers_fog", 24,12,3, "sewers_fog_24")
spawn("torch_holder", 22,13,3, "torch_holder_10")
	:addTorch()
spawn("dungeon_ivy_2", 23,14,2, "dungeon_ivy_2_19")
spawn("eob_sewers_door_metal", 28,5,2, "eob_sewers_door_metal_10")
spawn("eob_lock_golden", 27,6,0, "eob_lock_golden_1")
	:setOpenedBy("eob_gold_key")
	:addConnector("activate", "eob_sewers_door_metal_10", "open")
spawn("blocker", 18,13,3, "blocker_2")
spawn("blocker", 9,11,1, "blocker_3")
spawn("blocker", 25,8,2, "blocker_4")
spawn("floor_dirt", 1,11,2, "floor_dirt_15")
spawn("dungeon_ivy_1", 1,11,2, "dungeon_ivy_1_26")
spawn("sewers_fog", 18,4,2, "sewers_fog_25")
spawn("sewers_fog", 12,4,2, "sewers_fog_26")
spawn("sewers_fog", 10,11,2, "sewers_fog_27")
spawn("sewers_fog", 24,27,3, "sewers_fog_29")
spawn("secret", 2,26,3, "secret_4")
spawn("floor_corpse", 3,15,1, "floor_corpse_3")
spawn("eob_sewers_door_metal_force", 20,18,3, "eob_sewers_door_metal_stucked")
spawn("eob_sewers_door_metal_force", 27,13,1, "eob_sewers_door_metal_force_1")
spawn("eob_sewers_door_metal_force", 28,15,2, "eob_sewers_door_metal_force_2")
spawn("eob_sewers_door_metal_force", 7,13,3, "eob_sewers_door_metal_force_3")
spawn("eob_sewers_door_metal_force", 7,15,3, "eob_sewers_door_metal_force_4")
spawn("eob_sewers_door_portcullis", 22,16,1, "portcullis_door_throwable_3")
	:setDoorState("open")
spawn("eob_sewers_door_portcullis", 21,19,2, "portcullis_door_throwable_force_1")
	:setDoorState("open")
spawn("door_throwable", 22,16,1, "door_throwable_3")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("door_throwable", 8,30,1, "door_throwable_4")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("eob_sewers_door_portcullis", 8,30,1, "portcullis_door_throwable_4")
	:setDoorState("open")
spawn("door_throwable_force", 21,19,2, "door_throwable_force_1")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("door_throwable_force", 2,9,0, "door_throwable_force_3")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("eob_ladder_down", 22,22,0, "eob_ladder_down_1")
spawn("eob_ladder_up", 1,29,2, "eob_ladder_up_1")
spawn("eob_sewers_ceiling_shaft", 1,29,1, "eob_sewers_ceiling_shaft_4")
spawn("eob_sewers_pit_fake", 22,22,2, "eob_sewers_pit_fake_1")
spawn("teleporter", 18,23,1, "teleporter_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(17,23,1,1)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_ladder_up", 18,23,3, "eob_ladder_up_2")
spawn("eob_sewers_ceiling_shaft", 18,23,3, "eob_sewers_ceiling_shaft_10")
spawn("eob_sewers_pit_fake", 27,4,3, "eob_sewers_pit_fake_3")
spawn("eob_ladder_down", 27,4,3, "eob_ladder_down_3")
spawn("teleporter", 27,4,1, "teleporter_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(26,4,1,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_secret_door", 26,15,0, "eob_sewers_secret_door_1")
spawn("eob_sewers_alcove_dagger", 22,16,0, "eob_sewers_alcove_dagger_3")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("eob_sewers_alcove_dagger", 21,30,2, "eob_sewers_alcove_dagger_2")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("eob_sewers_alcove_dagger", 14,29,3, "eob_sewers_alcove_dagger_1")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("eob_sewers_alcove_dagger", 9,30,2, "eob_sewers_alcove_dagger_4")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("script_entity", 24,16,2, "door_throwable_3_opener")
	:setSource("-- sript to create the wall, button and open portcullis...\
\
spawn(\"eob_sewers_wall_blockage_2_24_16\", 2, 24, 16, 3, \"eob_sewers_wall_blockage_2_24_16_3\")\
spawn(\"eob_wall_button\", 2, 23, 16, 1, \"eob_wall_button_2_24_16_3\"):addConnector('toggle',self.id,'removewall')\
spawn(\"timer\", 2, 24, 16, 0, \"timer_\"..self.id):setTimerInterval(0.5):addConnector('activate',self.id,'removewall')\
\
function activate()\
\9playSoundAt(\"button\", 2, 23,16)\
\9door_throwable_3.open()\
\9timer_door_throwable_3_opener:activate()\
end\
\
function removewall()\
\9playSoundAt(\"pit_close\", 2, 23,16)\
\9eob_wall_button_2_24_16_3:destroy()\
\9eob_sewers_wall_blockage_2_24_16_3:destroy()\
\9timer_door_throwable_3_opener:deactivate()\
end")
spawn("eob_sewers_wall_pipe", 20,8,3, "eob_sewers_wall_pipe_7")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 18,8,1, "eob_sewers_wall_pipe_8")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 19,16,2, "eob_sewers_wall_pipe_9")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 19,18,0, "eob_sewers_wall_pipe_10")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 25,17,2, "eob_sewers_wall_pipe_11")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 25,19,0, "eob_sewers_wall_pipe_12")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 17,25,2, "eob_sewers_wall_pipe_13")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 17,27,0, "eob_sewers_wall_pipe_14")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 23,28,0, "eob_sewers_wall_pipe_15")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 23,26,2, "eob_sewers_wall_pipe_16")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 25,27,2, "eob_sewers_wall_pipe_17")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_wall_pipe", 25,29,0, "eob_sewers_wall_pipe_18")
	:setWallText("This slimy, smelly drainpipe reveals nothing.")
spawn("eob_sewers_walltext_rune_transport", 17,27,3, "eob_sewers_walltext_rune_transport_1")
	:setWallText("")
spawn("eob_sewers_wall_cube", 23,28,0, "eob_sewers_wall_cube_1")
spawn("eob_illusion_wall_door", 23,28,3, "eob_illusion_wall_door_1")
spawn("eob_illusion_wall_door", 23,29,0, "eob_illusion_wall_door_2")
spawn("eob_illusion_wall_door", 24,28,3, "eob_illusion_wall_door_3")
spawn("eob_sewers_wall_cube", 25,27,0, "eob_sewers_wall_cube_3")
spawn("eob_illusion_wall_door", 25,27,3, "eob_illusion_wall_door_4")
spawn("eob_illusion_wall_door", 25,27,0, "eob_illusion_wall_door_5")
spawn("eob_illusion_wall_door", 26,27,3, "eob_illusion_wall_door_6")
spawn("eob_sewers_wall_cube", 29,28,0, "eob_sewers_wall_cube_4")
spawn("eob_sewers_wall_cube", 30,27,0, "eob_sewers_wall_cube_5")
spawn("eob_illusion_wall_door", 28,28,1, "eob_illusion_wall_door_7")
spawn("eob_illusion_wall_door", 30,28,0, "eob_illusion_wall_door_8")
spawn("eob_sewers_wall_cube", 16,27,0, "eob_sewers_wall_cube_6")
spawn("eob_sewers_wall_cube", 15,28,0, "eob_sewers_wall_cube_7")
spawn("eob_illusion_wall_door", 17,27,3, "eob_illusion_wall_door_9")
spawn("eob_illusion_wall_door", 15,27,2, "eob_illusion_wall_door_10")
spawn("eob_sewers_walltext_rune_transport", 15,27,1, "eob_sewers_walltext_rune_transport_3")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 15,27,2, "eob_sewers_walltext_rune_transport_4")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 22,28,1, "eob_sewers_walltext_rune_transport_5")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 24,28,3, "eob_sewers_walltext_rune_transport_6")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 23,29,0, "eob_sewers_walltext_rune_transport_7")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 24,27,1, "eob_sewers_walltext_rune_transport_8")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 26,27,3, "eob_sewers_walltext_rune_transport_9")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 25,26,2, "eob_sewers_walltext_rune_transport_10")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 28,28,1, "eob_sewers_walltext_rune_transport_11")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 30,28,3, "eob_sewers_walltext_rune_transport_12")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 30,28,0, "eob_sewers_walltext_rune_transport_13")
	:setWallText("")
spawn("eob_sewers_walltext_rune_transport", 30,26,2, "eob_sewers_walltext_rune_transport_14")
	:setWallText("")
spawn("eob_sewers_secret_door_cube", 3,27,0, "eob_sewers_secret_door_cube_2")
spawn("eob_secret_door_empty", 3,27,2, "eob_secret_door_empty_3")
spawn("eob_secret_door_empty", 3,27,1, "eob_secret_door_empty_4")
spawn("eob_sewers_walltext_rats", 9,25,3, "eob_sewers_walltext_rats_1")
	:setWallText("R.A.T.S.")
spawn("eob_sewers_walltext_rats", 28,10,3, "eob_sewers_walltext_rats_3")
	:setWallText("R.A.T.S.")

--- level 3 ---

mapName("Lower Sewer Level")
setWallSet("sewers")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
#......#...###............#....#
#.#....#.#.#...######.###...#..#
#.######.#####.#.#...#####.##..#
####.........#.#..#.#....#..##.#
####.#.#####.#.##...###.##.#.#.#
#..#.#.#.##..#...##.#....###.#.#
#.##.#....##.###....#.##.#...#.#
#....##....#....#.#.#......###.#
#.##.##....#.##.#.#..#.#####...#
#.##..##.#.#.#..#.##.#.........#
#.##.#####.#.####.#...##########
#.##.........#....#.#.##########
#.######.#####....#.#.....#..###
#.#..#.#.#...##.###...###....###
#.#..#...#........###...#.###..#
#.#...#################.#..#...#
#.###.....#..........##.###..#.#
#.####..#.#.######.#.##.....#..#
#.#.##.#......#....#.#######...#
#......#.....##....#.........#.#
#####.##.....##....#...##.##.#.#
#.....##......#....#.####.##.#.#
###.##..#######.####..###......#
#.#.#..##.......#...#.##########
#.#.#.#...#.##.#.......#.......#
#...#.#.#.#.#..#.......#.......#
##......#.....##.......#.......#
#.####.##.#.#..#.......#.......#
#...#...#.#.##.#.......#.......#
#.#...#...#....#.......#.......#
################################
]])
spawn("eob_sewers_alcove", 10,2,2, "eob_sewers_alcove_105")
	:addItem(spawn("eob_gem_blue_u"))
spawn("eob_sewers_lock_eye", 6,5,1, "eob_sewers_lock_eye_47")
	:addConnector("deactivate", "blue_gems_puzzle", "remove")
	:addConnector("activate", "blue_gems_puzzle", "add")
spawn("eob_sewers_alcove", 2,6,1, "eob_sewers_alcove_106")
	:addItem(spawn("eob_gem_blue_u"))
spawn("eob_sewers_lock_eye", 11,6,2, "eob_sewers_lock_eye_48")
	:addConnector("activate", "blue_gems_puzzle", "add")
	:addConnector("deactivate", "blue_gems_puzzle", "remove")
spawn("eob_sewers_alcove", 9,7,1, "eob_sewers_alcove_107")
	:addItem(spawn("eob_arrow_u"))
spawn("eob_sewers_alcove", 7,9,3, "eob_sewers_alcove_108")
	:addItem(spawn("eob_rations_iron_u"))
	:addItem(spawn("eob_rations_iron_u"))
	:addItem(spawn("eob_rations_iron_u"))
spawn("eob_sewers_lock_eye", 5,10,0, "eob_sewers_lock_eye_49")
	:addConnector("activate", "blue_gems_puzzle", "add")
	:addConnector("deactivate", "blue_gems_puzzle", "remove")
spawn("eob_sewers_alcove", 14,10,3, "eob_sewers_alcove_109")
	:addItem(spawn("eob_gem_blue_u"))
spawn("eob_sewers_lock_eye", 10,11,3, "eob_sewers_lock_eye_50")
	:addConnector("activate", "blue_gems_puzzle", "add")
	:addConnector("deactivate", "blue_gems_puzzle", "remove")
spawn("eob_sewers_alcove", 6,14,0, "eob_sewers_alcove_110")
	:addItem(spawn("eob_gem_blue_u"))
spawn("eob_sewers_wall_text_long", 11,17,3, "eob_sewers_wall_text_long_70")
	:setWallText("MUSEUM.")
spawn("eob_sewers_lever", 12,17,2, "eob_sewers_lever_79")
	:addConnector("activate", "eob_sewers_door_metal_22", "toggle")
spawn("eob_sewers_door_metal", 9,18,2, "eob_sewers_door_metal_346")
spawn("eob_sewers_lever", 8,19,0, "eob_sewers_lever_77")
	:addConnector("activate", "eob_sewers_door_metal_346", "toggle")
spawn("eob_sewers_lever", 12,19,0, "eob_sewers_lever_78")
	:addConnector("activate", "eob_sewers_door_metal_22", "toggle")
spawn("eob_sewers_button", 17,19,0, "eob_sewers_button_120")
	:addConnector("toggle", "eob_sewers_door_metal_21", "toggle")
spawn("eob_sewers_door_metal", 4,20,3, "eob_sewers_door_metal_349")
	:addPullChain()
spawn("eob_sewers_lever", 16,22,2, "eob_sewers_lever_80")
	:addConnector("any", "eob_sewers_door_metal_one_80", "toggle")
spawn("eob_sewers_door_metal_one", 15,23,2, "eob_sewers_door_metal_one_80")
	:addPullChain()
spawn("eob_sewers_pressure_plate", 19,24,0, "eob_sewers_pressure_plate_145")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_19", "deactivatePit")
spawn("eob_teleporter", 29,25,2, "eob_teleporter_302")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(20,23,2,3)
spawn("eob_sewers_pressure_plate", 20,26,2, "eob_sewers_pressure_plate_146")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_19", "activatePit")
	:addConnector("activate", "script_entity_20", "activatePit")
spawn("eob_sewers_pressure_plate", 16,28,2, "eob_sewers_pressure_plate_147")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_26", "deactivatePit")
	:addConnector("activate", "script_entity_19", "activatePit")
spawn("eob_sewers_pressure_plate", 21,28,2, "eob_sewers_pressure_plate_148")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_22", "deactivatePit")
	:addConnector("activate", "script_entity_21", "activatePit")
spawn("eob_sewers_door_portcullis_one", 4,30,1, "eob_sewers_door_portcullis_one_10")
	:addPullChain()
spawn("eob_sewers_pressure_plate", 18,30,2, "eob_sewers_pressure_plate_149")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_24", "activatePit")
	:addConnector("activate", "script_entity_25", "deactivatePit")
spawn("eob_sewers_pressure_plate", 22,30,2, "eob_sewers_pressure_plate_150")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_22", "activatePit")
	:addConnector("activate", "script_entity_23", "deactivatePit")
spawn("eob_chain_mail_u", 9,7,1, "eob_chain_mail_u_1")
spawn("eob_shield_u", 9,7,1, "eob_shield_u_2")
spawn("eob_rations_u", 3,16,2, "eob_rations_u_11")
spawn("eob_shield_u", 13,19,3, "eob_shield_u_3")
spawn("eob_rations_u", 10,20,1, "eob_rations_u_12")
spawn("eob_potion_healing", 9,21,0, "eob_potion_healing_4")
spawn("eob_rock_u", 5,22,1, "eob_rock_u_7")
spawn("eob_cleric_scroll_flame_blade", 11,22,3, "eob_cleric_scroll_flame_blade_1")
	:setScrollText("")
spawn("scroll_fireball", 15,22,2, "eob_mage_scroll_fireball_1")
	:setScrollText("")
spawn("eob_arrow_u", 17,24,1, "eob_arrow_u_6")
spawn("eob_long_sword_u", 1,30,3, "eob_long_sword_u_1")
spawn("eob_wand_magic_missile_3_u", 30,30,3, "eob_wand_magic_missile_3_u_1")
spawn("eob_bones_human_anya_u", 1,30,3, "eob_bones_human_anya_u_1")
spawn("eob_leather_armor_u", 1,30,3, "eob_leather_armor_u_1")
spawn("eob_spear_u", 1,30,3, "eob_spear_u_1")
spawn("eob_potion_speed", 17,24,0, "eob_potion_speed_1")
spawn("eob_arrow_u", 17,24,1, "eob_arrow_u_7")
spawn("eob_arrow_u", 17,24,0, "eob_arrow_u_8")
spawn("eob_arrow_u", 17,24,1, "eob_arrow_u_9")
spawn("eob_kuotoa1_1", 30,28,0, "eob_kuotoa1_1_2")
spawn("eob_flind1_2", 10,20,3, "eob_flind1_2_2")
	:setAIState("guard")
spawn("eob_kuotoa1_1", 1,29,0, "eob_kuotoa1_1_3")
spawn("eob_kuotoa1_1", 24,26,0, "eob_kuotoa1_1_4")
spawn("eob_flind1_2", 3,16,0, "eob_flind1_2_3")
spawn("eob_flind1_2", 7,23,0, "eob_flind1_2_6")
spawn("eob_kuotoa1_1", 26,29,0, "eob_kuotoa1_1_9")
spawn("eob_flind2_1_group", 18,19,0, "eob_flind2_1_group_1")
spawn("eob_flind1_2", 2,22,0, "eob_flind1_2_7")
spawn("eob_flind1_2", 6,27,0, "eob_flind1_2_8")
spawn("eob_kuotoa1_1", 2,29,0, "eob_kuotoa1_1_12")
spawn("eob_flind1_2", 8,30,0, "eob_flind1_2_9")
spawn("eob_flind1_2", 5,2,0, "eob_flind1_2_10")
spawn("eob_flind2_1_group", 10,24,0, "eob_flind2_1_group_2")
spawn("eob_kuotoa1_1", 21,25,0, "eob_kuotoa1_1_14")
	:setAIState("guard")
	:addItem(spawn("eob_rations"))
spawn("torch_holder", 26,3,1, "torch_holder_11")
	:addTorch()
spawn("eob_sewers_wall_drainage", 19,4,1, "eob_sewers_wall_drainage_19")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 21,4,3, "eob_sewers_wall_drainage_20")
	:setWallText("")
spawn("torch_holder", 27,25,0, "torch_holder_12")
	:addTorch()
spawn("eob_teleporter_rats", 21,2,2, "eob_teleporter_rats_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(3,20,2,3)
spawn("teleporter", 17,1,1, "teleporter_moveto241")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(24,1,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("pressure_plate_hidden", 17,1,2, "pressure_plate_hidden_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_moveto241", "activate")
spawn("script_entity", 17,0,3, "script_moveto241")
	:setSource("moveto_level3_241_east = false\
moveto_level3_241_east_passed = false\
\
function activate()\
\9if moveto_level3_241_east then\
\9\9moveto_level3_241_east = false\
\9\9if moveto_level3_241_east_passed then\
\9\9\9return false\
\9\9else\
\9\9\9moveto_level3_241_east_passed = true\
\9\9end\
\9end\
\9local timer = spawn(\"timer\", self.level, self.x, self.y, 0)\
\9timer:addConnector(\"activate\", \"script_moveto241\", \"deactivateByTimer\")\
\9timer:setTimerInterval(0.4)\
\9timer:activate()\
\9teleporter_moveto241:activate()\
end\
\
function deactivateByTimer(sender)\
\9teleporter_moveto241:deactivate()\
\9sender:destroy()\
end\
\
function setMoveFromEast()\
\9moveto_level3_241_east = true\
end\
")
spawn("pressure_plate_hidden", 18,1,3, "pressure_plate_hidden_17")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_moveto241", "setMoveFromEast")
spawn("eob_sewers_door_metal", 28,1,1, "eob_sewers_door_metal_12")
	:addPullChain()
spawn("eob_sewers_door_metal", 30,4,0, "eob_sewers_door_metal_13")
	:addPullChain()
spawn("eob_sewers_door_metal", 30,9,0, "eob_sewers_door_metal_14")
	:addPullChain()
spawn("eob_sewers_door_metal", 28,10,3, "eob_sewers_door_metal_15")
	:addPullChain()
spawn("eob_sewers_door_metal", 23,10,3, "eob_sewers_door_metal_16")
	:addPullChain()
spawn("teleporter_rotator180", 30,6,1, "teleporter_rotator180_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(30,6,1,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter_rotator180", 25,10,3, "teleporter_rotator180_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,10,3,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_silver_key", 28,9,0, "eob_silver_key_2")
spawn("teleporter", 27,4,3, "teleporter_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(28,4,3,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_ladder_up", 27,4,1, "eob_ladder_up_3")
spawn("eob_sewers_ceiling_shaft", 27,4,3, "eob_sewers_ceiling_shaft_11")
spawn("eob_sewers_wall_pipe", 22,10,2, "eob_sewers_wall_pipe_19")
	:setWallText("")
spawn("eob_sewers_wall_pipe", 21,11,1, "eob_sewers_wall_pipe_20")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 25,20,0, "eob_sewers_wall_drainage_21")
	:setWallText("")
spawn("eob_sewers_wall_drainage", 25,18,2, "eob_sewers_wall_drainage_22")
	:setWallText("")
spawn("blocker", 19,9,2, "blocker_7")
spawn("blocker", 1,20,1, "blocker_10")
spawn("eob_teleporter_rats", 3,19,0, "eob_teleporter_rats_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(21,1,0,3)
spawn("eob_kuotoa", 23,4,2, "eob_kuotoa_1")
	:addItem(spawn("eob_rations"))
spawn("pressure_plate_hidden", 30,4,2, "pressure_plate_hidden_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_13", "close")
spawn("pressure_plate_hidden", 30,6,0, "pressure_plate_hidden_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_4", "message")
spawn("script_entity", 29,8,0, "script_entity_4")
	:setSource("function message()\
\9hudPrint(texts.getT(\"feel_dizzy\"))\
end\
")
spawn("pressure_plate_hidden", 25,10,3, "pressure_plate_hidden_12")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_4", "message")
spawn("sewers_fog", 30,6,2, "sewers_fog_28")
spawn("sewers_fog", 25,10,2, "sewers_fog_30")
spawn("pressure_plate_hidden", 30,8,3, "pressure_plate_hidden_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_14", "close")
spawn("pressure_plate_hidden", 27,10,2, "pressure_plate_hidden_14")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_15", "close")
spawn("pressure_plate_hidden", 23,10,2, "pressure_plate_hidden_15")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_16", "close")
spawn("eob_flind", 22,8,2, "eob_flind_1")
	:addItem(spawn("eob_mace"))
	:addItem(spawn("eob_silver_key"))
spawn("eob_arrow", 21,6,3, "eob_arrow_4")
spawn("eob_kuotoa", 17,5,2, "eob_kuotoa_2")
spawn("eob_kuotoa", 19,3,2, "eob_kuotoa_3")
spawn("eob_sewers_secret_door", 14,2,3, "eob_sewers_secret_door_30")
spawn("eob_sewers_secret_button_large", 14,3,3, "eob_sewers_secret_button_5")
	:addConnector("toggle", "eob_sewers_secret_door_30", "toggle")
spawn("eob_scroll_cause_light_wnds", 12,2,3, "eob_scroll_cause_light_wnds_1")
	:setScrollText("")
spawn("eob_sewers_door_metal", 17,12,0, "eob_sewers_door_metal_17")
	:addPullChain()
spawn("eob_sewers_secret_door", 15,13,2, "eob_sewers_secret_door_31")
spawn("arrow", 15,13,1, "arrow_1")
spawn("eob_lock_silver_large", 16,13,2, "eob_lock_silver_large_1")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "script_entity_9", "ButtonRed1")
spawn("eob_lock_silver_large", 15,13,2, "eob_lock_silver_large_2")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "script_entity_9", "ButtonBlue")
spawn("eob_lock_silver_large", 14,13,2, "eob_lock_silver_large_3")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "script_entity_9", "ButtonRed2")
spawn("eob_sewers_secret_door", 16,13,2, "eob_sewers_secret_door_32")
spawn("eob_sewers_secret_door", 14,13,2, "eob_sewers_secret_door_34")
spawn("script_entity", 15,12,0, "script_entity_9")
	:setSource("LockButtonRed1 = false\
LockButtonRed2 = false\
\
-- spawn Button Red on 16,13\
function ButtonRed1()\
\9eob_lock_silver_large_1:destroy()\
\9spawn(\"eob_lock_button_red\", 3, 16, 13, 2):addConnector('toggle',self.id,'SpawnK1')\
end\
-- spawn Button Red on 14,13\
function ButtonRed2()\
\9eob_lock_silver_large_3:destroy()\
\9spawn(\"eob_lock_button_red\", 3, 14, 13, 2):addConnector('toggle',self.id,'SpawnK2')\
end\
-- spawn Button Blue on 15,13\
function ButtonBlue()\
\9eob_lock_silver_large_2:destroy()\
\9spawn(\"eob_lock_button_blue\", 3, 15, 13, 2, \"button_blue_2_15_13\"):addConnector('toggle',self.id,'OpenDoor')\
end\
\
-- summon Kuo-Toa on 16,12 --\
function SpawnK1()\
\9if not LockButtonRed1 then\
\9\9spawn(\"eob_kuotoa\", 3, 16, 12, 2):addItem(spawn(\"eob_silver_key\")):addItem(spawn(\"eob_rations\"))\
\9\9LockButtonRed1 = true\
\9end\
end\
-- summon Kuo-Toa on 14,12 --\
function SpawnK2()\
\9if not LockButtonRed2 then\
\9\9spawn(\"eob_kuotoa\", 3, 14, 12, 2):addItem(spawn(\"eob_silver_key\")):addItem(spawn(\"eob_rations\"))\
\9\9LockButtonRed2 = true\
\9end\
end\
\
function OpenDoor()\
\9button_blue_2_15_13:destroy()\
\9eob_sewers_secret_door_31:open()\
end")
spawn("pressure_plate_hidden", 12,15,2, "pressure_plate_hidden_16")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_10", "SpawnPit")
spawn("eob_gem_red", 10,15,3, "eob_gem_red_1")
spawn("eob_dagger_backstabber", 10,15,0, "eob_dagger_backstabber_1")
spawn("eob_scroll_detect_magic", 12,14,0, "eob_scroll_detect_magic_2")
	:setScrollText("")
spawn("eob_sewers_pit_illusion_off", 11,15,2, "eob_sewers_pit_illusion_off_3")
spawn("teleporter", 11,15,0, "teleporter_pit_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(19,24,0,4)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("script_entity", 11,15,3, "script_entity_10")
	:setSource("function SpawnPit()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_door_metal", 26,14,3, "eob_sewers_door_metal_18")
spawn("eob_kuotoa", 27,14,3, "eob_kuotoa_4")
spawn("eob_potion_healing", 28,13,3, "eob_potion_healing_3")
spawn("eob_potion_healing_extra", 28,13,2, "eob_potion_healing_extra_2")
spawn("eob_lock_silver", 25,13,1, "eob_lock_silver_5")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "eob_sewers_door_metal_18", "open")
	:addConnector("activate", "spawner_1", "activate")
	:addConnector("activate", "spawner_2", "activate")
spawn("eob_lock_silver", 26,16,0, "eob_lock_silver_7")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "eob_sewers_door_metal_18", "open")
spawn("eob_kuotoa", 23,20,1, "eob_kuotoa_5")
	:addItem(spawn("eob_rations"))
spawn("eob_sewers_pit_illusion_off", 21,20,2, "eob_sewers_pit_illusion_off_5")
spawn("teleporter", 21,20,0, "teleporter_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(29,29,0,4)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("script_entity", 21,20,3, "script_entity_12")
	:setSource("function SpawnPit()\
\9illusion_pits.toggle(self)\
end")
spawn("pressure_plate_hidden", 22,20,2, "pressure_plate_hidden_19")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_12", "SpawnPit")
spawn("eob_sewers_door_metal", 21,24,0, "eob_sewers_door_metal_19")
spawn("eob_sewers_walltext_rats", 22,1,2, "eob_sewers_walltext_rats_2")
	:setWallText("R.A.T.S.")
spawn("eob_sewers_walltext_rats", 2,20,0, "eob_sewers_walltext_rats_4")
	:setWallText("R.A.T.S.")
spawn("blocker", 30,17,2, "blocker_11")
spawn("testpoint", 16,1,3, "testpoint_4")
	:setSource("function activate()\
\
end")
spawn("eob_sewers_door_metal", 18,17,2, "eob_sewers_door_metal_21")
spawn("eob_sewers_door_metal", 11,17,2, "eob_sewers_door_metal_22")
spawn("eob_sewers_lock_gem", 20,23,2, "eob_sewers_lock_gem_1")
	:addConnector("activate", "eob_sewers_door_metal_19", "open")
	:addConnector("deactivate", "script_entity_13", "noRemove")
spawn("eob_sewers_lock_gem", 19,17,2, "eob_sewers_lock_gem_2")
	:addConnector("activate", "eob_sewers_door_metal_21", "open")
	:addConnector("deactivate", "script_entity_13", "noRemove")
	:addConnector("activate", "script_entity_29", "spawnRedGem")
spawn("eob_kuotoa", 15,17,3, "eob_kuotoa_6")
spawn("eob_kuotoa", 17,17,1, "eob_kuotoa_7")
spawn("script_entity", 10,5,2, "blue_gems_puzzle")
	:setSource("-- function called when a blue gem is inserted into the socket\
-- there are 4 such sockets\
function add()\
\9if eob_sewers_lock_eye_47:getItemCount() == 1 and\
\9   eob_sewers_lock_eye_48:getItemCount() == 1 and\
       eob_sewers_lock_eye_49:getItemCount() == 1 and\
\9   eob_sewers_lock_eye_50:getItemCount() == 1 then\
\9\9hudPrint(\"All gems in place!\")\
\9\9removeWalls()\
\9end\
end\
\
-- function called when a blue gem is removed from the socket\
function remove()\
\9if eob_sewers_secret_door_cube_3:isOpen() and\
\9   eob_sewers_lock_eye_47:getItemCount() == 0 and\
\9   eob_sewers_lock_eye_48:getItemCount() == 0 and\
       eob_sewers_lock_eye_49:getItemCount() == 0 and\
\9   eob_sewers_lock_eye_50:getItemCount() == 0 then\
\9\9hudPrint(\"Special quest for this level!\")\
\9\9secret_sq3:activate()\
\9end\
end\
\
-- this function is called when all four blue gems are in sockets\
function removeWalls()\
\9eob_sewers_secret_door_cube_3:open()\
\9eob_sewers_secret_door_cube_4:open()\
end")
spawn("eob_sewers_secret_door_cube", 6,6,0, "eob_sewers_secret_door_cube_3")
spawn("eob_sewers_secret_door_cube", 10,10,2, "eob_sewers_secret_door_cube_4")
spawn("eob_ladder_down", 8,6,0, "eob_ladder_down_4")
spawn("eob_ladder_down", 8,10,2, "eob_ladder_down_5")
spawn("eob_sewers_pit_fake", 8,6,3, "eob_sewers_pit_fake_4")
spawn("eob_sewers_pit_fake", 8,10,0, "eob_sewers_pit_fake_5")
spawn("teleporter", 8,6,0, "teleporter_22")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(16,14,0,4)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 8,10,2, "teleporter_23")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(16,20,2,4)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("script_entity", 19,18,1, "script_entity_13")
	:setSource("function noRemove(alcove)\
\9hudPrint(\"This hole is tightly sealed.\")\
\9setMouseItem(nil)\
\9alcove:addItem(spawn(\"eob_gem_red\"))\
end\
\
function noGemInfo()\
\9if eob_sewers_lock_gem_1:getItemCount() == 1 \
\9or eob_sewers_lock_gem_2:getItemCount() == 1\
\9then\
\9\9-- do nothing\
\9else\
\9\9hudPrint(\"This hole looks like the inside of jewel box\")\
\9end\
end")
spawn("eob_sewers_lock_eye_right", 11,6,2, "eob_sewers_lock_eye_right_1")
	:addItem(spawn("eob_gem_blue_u"))
	:addConnector("deactivate", "script_entity_14", "leaveGemInPlace")
spawn("script_entity", 9,5,2, "script_entity_14")
	:setSource("function leaveGemInPlace(alcove)\
\9setMouseItem(nil)\
\9alcove:addItem(spawn(\"eob_gem_blue_u\"))\
end")
spawn("eob_sewers_lock_eye_right", 6,5,1, "eob_sewers_lock_eye_right_3")
	:addItem(spawn("eob_gem_blue_u"))
	:addConnector("deactivate", "script_entity_14", "leaveGemInPlace")
spawn("eob_sewers_lock_eye_right", 5,10,0, "eob_sewers_lock_eye_right_4")
	:addItem(spawn("eob_gem_blue_u"))
	:addConnector("deactivate", "script_entity_14", "leaveGemInPlace")
spawn("eob_sewers_lock_eye_right", 10,11,3, "eob_sewers_lock_eye_right_5")
	:addItem(spawn("eob_gem_blue_u"))
	:addConnector("deactivate", "script_entity_14", "leaveGemInPlace")
spawn("eob_sewers_secret_button_large", 5,20,0, "eob_sewers_secret_button_large_1")
	:addConnector("toggle", "eob_sewers_secret_door_cube_5", "open")
	:addConnector("toggle", "eob_sewers_secret_door_cube_6", "open")
spawn("eob_kuotoa1_1_museum", 12,19,1, "eob_kuotoa1_1_museum_1")
	:setAIState("guard")
spawn("eob_kuotoa1_1_museum", 12,21,1, "eob_kuotoa1_1_museum_2")
	:setAIState("guard")
spawn("eob_kuotoa1_1_museum", 13,22,1, "eob_kuotoa1_1_museum_3")
	:setAIState("guard")
spawn("eob_kuotoa1_1_museum", 9,21,3, "eob_kuotoa1_1_museum_4")
	:setAIState("guard")
spawn("eob_sewers_secret_door_cube", 5,21,0, "eob_sewers_secret_door_cube_5")
spawn("eob_sewers_secret_door_cube", 5,21,2, "eob_sewers_secret_door_cube_6")
spawn("pressure_plate_hidden", 17,12,3, "pressure_plate_hidden_34")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_17", "close")
spawn("spawner", 24,13,1, "spawner_1")
	:setSpawnedEntity("eob_kuotoa")
	:setCoolDown(0)
spawn("spawner", 25,14,0, "spawner_2")
	:setSpawnedEntity("eob_kuotoa")
	:setCoolDown(0)
spawn("eob_silver_key", 25,13,2, "eob_silver_key_3")
spawn("pressure_plate_hidden", 20,23,2, "pressure_plate_hidden_35")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_13", "noGemInfo")
spawn("pressure_plate_hidden", 19,17,2, "pressure_plate_hidden_37")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_13", "noGemInfo")
spawn("eob_gem_red", 17,24,3, "eob_gem_red_4")
spawn("eob_rock_u", 20,26,2, "eob_rock_u_2")
spawn("torch_holder", 17,24,0, "torch_holder_19")
	:addTorch()
spawn("eob_sewers_ceiling_shaft", 30,25,2, "eob_sewers_ceiling_shaft_12")
spawn("eob_sewers_ceiling_shaft", 28,25,2, "eob_sewers_ceiling_shaft_13")
spawn("eob_sewers_ceiling_shaft", 27,25,2, "eob_sewers_ceiling_shaft_14")
spawn("eob_sewers_ceiling_shaft", 26,25,2, "eob_sewers_ceiling_shaft_15")
spawn("eob_sewers_ceiling_shaft", 25,25,2, "eob_sewers_ceiling_shaft_16")
spawn("eob_sewers_ceiling_shaft", 27,26,0, "eob_sewers_ceiling_shaft_17")
spawn("eob_sewers_ceiling_shaft", 27,27,3, "eob_sewers_ceiling_shaft_18")
spawn("eob_sewers_ceiling_shaft", 28,27,2, "eob_sewers_ceiling_shaft_19")
spawn("eob_sewers_ceiling_shaft", 29,27,2, "eob_sewers_ceiling_shaft_20")
spawn("eob_sewers_ceiling_shaft", 28,28,1, "eob_sewers_ceiling_shaft_21")
spawn("eob_sewers_ceiling_shaft", 27,29,2, "eob_sewers_ceiling_shaft_22")
spawn("eob_sewers_ceiling_shaft", 29,29,2, "eob_sewers_ceiling_shaft_23")
spawn("eob_sewers_ceiling_shaft", 29,30,0, "eob_sewers_ceiling_shaft_24")
spawn("eob_sewers_ceiling_shaft", 30,29,1, "eob_sewers_ceiling_shaft_25")
spawn("eob_sewers_ceiling_shaft", 25,30,3, "eob_sewers_ceiling_shaft_26")
spawn("eob_sewers_ceiling_shaft", 25,29,3, "eob_sewers_ceiling_shaft_27")
spawn("eob_sewers_ceiling_shaft", 25,28,2, "eob_sewers_ceiling_shaft_28")
spawn("eob_sewers_ceiling_shaft", 25,27,2, "eob_sewers_ceiling_shaft_29")
spawn("eob_sewers_ceiling_shaft", 24,27,3, "eob_sewers_ceiling_shaft_30")
spawn("pressure_plate_hidden", 21,24,2, "pressure_plate_hidden_36")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_26", "activatePit")
	:addConnector("activate", "script_entity_19", "deactivatePit")
	:addConnector("activate", "script_entity_20", "deactivatePit")
	:addConnector("activate", "script_entity_25", "activatePit")
	:addConnector("activate", "script_entity_24", "deactivatePit")
	:addConnector("activate", "script_entity_22", "activatePit")
	:addConnector("activate", "script_entity_23", "deactivatePit")
	:addConnector("activate", "script_entity_21", "deactivatePit")
spawn("eob_sewers_pit_illusion_off", 19,26,2, "eob_sewers_pit_illusion_off_4")
spawn("eob_sewers_pit_illusion_on", 22,25,3, "eob_sewers_pit_illusion_on_6")
spawn("eob_sewers_pit_illusion_on", 20,25,2, "eob_sewers_pit_illusion_on_7")
spawn("eob_sewers_pit_illusion_on", 19,25,2, "eob_sewers_pit_illusion_on_8")
spawn("eob_sewers_pit_illusion_on", 18,25,2, "eob_sewers_pit_illusion_on_9")
spawn("eob_sewers_pit_illusion_on", 17,25,2, "eob_sewers_pit_illusion_on_10")
spawn("eob_sewers_pit_illusion_on", 19,27,0, "eob_sewers_pit_illusion_on_11")
spawn("eob_sewers_pit_illusion_on", 21,27,3, "eob_sewers_pit_illusion_on_12")
spawn("eob_sewers_pit_illusion_on", 22,29,3, "eob_sewers_pit_illusion_on_13")
spawn("eob_sewers_pit_illusion_on", 21,29,2, "eob_sewers_pit_illusion_on_14")
spawn("eob_sewers_pit_illusion_on", 16,27,2, "eob_sewers_pit_illusion_on_15")
spawn("eob_sewers_pit_illusion_on", 17,27,2, "eob_sewers_pit_illusion_on_16")
spawn("eob_sewers_pit_illusion_on", 17,28,1, "eob_sewers_pit_illusion_on_17")
spawn("eob_sewers_pit_illusion_on", 17,29,1, "eob_sewers_pit_illusion_on_18")
spawn("eob_sewers_pit_illusion_off", 20,27,0, "eob_sewers_pit_illusion_off_7")
spawn("eob_sewers_pit_illusion_off", 17,30,1, "eob_sewers_pit_illusion_off_9")
spawn("eob_sewers_pit_illusion_off", 20,28,0, "eob_sewers_pit_illusion_off_10")
spawn("teleporter", 22,25,1, "teleporter_26")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(30,25,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 20,25,2, "teleporter_27")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,25,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 19,25,2, "teleporter_28")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(27,25,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 18,25,1, "teleporter_29")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(26,25,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 17,25,2, "teleporter_30")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(25,25,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 19,26,1, "teleporter_31")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(27,26,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("teleporter", 21,27,2, "teleporter_32")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(29,27,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 20,27,1, "teleporter_33")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,27,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("teleporter", 19,27,2, "teleporter_34")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(27,27,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 17,27,2, "teleporter_35")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(25,27,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 16,27,3, "teleporter_36")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(24,27,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 20,28,1, "teleporter_37")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,28,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("teleporter", 17,28,3, "teleporter_38")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(17,28,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 22,29,3, "teleporter_39")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(30,29,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 21,29,3, "teleporter_40")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(29,29,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 17,29,3, "teleporter_41")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(25,29,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 21,30,3, "teleporter_42")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(29,30,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 17,30,1, "teleporter_43")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(25,30,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("script_entity", 19,26,1, "script_entity_19")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 20,27,2, "script_entity_20")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 20,28,2, "script_entity_21")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 22,29,2, "script_entity_22")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 21,30,2, "script_entity_23")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 17,30,2, "script_entity_24")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 17,28,2, "script_entity_25")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("script_entity", 17,25,2, "script_entity_26")
	:setSource("function activatePit()\
\9illusion_pits.activate(self)\
end\
\
function deactivatePit()\
\9illusion_pits.deactivate(self)\
end")
spawn("eob_sewers_pit_illusion_on", 19,29,1, "eob_sewers_pit_illusion_on_19")
spawn("teleporter", 19,29,2, "teleporter_44")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(27,29,2,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_pit_illusion_on", 21,30,3, "eob_sewers_pit_illusion_on_20")
spawn("pressure_plate_hidden", 11,18,2, "pressure_plate_hidden_38")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_22", "close")
spawn("eob_flind1_2", 11,22,0, "eob_flind1_2_4")
	:setAIState("guard")
spawn("eob_flind1_2", 10,19,1, "eob_flind1_2_5")
	:setAIState("guard")
spawn("eob_blocker", 8,19,2, "eob_blocker_museum_1")
spawn("eob_blocker", 9,19,2, "eob_blocker_museum_2")
spawn("eob_blocker", 10,19,1, "eob_blocker_museum_3")
spawn("eob_blocker", 11,19,2, "eob_blocker_museum_4")
spawn("eob_blocker", 12,19,1, "eob_blocker_museum_5")
spawn("eob_blocker", 13,19,3, "eob_blocker_museum_6")
spawn("eob_blocker", 12,20,3, "eob_blocker_museum_11")
spawn("eob_blocker", 11,20,1, "eob_blocker_museum_10")
spawn("eob_blocker", 10,20,1, "eob_blocker_museum_9")
spawn("eob_blocker", 9,20,1, "eob_blocker_museum_8")
spawn("eob_blocker", 8,20,1, "eob_blocker_museum_7")
spawn("eob_blocker", 8,21,1, "eob_blocker_museum_12")
spawn("eob_blocker", 9,21,0, "eob_blocker_museum_13")
spawn("eob_blocker", 10,21,1, "eob_blocker_museum_14")
spawn("eob_blocker", 11,21,0, "eob_blocker_museum_15")
spawn("eob_blocker", 12,21,3, "eob_blocker_museum_16")
spawn("eob_blocker", 13,22,1, "eob_blocker_museum_22")
spawn("eob_blocker", 12,22,2, "eob_blocker_museum_21")
spawn("eob_blocker", 11,22,1, "eob_blocker_museum_20")
spawn("eob_blocker", 10,22,1, "eob_blocker_museum_19")
spawn("eob_blocker", 9,22,1, "eob_blocker_museum_18")
spawn("eob_blocker", 8,22,1, "eob_blocker_museum_17")
spawn("teleporter_rotator180", 15,19,2, "teleporter_rotator180_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(18,22,2,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_teleporter", 15,19,3, "eob_teleporter_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(18,22,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("secret", 10,6,3, "secret_sq3")
spawn("ogre", 8,4,2, "ogre_1")
spawn("ogre", 8,12,2, "ogre_2")
spawn("eob_flind1_2", 6,2,0, "eob_flind1_2_11")
spawn("teleporter", 11,12,1, "teleporter_45")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(12,5,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 4,5,3, "teleporter_46")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(5,12,3,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("script_entity", 14,27,2, "script_entity_29")
	:setSource("function spawnRedGem()\
\9spawn(\"eob_gem_red\",3,14,28,0)\
end")
spawn("script_entity", 10,18,2, "script_entity_30")
	:setSource("-- dont remove any blockers\
-- unless you adjust their number in monster.lua\
-- under eob_kuotoa1_1_museum\
-- or figure out better way how to remove them")

--- level 4 ---

mapName("Upper Level Dwarven Ruins")
setWallSet("dwarven")
playStream("assets/samples/music/temple_ambient.ogg")
mapDesc([[
##############################.#
#........................##..#.#
#.#####.#######...##.###.##..#.#
#.#...#.......#...#..##..###.#.#
#.###.#.#####..#.##..##..#.#.#.#
#.....#.#..........##..###.#...#
#.#.#.#.#..##..#.#.....#.#.#.#.#
#.....#.#.#...#...#.###....#.#.#
#.#.#.#.###.###.#.#...####...#.#
#.....#.#.....#.#.#.##..##.###.#
###.###.#.....#.#.#.....##.#..##
#...###.......#...#.####.#.#..##
#.##.##.#.....##.#.....#.#.#.#.#
#.##.#..#.#.#.#..#.##..#...#.#.#
#.#..#.#..#.#..#.#.#.###.#.#...#
#.#..#.#..#.#..#.#.#...#.#.#.#.#
#.##.#.###...####...#.####.#.#.#
#.#..#.###...#....#....###...#.#
#.#..#.####.#..#######...###.#.#
#.#..#.#...#...#.#...#.....#...#
#.####.....#...#.#...#...#.#.#.#
#.#..#.#...#...#.....#####.#.#.#
#....#.#####..##.######....#.#.#
#.#..#.#..##.....#...##.#####..#
#.####.#..#.####.#......#...#.##
#.####.#.##.#..#.#...##.#.....##
#..............#.#####......#.##
##.###.##.###.##.#####..#.###.##
#...#...#..##..........#...#...#
#...#...#..#.#.#.#####.#.......#
#...#...#..#...........#...#...#
##############################.#
]])
spawn("eob_ruins_door_stone_one", 15,1,3, "eob_ruins_door_stone_one_1")
	:addPullChain()
spawn("eob_ruins_portal_amulet", 16,1,0, "eob_ruins_portal_amulet_1")
spawn("eob_ruins_wall_text", 17,1,0, "eob_ruins_wall_text_1")
	:setWallText("There is Evil that lies beyond this room.")
spawn("eob_ruins_door_stone", 18,1,3, "eob_ruins_door_stone_1")
	:addPullChain()
spawn("eob_ruins_door_stone", 7,2,0, "eob_ruins_door_stone_2")
	:addPullChain()
spawn("eob_ruins_lever", 15,2,3, "eob_ruins_lever_1")
	:addConnector("any", "eob_ruins_door_stone_one_1", "toggle")
spawn("eob_ruins_door_stone", 24,2,0, "eob_ruins_door_stone_3")
	:addPullChain()
spawn("eob_ruins_statue_lock", 1,3,1, "eob_ruins_statue_lock_1")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "script_entity_15", "keyInserted")
spawn("eob_ruins_statue_lever", 3,3,0, "eob_ruins_statue_lever_1")
	:addConnector("activate", "script_entity_34", "destroyWall")
	:addConnector("deactivate", "script_entity_34", "createWall")
spawn("eob_ruins_illusion_wall", 5,3,2, "eob_ruins_illusion_wall_2")
spawn("eob_ruins_pressure_plate", 9,3,3, "eob_ruins_pressure_plate_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "eob_ruins_pit_1", "toggle")
	:addConnector("activate", "eob_ruins_pit_2", "toggle")
	:addConnector("activate", "eob_ruins_pit_3", "toggle")
spawn("eob_ruins_pit", 10,3,3, "eob_ruins_pit_1")
	:addTrapDoor()
	:setPitState("open")
spawn("eob_ruins_pit", 11,3,3, "eob_ruins_pit_2")
	:addTrapDoor()
	:setPitState("open")
spawn("eob_ruins_pit", 12,3,3, "eob_ruins_pit_3")
	:addTrapDoor()
	:setPitState("open")
spawn("eob_ruins_wall_text", 13,3,0, "eob_ruins_wall_text_2")
	:setWallText("Access control lever.")
spawn("eob_ruins_wall_small_statue", 15,3,3, "eob_ruins_wall_small_statue_1")
spawn("eob_ruins_wall_small_statue", 17,3,1, "eob_ruins_wall_small_statue_2")
spawn("eob_ruins_alcove", 20,3,1, "eob_ruins_alcove_1")
	:addItem(spawn("eob_potion_cure_poison"))
	:addItem(spawn("eob_potion_cure_poison"))
spawn("eob_ruins_net", 28,3,0, "eob_ruins_net_1")
spawn("eob_ruins_door_stone", 1,4,0, "eob_ruins_door_stone_4")
spawn("eob_ruins_statue_lever", 13,4,3, "eob_ruins_statue_lever_2")
	:addConnector("any", "eob_ruins_pit_3", "toggle")
spawn("eob_ruins_alcove", 20,4,1, "eob_ruins_alcove_2")
	:addItem(spawn("eob_potion_cure_poison"))
	:addItem(spawn("eob_potion_cure_poison"))
spawn("eob_ruins_wall_text", 23,4,2, "eob_ruins_wall_text_3")
	:setWallText("Oracle of Knowledge.")
spawn("eob_ruins_alcove", 24,4,2, "eob_ruins_alcove_3")
spawn("eob_ruins_net", 30,4,2, "eob_ruins_net_2")
spawn("eob_ruins_statue_lock", 1,5,3, "eob_ruins_statue_lock_2")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "script_entity_15", "keyInserted")
spawn("eob_ruins_wall_text", 2,5,2, "eob_ruins_wall_text_4")
	:setWallText("Doors open, doors close. Items come, items go.")
spawn("eob_ruins_button", 4,5,2, "eob_ruins_button_2")
	:addConnector("toggle", "eob_ruins_door_stone_5", "toggle")
	:addConnector("toggle", "script_entity_33", "onClosed")
	:addConnector("toggle", "script_entity_33", "onOpen")
spawn("eob_ruins_illusion_wall", 5,5,0, "eob_ruins_illusion_wall_1")
spawn("eob_ruins_button", 1,6,1, "eob_ruins_button_1")
	:addConnector("toggle", "eob_ruins_door_stone_7", "toggle")
	:addConnector("toggle", "script_entity_33", "onClosed")
	:addConnector("toggle", "script_entity_33", "onOpen")
spawn("eob_ruins_door_stone", 3,6,0, "eob_ruins_door_stone_5")
spawn("eob_ruins_chain_lever", 18,6,2, "eob_ruins_chain_lever_1")
	:setLeverState("activated")
	:addConnector("deactivate", "moving_walls_lv4", "disable")
	:addConnector("activate", "moving_walls_lv4", "enable")
spawn("eob_ruins_door_stone", 20,6,3, "eob_ruins_door_stone_6")
	:addPullChain()
spawn("eob_ruins_door_stone", 2,7,3, "eob_ruins_door_stone_7")
spawn("eob_ruins_door_stone", 4,7,1, "eob_ruins_door_stone_8")
spawn("eob_ruins_net", 25,7,1, "eob_ruins_net_3")
spawn("eob_ruins_door_stone", 3,8,2, "eob_ruins_door_stone_9")
spawn("eob_ruins_button", 5,8,3, "eob_ruins_button_4")
	:addConnector("toggle", "eob_ruins_door_stone_8", "toggle")
	:addConnector("toggle", "script_entity_33", "onClosed")
	:addConnector("toggle", "script_entity_33", "onOpen")
spawn("eob_ruins_door_stone", 20,8,3, "eob_ruins_door_stone_10")
	:addPullChain()
spawn("eob_ruins_wall_text", 21,8,2, "eob_ruins_wall_text_6")
	:setWallText("Access control lever.")
spawn("eob_ruins_statue_lever", 21,8,1, "eob_ruins_statue_lever_3")
	:addConnector("any", "eob_ruins_pit_1", "toggle")
spawn("eob_ruins_button", 2,9,0, "eob_ruins_button_3")
	:addConnector("toggle", "eob_ruins_door_stone_9", "toggle")
	:addConnector("toggle", "script_entity_33", "onClosed")
	:addConnector("toggle", "script_entity_33", "onOpen")
spawn("eob_ruins_statue_lock", 4,9,2, "eob_ruins_statue_lock_4")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "script_entity_17", "keyInserted")
spawn("eob_ruins_wall_text", 13,9,1, "eob_ruins_wall_text_5")
	:setWallText("Kruen - king under the mountain.")
spawn("eob_ruins_door_stone", 3,10,0, "eob_ruins_door_stone_11")
spawn("eob_ruins_wall_text", 9,10,3, "eob_ruins_wall_text_7")
	:setWallText("Kruen - the holder of wisdom.")
spawn("eob_ruins_door_stone", 20,10,3, "eob_ruins_door_stone_12")
	:addPullChain()
spawn("eob_ruins_net_torn", 26,10,0, "eob_ruins_net_torn_2")
spawn("eob_ruins_statue_lock", 2,11,0, "eob_ruins_statue_lock_3")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "script_entity_17", "keyInserted")
spawn("eob_ruins_wall_text", 13,11,1, "eob_ruins_wall_text_8")
	:setWallText("Kruen - destoryer of the ancient one.")
spawn("eob_ruins_wall_text", 9,12,3, "eob_ruins_wall_text_9")
	:setWallText("Kruen - the fearless one.")
spawn("eob_ruins_wall_small_statue", 10,12,2, "eob_ruins_wall_small_statue_6")
spawn("eob_ruins_statue_lock", 12,12,2, "eob_ruins_statue_lock_5")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "eob_ruins_door_stone_15", "open")
spawn("eob_ruins_door_stone", 21,12,3, "eob_ruins_door_stone_13")
	:addPullChain()
spawn("eob_ruins_net", 28,12,0, "eob_ruins_net_4")
spawn("eob_ruins_wall_small_statue", 6,13,3, "eob_ruins_wall_small_statue_5")
spawn("eob_ruins_door_stone", 9,13,0, "eob_ruins_door_stone_14")
	:addPullChain()
spawn("eob_ruins_door_stone", 11,13,0, "eob_ruins_door_stone_15")
spawn("eob_ruins_door_stone", 13,13,0, "eob_ruins_door_stone_16")
	:addPullChain()
spawn("eob_ruins_statue_lever", 14,14,1, "eob_ruins_statue_lever_4")
	:addConnector("any", "eob_ruins_pit_2", "toggle")
spawn("eob_ruins_wall_text", 14,14,0, "eob_ruins_wall_text_10")
	:setWallText("Access control lever.")
spawn("eob_ruins_statue_lock", 4,15,1, "eob_ruins_statue_lock_6")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "eob_ruins_door_stone_17", "open")
spawn("eob_ruins_door_stone", 4,16,0, "eob_ruins_door_stone_17")
spawn("eob_ruins_door_stone", 21,16,0, "eob_ruins_door_stone_18")
	:addPullChain()
spawn("eob_ruins_secret_button_tiny", 6,17,3, "eob_ruins_secret_button_tiny_1")
	:setActivateOnce(true)
	:addConnector("toggle", "script_entity_28", "destroyWall")
spawn("eob_ruins_wall_small_statue", 10,17,2, "eob_ruins_wall_small_statue_7")
spawn("eob_ruins_wall_small_statue", 12,17,2, "eob_ruins_wall_small_statue_8")
spawn("eob_ruins_door_stone", 20,17,1, "eob_ruins_door_stone_19")
	:addPullChain()
spawn("eob_ruins_chain_lever", 11,18,2, "eob_ruins_chain_lever_2")
	:addConnector("activate", "script_entity_32", "destroyWall")
	:addConnector("deactivate", "script_entity_32", "createWall")
spawn("eob_ruins_door_stone", 25,19,3, "eob_ruins_door_stone_20")
spawn("eob_ruins_pressure_plate", 26,19,0, "eob_ruins_pressure_plate_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "eob_ruins_door_stone_20", "close")
spawn("eob_ruins_wall_text", 10,20,1, "eob_ruins_wall_text_11")
	:setWallText("EMERGENCY EXIT")
spawn("eob_ruins_wall_small_statue", 16,20,1, "eob_ruins_wall_small_statue_9")
spawn("eob_ruins_wall_text", 20,20,1, "eob_ruins_wall_text_12")
	:setWallText("Feeding instructions of some kind.")
spawn("eob_ruins_button", 24,20,1, "eob_ruins_button_5")
	:addConnector("toggle", "eob_ruins_door_stone_20", "open")
spawn("eob_ruins_net_torn", 30,20,0, "eob_ruins_net_torn_4")
spawn("eob_ruins_button", 16,21,3, "eob_ruins_button_6")
	:addConnector("toggle", "eob_ruins_door_stone_22", "toggle")
	:addConnector("toggle", "script_entity_27", "destroyWall")
spawn("eob_ruins_net", 26,21,0, "eob_ruins_net_5")
spawn("eob_ruins_door_stone", 2,22,1, "eob_ruins_door_stone_21")
	:addPullChain()
spawn("eob_ruins_door_stone", 16,22,2, "eob_ruins_door_stone_22")
spawn("eob_ruins_door_stone", 14,23,1, "eob_ruins_door_stone_23")
spawn("eob_ruins_statue_lock", 15,23,2, "eob_ruins_statue_lock_7")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "eob_ruins_door_stone_23", "open")
spawn("eob_ruins_pressure_plate", 16,23,2, "eob_ruins_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "eob_ruins_door_stone_22", "close")
spawn("eob_ruins_net", 23,23,0, "eob_ruins_net_6")
spawn("eob_ruins_stairs_down", 11,24,0, "eob_ruins_stairs_down_2")
spawn("eob_ruins_ceiling_shaft", 19,24,2, "eob_ruins_ceiling_shaft_1")
spawn("eob_ruins_net", 21,24,3, "eob_ruins_net_7")
spawn("eob_ruins_door_stone", 8,25,2, "eob_ruins_door_stone_24")
	:addPullChain()
spawn("eob_ruins_wall_small_statue", 12,26,0, "eob_ruins_wall_small_statue_10")
spawn("eob_ruins_button", 14,26,2, "eob_ruins_button_7")
	:addConnector("toggle", "eob_ruins_door_stone_28", "toggle")
spawn("eob_ruins_net_torn", 16,26,0, "eob_ruins_net_torn_5")
spawn("eob_ruins_net", 24,26,1, "eob_ruins_net_8")
spawn("eob_ruins_door_stone", 2,27,0, "eob_ruins_door_stone_25")
	:addPullChain()
spawn("eob_ruins_door_stone", 6,27,0, "eob_ruins_door_stone_26")
	:addPullChain()
spawn("eob_ruins_door_stone", 9,27,0, "eob_ruins_door_stone_27")
	:addPullChain()
spawn("eob_ruins_door_stone", 13,27,0, "eob_ruins_door_stone_28")
spawn("eob_ruins_net", 25,27,0, "eob_ruins_net_9")
spawn("eob_ruins_net", 29,27,2, "eob_ruins_net_10")
spawn("eob_ruins_pressure_plate", 13,27,3, "eob_ruins_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "eob_ruins_door_stone_28", "close")
spawn("eob_ruins_net", 15,28,1, "eob_ruins_net_11")
spawn("eob_ruins_net_torn", 17,28,3, "eob_ruins_net_torn_6")
spawn("eob_ruins_statue_lever", 10,29,1, "eob_ruins_statue_lever_5")
	:addConnector("activate", "script_entity_16", "spawnSpiders")
spawn("eob_ruins_net", 27,29,1, "eob_ruins_net_12")
spawn("eob_ruins_ceiling_shaft", 29,29,2, "eob_ruins_ceiling_shaft_2")
spawn("eob_ruins_net", 13,30,1, "eob_ruins_net_13")
spawn("eob_ruins_net", 17,30,3, "eob_ruins_net_14")
spawn("eob_ruins_net", 30,31,0, "eob_ruins_net_15")
spawn("eob_arrow_u", 26,4,0, "eob_arrow_u_10")
spawn("eob_mace_u", 22,6,3, "eob_mace_u_1")
spawn("eob_ring_protection3_u", 24,6,0, "eob_ring_protection3_u_1")
spawn("eob_arrow_u", 29,10,1, "eob_arrow_u_11")
spawn("eob_ring2_u", 29,11,3, "eob_ring2_u_1")
spawn("eob_rock_u", 30,12,0, "eob_rock_u_10")
spawn("eob_potion_healing", 3,14,0, "eob_potion_healing_5")
spawn("eob_mace_u", 21,13,2, "eob_mace_u_2")
spawn("eob_potion_cure_poison", 24,15,2, "eob_potion_cure_poison_1")
spawn("eob_potion_cure_poison", 24,15,2, "eob_potion_cure_poison_2")
spawn("eob_medallion_of_adornment_u", 10,17,2, "eob_medallion_of_adornment_u_1")
spawn("eob_robe_u", 10,17,2, "eob_robe_u_1")
spawn("eob_stone_scepter_u", 27,2,2, "eob_stone_scepter_u_1")
spawn("eob_potion_healing", 3,19,0, "eob_potion_healing_6")
spawn("scroll_flame_arrow", 3,19,2, "eob_mage_scroll_flame_arrow_1")
spawn("eob_cleric_scroll_slow_poison", 3,19,3, "eob_cleric_scroll_slow_poison_1")
spawn("eob_rations_iron_u", 20,19,1, "eob_rations_iron_u_1")
spawn("eob_rations_iron_u", 20,19,1, "eob_rations_iron_u_2")
spawn("eob_rations_iron_u", 20,19,1, "eob_rations_iron_u_3")
spawn("eob_dwarven_helmet_u", 10,20,0, "eob_dwarven_helmet_u_1")
spawn("eob_shield_u", 10,20,2, "eob_shield_u_4")
spawn("eob_rock_u", 19,24,0, "eob_rock_u_11")
spawn("eob_arrow_u", 20,25,3, "eob_arrow_u_12")
spawn("eob_key_dwarven_u", 28,28,0, "eob_key_dwarven_u_2")
spawn("eob_rock_u", 30,28,1, "eob_rock_u_12")
spawn("eob_key_dwarven_u", 15,8,0, "eob_key_dwarven_u_3")
spawn("eob_key_dwarven_u", 9,15,3, "eob_key_dwarven_u_4")
spawn("eob_spider", 29,10,0, "eob_spider_1")
spawn("eob_spider", 28,1,0, "eob_spider_2")
spawn("eob_spider", 3,7,0, "eob_spider_3")
spawn("eob_spider", 25,29,0, "eob_spider_4")
spawn("eob_spider", 28,2,0, "eob_spider_5")
spawn("eob_spider", 28,8,0, "eob_spider_6")
spawn("eob_spider", 26,24,0, "eob_spider_7")
spawn("eob_spider", 15,2,0, "eob_spider_10")
spawn("eob_spider", 18,21,3, "eob_spider_11")
	:setAIState("guard")
spawn("eob_spider", 27,2,0, "eob_spider_12")
spawn("eob_spider", 27,1,0, "eob_spider_13")
spawn("eob_spider", 21,15,0, "eob_spider_14")
spawn("testpoint", 16,14,0, "testpoint_2")
	:setSource("function activate()\
\
end")
spawn("gw_event", 15,13,2, "gw_event_2")
	:setSource("-- is this event enabled?\
--enabled = true\
\
-- name of the imeage to show\
image = \"mod_assets/textures/events/eob1-wounded-dwarf.dds\"\
image_width = 177\
image_hieght = 180\
\
\
-- Defines states. Each entry must have exactly two columns:\
-- first is state, the second is description shown.\
-- Event will start from the first state on the list.\
-- There is also one special state called \"end\". Once moved\
-- to state \"end\", the whole event ends.\
\
states = {\
  { \"init\",     \"An injured dwarf lies on the ground before\\nyou, nearly unconscious from his wounds.\" }, \
  { \"fainting\", \"The dwarf gasps out, \\\"Drow... save the\\nking... Prince is gone\\\". He falls unconscious.\" },\
  { \"fainted\",  \"And injured dwarf lies on the ground\\nbefore you. He is unconscious.\" },\
  { \"healed\",   \"Having regained his strength, the dwarf\\nthanks you \\\"I thought I had met my death\\n\" ..\
                \"at the blade of that drow. In battle our\\nking was grievously wounded, and the\\n\" ..\
                \"young prince kidnapped. I tried to stop\\nthe drow, but alas, I was overcome.\\n\\n\" ..\
                \"\\\"You have saved me from death! I wish\\nthere was some way to thank you, but \" ..\
                \"I have nothing. I am alone,\\nseparate from my people during the battle. May I \" ..\
                \"join you,\\nso that together we can search for my people?\" },\
  { \"join\",     \"As Taghor joins your party he says,\\n\\\"During the battle, I chased my enemy up\\n\" ..\
                \"a staircase, to this level. My people should\\nbe on the level just below us.\\\"\" },\
  { \"nojoin\",   \"I thank you, but I will find my own way\\nback. A warning: beware the stone\\ndoorways \" ..\
                \"set into these walls. They are\\nportal entrances, which become active with\\nthe \"..\
                \"right key. My party encamped near\\nsuch a portal, and was easily ambushed.\\\"\\n\" ..\
                \"Thanking you again, the dwarf wanders off.\"}\
}\
\
function onJoin()\
\9taghor_join.taghorJoin()\
end\
\
-- defines possible actions in each state. Each entry has\
-- 4 values. First is a state in which you can take that action. \
-- Second is a state name to which player will transition if that\
-- action is taken. Third is a text printed on the action button.\
-- Fourth defines function callback. It is optional. This function\
-- may not return anything and the state specified in value 2 will \
-- be used. The function may also return a name of the state, thus\
-- overriding default transition. One of the transitions must\
-- transit to \"end\" state (a dummy state that concludes the whole\
-- event).\
actions = {\
  { \"init\",      \"healed\",   \"Tend his wounds\"},\
  { \"init\",      \"fainting\", \"Talk\"},\
  { \"init\",      \"abort\",    \"Leave\" },\
  { \"fainting\",  \"fainted\",  \"Continue\"},\
  { \"fainted\",   \"healed\",   \"Tend his wounds\"},\
  { \"fainted\",   \"abort\",    \"Leave\" },\
  { \"healed\",    \"join\",     \"Yes\" },\
  { \"healed\",    \"nojoin\",   \"No\" },\
  { \"join\",      \"end\",      \"Continue\", onJoin},\
  { \"nojoin\",    \"end\",      \"Continue\"}\
}\
\
")
spawn("script_entity", 15,12,3, "taghor_join")
	:setSource("function taghorJoin()\
\9newguy = {\
\9\9name = \"Taghor\",    -- just a name\
\9\9race = \"Human\", \9-- must be one of: Human, Minotaur, Lizardman, Insectoid\
\9\9class = \"Fighter\",  -- must be one of: Figther, Rogue, Mage or Ranger\
\9\9sex = \"male\", \9\9-- must be one of: male, female\
\9\9level = 3,          -- character's level (EOB level 5)\
\9\9portrait = \"mod_assets/textures/portraits/eob1-taghor.dds\", -- must be 128x128 dds file\
\9\9\
\9\9-- allowed skills: air_magic, armors, assassination, athletics, axes, daggers, \
\9\9-- dodge, earth_magic, fire_magic, ice_magic, maces, missile_weapons, spellcraft,\
\9\9-- staves, swords, throwing_weapons and unarmed_combat\
\9\9skills = { athletics = 0, armors = 8 , axes = 5, maces = 0, swords = 0, unarme_combat = 0  },\
\9\9\9\9\
\9\9-- allowed traits: aggressive, agile, athletic, aura, cold_resistant, evasive, \
\9\9-- fire_resistant, fist_fighter, head_hunter, healthy, lightning_speed,\
\9\9-- natural_armor, poison_resistant, skilled, strong_mind, tough\
\9\9-- Traits must be specified in quotes.\
\9\9-- Typically each character has 2 traits, but you can specify more or less.\
\9\9traits = { \"tough\", \"healthy\"},\
\9\9\
\9\9health = 110, \9\9 -- Maximum health\
\9\9current_health = 12,  -- Current health\
\9\9\
\9\9energy = 90,         -- Maximum energy\
\9\9current_energy = 15, -- Current energy\
\
\9\9strength = 17,        -- Strength (EOB strength 17)\
\9\9dexterity = 11,       -- Dexterity(EOB dexterity 11)\
\9\9vitality = 19,        -- Vitality (EOB constituion 19)\
\9\9willpower = 15,       -- Willpower(EOB wisdom 15, inteligence 11)\
\9\9\
\9\9protection = 10,      -- protection\
\9\9evasion = 0, \9\9  -- evasion\
\9\9\9\9\
\9\9-- Resist fire/cold/poison/shock (remember that those values will be modified by bonuses\
\9\9-- from fire, cold, poison or shock magic\
\9\9resist_fire = 15,\
\9\9resist_cold = 15,\
\9\9resist_poison = 15,\
\9\9resist_shock = 15,\
\9\9\
\9\9-- items: Notation item_name = slot. Slots numbering: 1 (head), 2 (torso), 3 (legs), 4 (feet), \
\9\9-- 5 (cloak), 6 (neck), 7 (left hand), 8 (right hand), 9 (gaunlets), 10 (bracers), 11-31 (backpack\
\9\9-- slots) or 0 (any empty slot in backpack)\
\9\9-- Make sure you put things in the right slot. Wrong slot (e.g. attempt to try boots on head)\
\9\9-- will make the item spawn to fail.\
\
\9\9items = { ring_mail = 2, ring_greaves = 3, ring_boots = 4, battle_axe = 8},\
\9\9-- in EOB Taghor has chainmail AC+5, dwarf helmet (protects from crit dmg) and axe \
\
\9\9\
\9\9-- food: 0 (starving) to 1000 (just ate the whole cow)\
\9\9food = 100\
\9\9\
\9}\
\
\9-- Call addChampion method. It will add new guy to the party if there are suitable slots and will\
\9-- display a GUI prompt selecting a party member to drop if your party is already 4 guys\
\9gw_party.addChampion(newguy)\
end\
\
")
spawn("eob_dwarven_wall_cube", 17,10,0, "eob_dwarven_wall_cube_1")
spawn("eob_dwarven_wall_cube", 15,8,0, "eob_dwarven_wall_cube_5")
spawn("pressure_plate_hidden", 17,11,2, "pressure_plate_hidden_18")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("script_entity", 16,10,3, "moving_walls_lv4")
	:setSource("-- this script controls \"walking\" walls. When party approaches a wall around\
-- locations 15,7 to 17,11, the wall moves away. It is really a wall moving\
-- in counter-clockwise pattern here. This behavior can be disabled by\
-- pulling the chain (lever) at location 18,6\
\
\
-- control whether the walls are moving or not (used by level at 18,7)\
movingWallsEnabled = true\
\
specialQuestDone = false\
\
function disable()\
\9movingWallsEnabled = false\
\9\
\9-- check if special quest has been fulfilled\
\9\
\9local keyFound = false\
\9local wallFound = false\
\9for x in entitiesAt(4, 15, 8) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallFound = true\
\9\9end\
\9\9if x.name == \"eob_key_dwarven_u\" then\
\9\9\9keyFound = true\
\9\9end\
\9end\
\9if wallFound and not keyFound and not specialQuestDone then\
\9\9specialQuest()\
\9end\
end\
\
function enable()\
\9movingWallsEnabled = true\
end\
\
\
function stepOnPlate(self)\
\9if not movingWallsEnabled then\
\9\9return\
\9end\
\
    local locations = { {17,11}, {17,10}, {17,9}, {17,8}, {17,7}, {16,7}, {15,7}, {15,8}, {15,9}, {15,10}, {15,11}, {16,11} }\
\
\9local size = #locations\
\9\
\9-- let's find out which plate did we press?\
\9for i = 1,size,1 do\
\9\9local pos = locations[i]\
\9\9if pos[1] == party.x and pos[2] == party.y then\
\9\9\9local destroy1 = ((i) % size) + 1\
\9\9\9local destroy2 = ((i - 6) % size) + 1\
\9\9\9local create1 = ((i - 5) % size) + 1\
\9\9\9local create2 = ((i + 1) % size) + 1\
\9\9\9if destroyWall(locations[destroy1]) then\
\9\9\9\9createWall(locations[create1])\
\9\9\9\9destroyWall(locations[destroy2])\
\9\9\9\9createWall(locations[create2])\
\9\9\9\9playSound(\"pressure_plate_released\")\
\9\9\9end\
\9\9end\
\9end\
end\
\
-- function tries to destroy a wall at position specified by pos\
-- pos is a two element array\
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall(pos)\
\9for x in entitiesAt(party.level, pos[1], pos[2]) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end\
\
-- function spawns a new eob_dwarven_wall_cube at specified location\
function createWall(pos)\
\9spawn(\"eob_dwarven_wall_cube\", party.level, pos[1], pos[2], 0)\
end\
\
function specialQuest()\
\9secret_special_quest_4:activate()\
\9specialQuestDone = true\
\9spawn(\"eob_axe_drow_cleaver_u\",4,11,18,2)\
\9hudPrint(\"Special quest for this level!\")\
end")
spawn("pressure_plate_hidden", 17,10,2, "pressure_plate_hidden_21")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 17,9,2, "pressure_plate_hidden_22")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 17,8,2, "pressure_plate_hidden_23")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 17,7,2, "pressure_plate_hidden_24")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 16,7,2, "pressure_plate_hidden_25")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 15,7,2, "pressure_plate_hidden_26")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 15,8,2, "pressure_plate_hidden_27")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 15,9,2, "pressure_plate_hidden_28")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 15,10,2, "pressure_plate_hidden_29")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 15,11,2, "pressure_plate_hidden_30")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("pressure_plate_hidden", 16,11,2, "pressure_plate_hidden_31")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "moving_walls_lv4", "stepOnPlate")
spawn("secret", 16,9,3, "secret_special_quest_4")
spawn("script_entity", 2,4,2, "script_entity_15")
	:setSource("\
function keyInserted()\
\
  if eob_ruins_door_stone_11:isClosed()\
  -- open the door\
  then eob_ruins_door_stone_4:open()\
\
  -- and disable the locks, so player won't waste another key\
  eob_ruins_statue_lock_1:setOpenedBy(\"\")\
  eob_ruins_statue_lock_2:setOpenedBy(\"\")\
  return true\
  end\
\
  -- todo: when trying to insert key to the second\
  -- lock when first one was opened, yellow text\
  -- \"The lock appears jammed\" should appear\
  -- hudPrint(\"The lock appears jammed\")\
end\
\
\
")
spawn("script_entity", 5,10,2, "script_entity_17")
	:setSource("\
function keyInserted()\
\
  -- open the door\
  if eob_ruins_door_stone_11:isClosed()\
  then eob_ruins_door_stone_11:open()\
\
  -- and disable the locks, so player won't waste another key\
  eob_ruins_statue_lock_3:setOpenedBy(\"\")\
  eob_ruins_statue_lock_4:setOpenedBy(\"\")\
  return true\
  end\
\
  -- todo: when trying to insert key to the second\
  -- lock when first one was opened, yellow text\
  -- \"The lock appears jammed\" should appear\
  -- hudPrint(\"The lock appears jammed\")\
end\
\
\
")
spawn("script_entity", 11,29,3, "script_entity_16")
	:setSource("-- spawn 2 spiders at locations 92 and 93 (just once,\
-- next clicks does not do anything)y\
\
function spawnSpiders()\
\9if pressed then\
\9\9return\
\9end\
\9spawn(\"eob_spider\", 4, 29, 30, 0)\
\9spawn(\"eob_spider\", 4, 18, 25, 0)\
\9pressed = true\
end\
\
pressed = false\
")
spawn("teleporter", 30,31,0, "teleporter_24")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(30,1,0,4)
	:setChangeFacing(false)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 30,0,0, "teleporter_25")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(30,30,0,4)
	:setChangeFacing(false)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_dwarven_wall_cube", 26,13,3, "eob_dwarven_wall_cube_invisible")
spawn("script_entity", 27,15,2, "script_entity_18")
	:setSource("function removeWall2()\
\9eob_dwarven_wall_cube_invisible:destroy()\
\9playSoundAt(\"pressure_plate_released\",4,26,13)\
end\
\
function removeWall3()\
\9eob_dwarven_wall_cube_3:destroy()\
\9playSoundAt(\"pressure_plate_released\",4,27,17)\
end\
")
spawn("pressure_plate_hidden", 29,23,3, "pressure_plate_hidden_20")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "timer_3", "activate")
spawn("pressure_plate_hidden", 30,5,1, "pressure_plate_hidden_32")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "timer_4", "activate")
spawn("eob_ruins_pit", 9,20,1, "eob_ruins_pit_6")
	:addTrapDoor()
	:setPitState("closed")
spawn("pressure_plate_hidden", 8,20,1, "pressure_plate_hidden_33")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "eob_ruins_pit_6", "toggle")
spawn("eob_ruins_stairs_down", 4,12,0, "eob_ruins_stairs_down_1")
spawn("eob_teleporter", 16,15,1, "eob_teleporter_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(8,7,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_teleporter", 16,19,1, "eob_teleporter_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(8,9,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_dwarven_wall_cube", 17,21,1, "eob_dwarven_wall_cube_4")
spawn("script_entity", 17,21,3, "script_entity_27")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end")
spawn("eob_dwarven_helmet", 15,13,3, "eob_dwarven_helmet_1")
spawn("eob_dwarven_wall_cube", 7,20,1, "eob_dwarven_wall_cube_6")
spawn("script_entity", 7,20,2, "script_entity_28")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end")
spawn("eob_dwarven_wall_cube", 11,18,1, "eob_dwarven_wall_cube_7")
spawn("eob_ladder_up", 16,15,2, "eob_ladder_up_4")
spawn("eob_ladder_up", 16,19,0, "eob_ladder_up_5")
spawn("eob_ruins_ceiling_shaft", 16,15,2, "eob_ruins_ceiling_shaft_52")
spawn("eob_ruins_ceiling_shaft", 16,19,2, "eob_ruins_ceiling_shaft_53")
spawn("script_entity", 10,14,2, "script_entity_31")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
\
function checkDoors()\
\9if \9eob_ruins_door_stone_14:isClosed() \
\9\9and \
\9\9eob_ruins_door_stone_16:isClosed() \
\9\9then\
\9\9destroyWall(4,11,18)\
\9\9else\
\9\9createWall(4,11,18)\
\9end \
end\
\
\
function destroyWall()\
\9for x in entitiesAt(4,11,18) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end\
\
\
function createWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(4,11,18) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\9\9-- if we dont find any wall cube, spawn one\9\9\
\9\9if wallexists == 0\
\9\9  then\
\9\9  spawn(\"eob_dwarven_wall_cube\",4,11,18,0)\
\9\9  playSound(\"pressure_plate_pressed\")\9\9\
\9\9end\
\
end")
spawn("eob_dwarven_wall_cube", 8,11,3, "eob_dwarven_wall_cube_8")
spawn("script_entity", 8,11,0, "script_entity_32")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end\
\
function createWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\9\9-- if we dont find any wall cube, spawn one\9\9\
\9\9if wallexists == 0\
\9\9  then\
\9\9  spawn(\"eob_dwarven_wall_cube\",self.level,self.x,self.y,0)\
\9\9  playSound(\"pressure_plate_pressed\")\9\9\
\9\9end\
\
end")
spawn("pressure_plate_hidden", 11,13,1, "pressure_plate_hidden_39")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_31", "checkDoors")
spawn("script_entity", 2,6,1, "script_entity_33")
	:setSource("-- one every door opened and then closed activate\
-- spawn one 1 healing potion\
-- on subsequent all door open/closed spawn 1 healing potion\
-- up to 3 times\
-- in total, player should get 4 healing potions + key\
-- including the potion that already is on floor by default\
\
function onClosed()\
\9allclosed = 0\
\9-- only if all doors were closed after we hit the button\
\9-- set variable to 1\
\9if \
\9eob_ruins_door_stone_5:isClosed() and\
\9eob_ruins_door_stone_7:isClosed() and\
\9eob_ruins_door_stone_8:isClosed() and\
\9eob_ruins_door_stone_9:isClosed() then\
\9allclosed = 1\
\9end\9\
\9-- debug show values\
\9-- hudPrint(\"counter: \" .. counter_doors_1:getValue() .. \", allclosed: \" .. allclosed )\
\
end\
\
function onOpen()\
\9-- when all doors were closed before we hit the button\
\9-- and counter is higher then 0\
\9-- spawn a potion \
\9if allclosed == 1 and counter_doors_1:getValue() > 0\
\9then\
\9\
\9-- spawn potion on value 0 to 3 (modulo of counter value)\
\9-- just for cosmetic purpose not to spawn them all on one place all the time\
\9spawn(\"eob_potion_healing\",4,3,7,counter_doors_1:getValue() % 4)\
\9-- debug show values\
\9-- hudPrint(\"counter: \" .. counter_doors_1:getValue() .. \", allclosed: \" .. allclosed .. \" > spawning potion\")\
\9counter_doors_1:decrement()\
\9end\
\
end\
")
spawn("counter", 4,6,3, "counter_doors_1")
	:setInitialValue(3)
	:setValue(3)
spawn("eob_potion_healing", 3,7,2, "eob_potion_healing_8")
spawn("eob_key_dwarven_u", 3,7,0, "eob_key_dwarven_u_1")
spawn("eob_spider", 25,25,0, "eob_spider_15")
spawn("eob_dwarven_wall_cube", 16,4,2, "eob_dwarven_wall_cube_9")
spawn("script_entity", 16,4,3, "script_entity_34")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(4,16,4) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\
\9\9end\
\9end\
\9-- when there will be real small statue graphics, we can add these too\9\
--\9for x in entitiesAt(4,16,3) do\
--\9\9if x.name == \"eob_ruins_wall_small_statue\" then\
--\9\9\9x:destroy()\
--\9\9end\
--\9end\
--\9for x in entitiesAt(4,16,5) do\
--\9\9if x.name == \"eob_ruins_wall_small_statue\" then\
--\9\9\9x:destroy()\
--\9\9end\
--\9end\
\9\
\9return false\
end\
\
function createWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(4,16,4) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\9-- if we dont find any wall cube, spawn one\9\9\
\9if wallexists == 0\
\9  then\
\9  spawn(\"eob_dwarven_wall_cube\",4,16,4,0)\
\9  playSound(\"pressure_plate_pressed\")\
\9  -- when there will be real small statue graphics, we can add these too\
\9  --spawn(\"eob_ruins_wall_small_statue\",4,16,3,2)\
\9  --spawn(\"eob_ruins_wall_small_statue\",4,16,5,0)\
\9end\
\
end")
spawn("eob_spider", 23,18,3, "eob_spider_27")
spawn("eob_spider", 23,20,0, "eob_spider_28")
spawn("eob_dwarven_wall_cube", 27,17,0, "eob_dwarven_wall_cube_3")
spawn("eob_ruins_net", 30,0,0, "eob_ruins_net_17")
spawn("eob_ruins_net", 28,18,0, "eob_ruins_net_16")
spawn("eob_spider", 30,5,0, "eob_spider_29")
spawn("eob_spider", 24,13,0, "eob_spider_30")
spawn("eob_spider", 28,10,0, "eob_spider_32")
spawn("eob_spider", 28,25,3, "eob_spider_9")
spawn("eob_spider", 29,28,0, "eob_spider_31")
spawn("timer", 29,22,1, "timer_3")
	:setTimerInterval(10)
	:addConnector("activate", "counter_2", "decrement")
	:addConnector("activate", "timer_3", "deactivate")
spawn("timer", 31,5,1, "timer_4")
	:setTimerInterval(10)
	:addConnector("activate", "counter_3", "decrement")
	:addConnector("activate", "timer_4", "deactivate")
spawn("counter", 29,21,2, "counter_2")
	:setInitialValue(2)
	:setValue(2)
	:addConnector("activate", "script_entity_18", "removeWall2")
spawn("counter", 31,6,1, "counter_3")
	:setInitialValue(2)
	:setValue(2)
	:addConnector("activate", "script_entity_18", "removeWall3")
spawn("torch_holder", 9,3,2, "torch_holder_13")
spawn("secret", 5,3,1, "secret_6")
spawn("secret", 25,5,2, "secret_12")
spawn("script_entity", 25,4,2, "script_entity_54")
	:setSource("-- if put to alcove orb of power \
-- activate secret\
-- and identify all other items in alcove")
spawn("secret", 24,13,1, "secret_13")

--- level 5 ---

mapName("Dwarven Ruins and Camp")
setWallSet("dwarven")
playStream("assets/samples/music/temple_ambient.ogg")
mapDesc([[
################################
#.#..#..#..#...#..###...#...####
#....#..#.##.#.#..#...#.###....#
####.#..#....#...##.###.######.#
#....###########..#..........#.#
#...#...........#.####.....#.#.#
##.##..###.###..#.#.#...#..#...#
#..#.###.....###....#...##.#####
#..#..##.....#.....##......#####
#.##.#..#...###.....#.#........#
#................#..#####.####.#
#..###.##...###..#.##...###....#
#....##.......#.#...##.........#
#.##.##..#.#..#.#...##.#######.#
#..###...###...##...##.........#
#.....#.......#..####...#.#.##.#
#..####..#.#..##......#......#.#
#.#......#.#.....#####..#.##.#.#
#.#..##.##.##.####...#..#....#.#
#.####...............##.######.#
#....###..##.....#...#.........#
#..........#.###.##.##..########
#######....#..##.##.##.......###
#......#..###.#####.#####....###
#.####.#....#.#####.#...########
#.##.#.#..#.#####............###
#.......#.####....#.#.######.###
##.#.#.......#.##.#........#.###
#..#.###.##..#...##..##.####.###
#.##.#.#####.###....###......###
#....#.......######...#.########
################################
]])
spawn("eob_ruins_alcove", 6,1,0, "eob_ruins_alcove_4")
spawn("eob_ruins_alcove", 7,1,0, "eob_ruins_alcove_5")
spawn("eob_ruins_illusion_wall_rune", 12,1,1, "eob_ruins_illusion_wall_rune_2")
spawn("eob_ruins_illusion_wall_rune", 14,1,3, "eob_ruins_illusion_wall_rune_1")
spawn("eob_ruins_illusion_wall", 23,1,2, "eob_ruins_illusion_wall_3")
spawn("eob_ruins_stairs_down", 25,1,3, "eob_ruins_stairs_down_3")
spawn("eob_ruins_door_stone", 2,2,1, "eob_ruins_door_stone_29")
	:addPullChain()
spawn("eob_ruins_secret_button_tiny", 12,2,1, "eob_ruins_secret_button_tiny_2")
	:addConnector("toggle", "eob_ruins_illusion_wall_rune_2", "toggle")
	:addConnector("toggle", "eob_ruins_illusion_wall_rune_1", "toggle")
spawn("eob_ruins_door_stone", 28,2,3, "eob_ruins_door_stone_30")
spawn("eob_ruins_alcove", 6,3,2, "eob_ruins_alcove_6")
spawn("eob_ruins_alcove", 7,3,2, "eob_ruins_alcove_7")
spawn("eob_ruins_ceiling_shaft", 10,3,3, "eob_ruins_ceiling_shaft_3")
spawn("eob_ruins_ceiling_shaft", 11,3,3, "eob_ruins_ceiling_shaft_4")
spawn("eob_ruins_ceiling_shaft", 12,3,2, "eob_ruins_ceiling_shaft_5")
spawn("eob_ruins_illusion_wall_rune", 23,3,0, "eob_ruins_illusion_wall_rune_3")
spawn("eob_ruins_wall_text", 23,3,3, "eob_ruins_wall_text_13")
	:setWallText("You've made it this far. Good luck.")
spawn("eob_ruins_illusion_wall_rune", 19,4,1, "eob_ruins_illusion_wall_rune_4")
spawn("eob_ruins_illusion_wall", 21,4,3, "eob_ruins_illusion_wall_4")
spawn("eob_teleporter", 24,4,3, "eob_teleporter_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,4,3,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 25,4,3, "eob_teleporter_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,4,3,5)
	:setChangeFacing(false)
spawn("eob_ruins_portal_necklace", 10,5,0, "eob_ruins_portal_necklace_1")
spawn("eob_ruins_illusion_wall_statue", 10,5,2, "eob_ruins_illusion_wall_statue_2")
spawn("eob_ruins_alcove", 15,5,1, "eob_ruins_alcove_8")
	:addItem(spawn("eob_stone_necklace_u"))
spawn("eob_ruins_door_stone", 17,5,0, "eob_ruins_door_stone_31")
	:addPullChain()
spawn("eob_teleporter", 22,5,2, "eob_teleporter_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(22,5,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 24,5,2, "eob_teleporter_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,2,5)
	:setChangeFacing(false)
spawn("eob_ruins_door_stone", 28,5,0, "eob_ruins_door_stone_32")
spawn("eob_ruins_door_stone", 2,6,0, "eob_ruins_door_stone_33")
	:addPullChain()
spawn("eob_ruins_lever", 21,6,0, "eob_ruins_lever_2")
	:addConnector("activate", "eob_ruins_door_stone_30", "toggle")
spawn("eob_teleporter", 22,6,2, "eob_teleporter_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(21,9,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 23,6,2, "eob_teleporter_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(23,5,2,5)
	:setChangeFacing(false)
spawn("eob_ruins_lever", 25,6,3, "eob_ruins_lever_3")
	:addConnector("any", "eob_ruins_door_stone_32", "toggle")
spawn("eob_teleporter", 26,6,2, "eob_teleporter_12")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(21,7,2,5)
	:setChangeFacing(false)
spawn("eob_ruins_door_stone", 29,6,1, "eob_ruins_door_stone_34")
spawn("eob_ruins_illusion_wall_statue", 10,7,0, "eob_ruins_illusion_wall_statue_1")
spawn("eob_teleporter", 22,7,2, "eob_teleporter_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(23,7,2,5)
	:setChangeFacing(false)
spawn("eob_ruins_wall_text", 23,7,1, "eob_ruins_wall_text_14")
	:setWallText("Things are not always as they appear.")
spawn("eob_teleporter", 26,7,2, "eob_teleporter_14")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(21,7,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 21,8,2, "eob_teleporter_15")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 23,8,2, "eob_teleporter_16")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(22,8,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 24,8,3, "eob_teleporter_17")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(22,8,3,5)
	:setChangeFacing(false)
spawn("eob_ruins_door_stone", 1,9,2, "eob_ruins_door_stone_35")
	:addPullChain()
spawn("eob_ruins_door_stone", 4,9,2, "eob_ruins_door_stone_36")
	:addPullChain()
spawn("eob_ruins_secret_button_tiny", 6,9,3, "eob_ruins_secret_button_tiny_3")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_ruins_door_stone_one_2", "open")
spawn("eob_ruins_lever", 21,9,3, "eob_ruins_lever_4")
	:addConnector("activate", "eob_ruins_door_stone_34", "toggle")
spawn("eob_teleporter", 23,9,2, "eob_teleporter_18")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 24,9,2, "eob_teleporter_19")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,2,5)
	:setChangeFacing(false)
spawn("eob_teleporter", 25,9,2, "eob_teleporter_20")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,2,5)
	:setChangeFacing(false)
spawn("eob_blocker", 30,9,0, "eob_blocker_8")
spawn("eob_ruins_illusion_wall", 2,10,1, "eob_ruins_illusion_wall_5")
spawn("eob_ruins_illusion_wall_rune", 4,10,3, "eob_ruins_illusion_wall_rune_5")
spawn("eob_ruins_door_stone_one", 6,10,3, "eob_ruins_door_stone_one_2")
spawn("eob_ruins_door_stone", 14,10,1, "eob_ruins_door_stone_37")
	:addPullChain()
spawn("eob_ruins_illusion_wall_rune", 24,12,1, "eob_ruins_illusion_wall_rune_7")
spawn("eob_ruins_illusion_wall_rune", 26,12,3, "eob_ruins_illusion_wall_rune_6")
spawn("eob_ruins_illusion_wall", 30,12,2, "eob_ruins_illusion_wall_6")
spawn("eob_ruins_door_stone_one", 1,13,0, "eob_ruins_door_stone_one_3")
spawn("eob_ruins_wall_text", 10,13,1, "eob_ruins_wall_text_15")
	:setWallText("Pantry")
spawn("eob_ruins_alcove", 10,13,2, "eob_ruins_alcove_special_quest_5")
	:setActivateAlways(true)
	:addConnector("any", "script_entity_special_quest_5", "specialQuest5")
spawn("eob_ruins_ceiling_shaft", 22,13,2, "eob_ruins_ceiling_shaft_6")
spawn("eob_ruins_pressure_plate", 22,14,2, "eob_ruins_pressure_plate_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_42", "openPit")
spawn("eob_ruins_illusion_wall_rune", 23,14,1, "eob_ruins_illusion_wall_rune_9")
spawn("eob_ruins_illusion_wall", 25,14,3, "eob_ruins_illusion_wall_7")
spawn("eob_ruins_illusion_wall_rune", 27,14,2, "eob_ruins_illusion_wall_rune_10")
spawn("eob_ruins_illusion_wall_rune", 30,14,0, "eob_ruins_illusion_wall_rune_8")
spawn("eob_ruins_secret_button_tiny", 2,15,1, "eob_ruins_secret_button_tiny_4")
	:setActivateOnce(true)
	:addConnector("toggle", "script_entity_36", "destroyWall")
spawn("eob_ruins_button", 20,16,2, "eob_ruins_button_8")
	:setActivateOnce(true)
	:addConnector("toggle", "script_entity_37", "destroyWall")
spawn("eob_ruins_illusion_wall", 23,16,1, "eob_ruins_illusion_wall_10")
spawn("eob_ruins_illusion_wall", 25,16,1, "eob_ruins_illusion_wall_12")
spawn("eob_ruins_illusion_wall", 25,16,3, "eob_ruins_illusion_wall_9")
spawn("eob_ruins_illusion_wall", 27,16,0, "eob_ruins_illusion_wall_8")
spawn("eob_ruins_illusion_wall", 27,16,3, "eob_ruins_illusion_wall_11")
spawn("eob_ruins_illusion_wall", 1,17,2, "eob_ruins_illusion_wall_14")
spawn("eob_ruins_door_stone", 7,18,2, "eob_ruins_door_stone_38")
spawn("eob_ruins_door_stone", 10,18,2, "eob_ruins_door_stone_39")
spawn("eob_ruins_door_stone", 13,18,2, "eob_ruins_door_stone_40")
spawn("eob_ruins_wall_text", 18,18,0, "eob_ruins_wall_text_16")
	:setWallText("Please reset drain holes when finished.")
spawn("eob_ruins_statue_lever", 19,18,0, "eob_ruins_statue_lever_6")
	:addConnector("any", "script_entity_40", "cleanPits")
spawn("eob_ruins_illusion_wall", 1,19,0, "eob_ruins_illusion_wall_13")
spawn("eob_ruins_statue_lock", 6,19,0, "eob_ruins_statue_lock_8")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "eob_ruins_door_stone_38", "open")
spawn("eob_ruins_statue_lock", 9,19,0, "eob_ruins_statue_lock_9")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "eob_ruins_door_stone_39", "open")
spawn("eob_ruins_statue_lock", 12,19,0, "eob_ruins_statue_lock_10")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "eob_ruins_door_stone_40", "open")
spawn("eob_ruins_door_stone", 23,19,2, "eob_ruins_door_stone_41")
	:addPullChain()
spawn("eob_ruins_ceiling_shaft", 9,20,2, "eob_ruins_ceiling_shaft_7")
spawn("eob_ruins_wall_text", 20,20,2, "eob_ruins_wall_text_17")
	:setWallText("Greed will be your downfall.")
spawn("eob_ruins_illusion_wall_rune", 4,21,1, "eob_ruins_illusion_wall_rune_12")
spawn("eob_ruins_illusion_wall_rune", 6,21,3, "eob_ruins_illusion_wall_rune_11")
spawn("eob_ruins_illusion_wall", 8,22,2, "eob_ruins_illusion_wall_17")
spawn("eob_ruins_illusion_wall_rune", 9,22,2, "eob_ruins_illusion_wall_rune_14")
spawn("eob_ruins_stairs_down", 16,22,2, "eob_ruins_stairs_down_4")
spawn("eob_ruins_lever", 19,22,3, "eob_ruins_lever_5")
	:addConnector("any", "eob_ruins_door_stone_42", "toggle")
spawn("eob_ruins_illusion_wall", 9,23,3, "eob_ruins_illusion_wall_15")
spawn("eob_ruins_door_stone", 19,23,0, "eob_ruins_door_stone_42")
spawn("eob_ruins_illusion_wall", 8,24,0, "eob_ruins_illusion_wall_16")
spawn("eob_ruins_illusion_wall_rune", 9,24,0, "eob_ruins_illusion_wall_rune_13")
spawn("eob_ruins_stairs_up", 11,25,2, "eob_ruins_stairs_up_4")
spawn("eob_ruins_door_stone", 25,25,1, "eob_ruins_door_stone_43")
	:addPullChain()
spawn("eob_ruins_secret_button_tiny", 3,26,2, "eob_ruins_secret_button_tiny_5")
	:setActivateOnce(true)
	:addConnector("toggle", "script_entity_35", "destroyWall")
spawn("eob_ruins_door_stone", 14,27,0, "eob_ruins_door_stone_44")
	:addPullChain()
spawn("eob_teleporter", 17,27,2, "eob_teleporter_21")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(19,19,2,5)
spawn("eob_ruins_door_stone", 24,27,3, "eob_ruins_door_stone_45")
spawn("eob_ruins_ornate_lock", 25,27,2, "eob_ruins_ornate_lock_2")
	:setOpenedBy("eob_key_u")
	:addConnector("activate", "script_entity_38", "destroyWall")
	:addConnector("activate", "eob_teleporter_4", "activate")
spawn("eob_ruins_ornate_lock", 23,28,1, "eob_ruins_ornate_lock_1")
	:setOpenedBy("eob_key_u")
	:addConnector("activate", "eob_ruins_door_stone_45", "open")
spawn("eob_ruins_door_stone", 17,29,3, "eob_ruins_door_stone_46")
	:addPullChain()
spawn("eob_ruins_door_stone", 25,29,1, "eob_ruins_door_stone_47")
	:addPullChain()
spawn("eob_ruins_illusion_wall_rune", 6,30,1, "eob_ruins_illusion_wall_rune_16")
spawn("eob_ruins_illusion_wall_rune", 8,30,3, "eob_ruins_illusion_wall_rune_15")
spawn("eob_wand_cone_of_cold_2_u", 27,16,2, "eob_wand_cone_of_cold_2_u_1")
spawn("eob_cleric_scroll_hold_person", 1,1,1, "eob_cleric_scroll_hold_person_1")
	:setScrollText("")
spawn("eob_rations_iron_u", 21,2,3, "eob_rations_iron_u_4")
spawn("eob_spear_u", 21,2,3, "eob_spear_u_2")
spawn("eob_cleric_scroll_aid", 5,6,3, "eob_cleric_scroll_aid_1")
	:setScrollText("")
spawn("scroll_haste", 6,6,1, "eob_mage_scroll_haste_1")
	:setScrollText("")
spawn("eob_rations_iron_u", 8,7,0, "eob_rations_iron_u_5")
spawn("eob_cleric_scroll_detect_magic", 24,8,0, "eob_cleric_scroll_detect_magic_1")
	:setScrollText("")
spawn("eob_rations_iron_u", 12,10,1, "eob_rations_iron_u_6")
spawn("eob_long_sword_u", 25,10,0, "eob_long_sword_u_2")
spawn("eob_rations_iron_u", 7,12,0, "eob_rations_iron_u_7")
spawn("eob_potion_poison", 10,13,3, "eob_potion_poison_1")
spawn("eob_rations_iron_u", 6,14,0, "eob_rations_iron_u_8")
spawn("eob_mage_scroll_dispel_magic", 5,15,1, "eob_mage_scroll_dispel_magic_1")
spawn("eob_rock_u", 25,16,0, "eob_rock_u_13")
spawn("eob_plate_mail_u", 25,27,3, "eob_plate_mail_u_1")
spawn("eob_key_dwarven_u", 4,25,0, "eob_key_dwarven_u_5")
spawn("eob_scale_mail_u", 4,25,2, "eob_scale_mail_u_1")
spawn("eob_axe_cursed3_u", 20,25,1, "eob_axe_cursed3_u_1")
spawn("eob_sling_cursed3_u", 19,26,3, "eob_sling_cursed3_u_1")
spawn("eob_key_u", 28,26,0, "eob_key_u_1")
spawn("eob_ring2_feather_fall_u", 22,27,1, "eob_ring2_feather_fall_u_1")
spawn("eob_mage_scroll_invisibility 10'", 25,27,1, "eob_mage_scroll_invisibility 10'_1")
spawn("eob_key_u", 14,28,0, "eob_key_u_2")
spawn("eob_cleric_scroll_prayer", 6,29,0, "eob_cleric_scroll_prayer_1")
	:setScrollText("")
spawn("eob_leather_boots_u", 19,30,2, "eob_leather_boots_u_2")
spawn("eob_rock_u", 21,11,0, "eob_rock_u_14")
spawn("eob_dwarf1_1", 19,13,0, "eob_dwarf1_1_1")
	:setAIState("guard")
spawn("eob_dwarf2_1_group", 14,8,0, "eob_dwarf2_1_group_1")
	:setAIState("guard")
spawn("eob_dwarf1_2", 15,12,0, "eob_dwarf1_2_1")
	:setAIState("guard")
spawn("eob_spider", 23,16,1, "eob_spider_16")
spawn("eob_dwarf1_2", 15,13,0, "eob_dwarf1_2_2")
	:setAIState("guard")
spawn("eob_spider", 22,11,0, "eob_spider_17")
spawn("eob_spider", 26,23,1, "eob_spider_18")
	:setAIState("guard")
spawn("eob_spider", 6,2,0, "eob_spider_19")
spawn("eob_dwarf1_2", 19,10,0, "eob_dwarf1_2_3")
	:setAIState("guard")
spawn("eob_spider", 5,15,0, "eob_spider_20")
spawn("eob_spider", 7,1,0, "eob_spider_21")
spawn("eob_spider", 2,16,0, "eob_spider_22")
spawn("eob_spider", 1,2,0, "eob_spider_23")
spawn("eob_spider", 1,5,0, "eob_spider_24")
spawn("eob_dwarf1_2", 17,13,0, "eob_dwarf1_2_4")
	:setAIState("guard")
spawn("eob_spider", 3,12,0, "eob_spider_25")
spawn("eob_dwarf4_1_group", 18,14,0, "eob_dwarf4_1_group_1")
	:setAIState("guard")
spawn("eob_dwarf1_1", 17,8,0, "eob_dwarf1_1_2")
	:setAIState("guard")
spawn("eob_spider", 23,14,1, "eob_spider_26")
spawn("eob_ruins_stairs_up", 4,13,2, "eob_ruins_stairs_up_3")
spawn("eob_dwarven_wall_cube", 2,27,0, "eob_dwarven_wall_cube_10")
spawn("script_entity", 2,27,0, "script_entity_35")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end")
spawn("secret", 3,15,1, "secret_7")
spawn("secret", 10,5,3, "secret_8")
spawn("eob_ruins_secret_button_tiny", 1,12,3, "eob_ruins_secret_button_tiny_10")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_ruins_door_stone_one_3", "open")
spawn("script_entity", 9,14,1, "script_entity_special_quest_5")
	:setSource("-- special quest for lvl 5\
-- inserting 5 rations turns them into 5 iron rations\
\
function specialQuest5(alcove,item)\
\9-- do the evaluation only if the quest wasnt done yet\
\9if counter_special_quest_5:getValue() == 0 then\
\9\
\9\9\
\9\9-- local variable to check how many eob_rations is inside alcove\
\9\9-- works only if the alcove has parameter \"Activate Always\"\
\9\9local rationcount = 0\
\9\9-- list through all the items in the alcove\
\9\9for  i in eob_ruins_alcove_special_quest_5:containedItems()\
\9\9do\
\9\9\9--increase counter if eob_rations are found\
\9\9\9if i.name == \"eob_rations\" then \
\9\9\9rationcount = rationcount + 1\
\9\9\9end\
\9\9end\
\9\9-- debug\
\9\9--hudPrint(\"number of rations in alcove: \".. rationcount .. \" \" .. counter_special_quest_5:getValue() ..\"\" )\
\
\9\9-- if we reached 5 or more eob_rations trigger special quest 5\9\
\9\9if rationcount >= 5\
\9\9then \
\9\9\9--acknowledge the special quest\
\9\9\9counter_special_quest_5:setValue(1)\
\9\9\9secret_special_quest_5:activate()\
\9\9\9hudPrint (\"Special quest for this level!\")\
\9\
\9\9\9-- replace 5 eob_rations with eob_rations_iron\
\9\9\9local rationsturned = 5\
\9\9\9for  i in eob_ruins_alcove_special_quest_5:containedItems()\
\9\9\9do\
\9\9\9\9if i.name == \"eob_rations\" and rationsturned > 0 then \
\9\9\9\9\9i:destroy()\
\9\9\9\9\9eob_ruins_alcove_special_quest_5:addItem(spawn(\"eob_rations_iron_u\"))\
\9\9\9\9\9rationsturned = rationsturned - 1\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
end\9\
\
")
spawn("secret", 11,14,2, "secret_special_quest_5")
spawn("counter", 10,14,2, "counter_special_quest_5")
spawn("eob_dwarven_wall_cube", 26,27,2, "eob_dwarven_wall_cube_13")
spawn("script_entity", 26,27,1, "script_entity_38")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9end\
\9\9return true\
\9end\
\9return false\
end")
spawn("eob_teleporter", 26,27,3, "eob_teleporter_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,23,3,5)
	:deactivate()
spawn("script_entity", 20,26,2, "script_entity_40")
	:setSource("-- not using simple ruin_pits because it looks much differently then the original\
-- decoration that looks exactly like dwarven floor on every step\
-- because this fake decoration can be later destroyed by script\
-- default floor cannot and it messes with the trap doors\
-- hidden plate at every step calls scripts\
-- save party possition into global variable\
-- opens pit at last posstion\
-- update possition to new one\
\
function openPitAtLast()\
\9-- open pit at last possition\
\9-- destroy the floor eob_ruins_floor_destroyable defined in objects.lua\
\9spawn(\"eob_ruins_pit\",lastl,lastx,lasty,0):addTrapDoor():open()\
\9for e in entitiesAt(5,lastx,lasty) do\
\9\9if e.name == \"eob_ruins_floor_destroyable\" then\
\9\9\9e:destroy()\
\9\9end\9\
\9end\
\9savePossition()\
\
end\
\
function savePossition()\
\
\9-- save current possition to global variables\
\9lastl = party.level\
\9lastx = party.x\
\9lasty = party.y\
\9--hudPrint(\"level: \" .. lastl .. \" x: \" .. lastx .. \" y: \" .. lasty .. \"\")\
\
\9\
end\
\
\
function cleanPits()\
\9-- remove all the pits in the area\
\9-- probably not the fastest method\
\9-- maybe we could use the fact that pit ID numbers are generated \
\9-- from 1 to number of pits total\
\9-- or find all pits on this level, save to array, destroy one by one\
\9-- there is one more pit at 22,13, but that is given other name \
\9-- no pits in this level that in the south-east area\
\
\
-- one possible version\
\9for e in allEntities(5) do\
\9\9if e.name == \"eob_ruins_pit\" and e.id ~= \"eob_ruins_pit_no_remove\" then\
\9\9\9-- first spawn to use the e.x and e.y coordinates, then destory e entity\
\9\9\9spawn(\"eob_ruins_floor_destroyable\",5,e.x,e.y,0)\
\9\9\9e:destroy()\
\9\9end\
\9end\
\
-- another version\
--[[\
\9for x=14,28,1 do\
\9\9for y=24,30,1 do\
\9\9\9for e in entitiesAt(5,x,y) do\
\9\9\9\9if e.name == \"eob_ruins_pit\" then\
\9\9\9\9\9e:destroy()\
\9\9\9\9\9spawn(\"eob_ruins_floor_destroyable\",5,x,y,0)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
]]\
end")
spawn("pressure_plate_hidden", 19,24,2, "pressure_plate_hidden_42")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "savePossition")
spawn("pressure_plate_hidden", 19,25,1, "pressure_plate_hidden_43")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 18,25,1, "pressure_plate_hidden_44")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 21,26,2, "pressure_plate_hidden_45")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 20,25,2, "pressure_plate_hidden_46")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 17,25,1, "pressure_plate_hidden_47")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 17,26,1, "pressure_plate_hidden_48")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 19,27,2, "pressure_plate_hidden_50")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 20,27,2, "pressure_plate_hidden_51")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 19,28,2, "pressure_plate_hidden_52")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 21,25,2, "pressure_plate_hidden_53")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 20,28,2, "pressure_plate_hidden_54")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 19,29,2, "pressure_plate_hidden_55")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 19,30,2, "pressure_plate_hidden_56")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 20,30,2, "pressure_plate_hidden_57")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 21,30,2, "pressure_plate_hidden_58")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 18,29,2, "pressure_plate_hidden_59")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 17,29,2, "pressure_plate_hidden_60")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 16,29,2, "pressure_plate_hidden_61")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 16,26,2, "pressure_plate_hidden_62")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 15,26,2, "pressure_plate_hidden_63")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 14,26,2, "pressure_plate_hidden_64")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 14,27,2, "pressure_plate_hidden_65")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 16,28,2, "pressure_plate_hidden_66")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 15,28,2, "pressure_plate_hidden_67")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 14,28,2, "pressure_plate_hidden_68")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 19,26,2, "pressure_plate_hidden_69")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 21,24,2, "pressure_plate_hidden_70")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 22,25,2, "pressure_plate_hidden_71")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 22,24,2, "pressure_plate_hidden_72")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 23,25,2, "pressure_plate_hidden_73")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 24,25,2, "pressure_plate_hidden_74")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 23,24,2, "pressure_plate_hidden_75")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 25,25,2, "pressure_plate_hidden_76")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 26,25,2, "pressure_plate_hidden_77")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 27,25,2, "pressure_plate_hidden_78")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 28,25,2, "pressure_plate_hidden_79")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 28,26,2, "pressure_plate_hidden_80")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 21,27,2, "pressure_plate_hidden_81")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 22,27,2, "pressure_plate_hidden_82")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 23,27,2, "pressure_plate_hidden_83")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 23,28,2, "pressure_plate_hidden_84")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 23,29,2, "pressure_plate_hidden_85")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 23,30,2, "pressure_plate_hidden_86")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 24,29,2, "pressure_plate_hidden_87")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 25,29,2, "pressure_plate_hidden_88")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 26,29,2, "pressure_plate_hidden_89")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 27,29,2, "pressure_plate_hidden_90")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 28,27,2, "pressure_plate_hidden_91")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 28,28,2, "pressure_plate_hidden_92")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("pressure_plate_hidden", 28,29,2, "pressure_plate_hidden_93")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_40", "openPitAtLast")
spawn("eob_teleporter", 28,17,2, "eob_teleporter_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,17,2,5)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_ruins_floor_destroyable", 19,24,1, "eob_ruins_floor_destroyable_1")
spawn("eob_ruins_floor_destroyable", 19,25,2, "eob_ruins_floor_destroyable_2")
spawn("eob_ruins_floor_destroyable", 18,25,1, "eob_ruins_floor_destroyable_3")
spawn("eob_ruins_floor_destroyable", 17,25,2, "eob_ruins_floor_destroyable_4")
spawn("eob_ruins_floor_destroyable", 17,26,2, "eob_ruins_floor_destroyable_5")
spawn("eob_ruins_floor_destroyable", 16,26,1, "eob_ruins_floor_destroyable_6")
spawn("eob_ruins_floor_destroyable", 15,26,1, "eob_ruins_floor_destroyable_7")
spawn("eob_ruins_floor_destroyable", 14,26,2, "eob_ruins_floor_destroyable_8")
spawn("eob_ruins_floor_destroyable", 14,27,1, "eob_ruins_floor_destroyable_9")
spawn("eob_ruins_floor_destroyable", 14,28,1, "eob_ruins_floor_destroyable_10")
spawn("eob_ruins_floor_destroyable", 15,28,2, "eob_ruins_floor_destroyable_11")
spawn("eob_ruins_floor_destroyable", 16,28,2, "eob_ruins_floor_destroyable_12")
spawn("eob_ruins_floor_destroyable", 16,29,1, "eob_ruins_floor_destroyable_13")
spawn("eob_ruins_floor_destroyable", 17,29,2, "eob_ruins_floor_destroyable_14")
spawn("eob_ruins_floor_destroyable", 18,29,3, "eob_ruins_floor_destroyable_15")
spawn("eob_ruins_floor_destroyable", 19,30,1, "eob_ruins_floor_destroyable_16")
spawn("eob_ruins_floor_destroyable", 20,30,2, "eob_ruins_floor_destroyable_17")
spawn("eob_ruins_floor_destroyable", 20,30,1, "eob_ruins_floor_destroyable_18")
spawn("eob_ruins_floor_destroyable", 19,29,2, "eob_ruins_floor_destroyable_19")
spawn("eob_ruins_floor_destroyable", 19,28,2, "eob_ruins_floor_destroyable_20")
spawn("eob_ruins_floor_destroyable", 20,28,3, "eob_ruins_floor_destroyable_21")
spawn("eob_ruins_floor_destroyable", 19,27,2, "eob_ruins_floor_destroyable_22")
spawn("eob_ruins_floor_destroyable", 19,26,1, "eob_ruins_floor_destroyable_23")
spawn("eob_ruins_floor_destroyable", 20,25,2, "eob_ruins_floor_destroyable_24")
spawn("eob_ruins_floor_destroyable", 21,24,2, "eob_ruins_floor_destroyable_25")
spawn("eob_ruins_floor_destroyable", 22,24,1, "eob_ruins_floor_destroyable_26")
spawn("eob_ruins_floor_destroyable", 23,24,2, "eob_ruins_floor_destroyable_27")
spawn("eob_ruins_floor_destroyable", 21,25,1, "eob_ruins_floor_destroyable_28")
spawn("eob_ruins_floor_destroyable", 22,25,3, "eob_ruins_floor_destroyable_29")
spawn("eob_ruins_floor_destroyable", 23,25,2, "eob_ruins_floor_destroyable_30")
spawn("eob_ruins_floor_destroyable", 24,25,2, "eob_ruins_floor_destroyable_31")
spawn("eob_ruins_floor_destroyable", 25,25,2, "eob_ruins_floor_destroyable_32")
spawn("eob_ruins_floor_destroyable", 26,25,2, "eob_ruins_floor_destroyable_33")
spawn("eob_ruins_floor_destroyable", 27,25,2, "eob_ruins_floor_destroyable_34")
spawn("eob_ruins_floor_destroyable", 28,25,3, "eob_ruins_floor_destroyable_35")
spawn("eob_ruins_floor_destroyable", 28,26,2, "eob_ruins_floor_destroyable_36")
spawn("eob_ruins_floor_destroyable", 28,27,2, "eob_ruins_floor_destroyable_37")
spawn("eob_ruins_floor_destroyable", 28,28,2, "eob_ruins_floor_destroyable_38")
spawn("eob_ruins_floor_destroyable", 28,29,3, "eob_ruins_floor_destroyable_39")
spawn("eob_ruins_floor_destroyable", 27,29,2, "eob_ruins_floor_destroyable_40")
spawn("eob_ruins_floor_destroyable", 26,29,1, "eob_ruins_floor_destroyable_41")
spawn("eob_ruins_floor_destroyable", 25,29,3, "eob_ruins_floor_destroyable_42")
spawn("eob_ruins_floor_destroyable", 24,29,1, "eob_ruins_floor_destroyable_43")
spawn("eob_ruins_floor_destroyable", 23,30,3, "eob_ruins_floor_destroyable_44")
spawn("eob_ruins_floor_destroyable", 23,29,3, "eob_ruins_floor_destroyable_45")
spawn("eob_ruins_floor_destroyable", 23,28,0, "eob_ruins_floor_destroyable_46")
spawn("eob_ruins_floor_destroyable", 23,27,3, "eob_ruins_floor_destroyable_47")
spawn("eob_ruins_floor_destroyable", 22,27,3, "eob_ruins_floor_destroyable_48")
spawn("eob_ruins_floor_destroyable", 21,27,1, "eob_ruins_floor_destroyable_49")
spawn("eob_ruins_floor_destroyable", 21,26,2, "eob_ruins_floor_destroyable_50")
spawn("eob_ruins_floor_destroyable", 20,27,0, "eob_ruins_floor_destroyable_51")
spawn("eob_ruins_floor_destroyable", 21,30,2, "eob_ruins_floor_destroyable_52")
spawn("eob_ruins_floor_destroyable", 22,13,1, "eob_ruins_floor_destroyable_53")
spawn("script_entity", 21,13,2, "script_entity_42")
	:setSource("--the pit must have ID = \"eob_ruins_pit_no_remove\"\
--so that the other script at 20,26 ignores the pit and wont close it\
--when lever on 19,18 resets the pit are on south-east\
\
function openPit()\
\9spawn(\"eob_ruins_pit\",5,22,13,0,\"eob_ruins_pit_no_remove\"):addTrapDoor():open()\
\9for e in entitiesAt(5,22,13) do\
\9\9if e.name == \"eob_ruins_floor_destroyable\" then\
\9\9\9e:destroy()\
\9\9end\9\
\9end\9\
end")
spawn("secret", 28,16,1, "secret_9")
spawn("eob_dwarven_wall_cube_invisible", 3,15,1, "eob_dwarven_wall_cube_invisible_1")
spawn("script_entity", 3,15,1, "script_entity_36")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) \
\9do\
\9\9if string.find(x.name,\"eob_dwarven_wall_cube\") ~= nil\
\9\9then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\
\9\9\9eob_ruins_secret_button_tiny_4:destroy()\
\9\9end\
\9\9return true\
\9end\
\9return false\
end")
spawn("eob_dwarven_wall_cube", 19,16,2, "eob_dwarven_wall_cube_2")
spawn("script_entity", 19,16,2, "script_entity_37")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\
\9\9end\
\9\9return true\
\9end\
\9return false\
end")
spawn("timer", 8,9,3, "timer_open")
	:setTimerInterval(0)
	:addConnector("activate", "script_entity_55", "openDoor")
	:addConnector("activate", "timer_open", "deactivate")
spawn("script_entity", 7,11,1, "script_entity_55")
	:setSource("-- after button is pressed open the door after random amount of seconds betwen 1 and 5\
function openTimer()\
-- funny stuff with sounds, can be removed\
-- the doors are in original already half way opened when you approach\
-- and forceable \
--\9timer_open:setTimerInterval(math.random (2,6))\
\9timer_open:setTimerInterval(22)\
\9timer_open:activate()\
\9playSoundAt(\"cube_start\",5,7,10)\
end\
\
\
function openDoor()\
\9eob_ruins_door_metal_force_1:open()\
\9timer_close:activate()\
end\
\
\
function closeDoor()\9\
\9-- close the door \
\9-- but because they are defined with closeVelocity 0 and closeAcceleration 0\
\9-- the door stay stuck half way\
\9playSound(\"cube_break_free\")\
\9eob_ruins_door_metal_force_1:close()\
end")
spawn("timer", 8,11,3, "timer_close")
	:setTimerInterval(2.5)
	:addConnector("activate", "script_entity_55", "closeDoor")
	:addConnector("activate", "timer_close", "deactivate")
spawn("eob_ruins_button", 9,9,3, "eob_ruins_button_12")
	:setActivateOnce(true)
	:addConnector("toggle", "script_entity_55", "openTimer")
spawn("eob_ruins_door_metal_force", 9,10,3, "eob_ruins_door_metal_force_1")
spawn("eob_blocker", 18,13,1, "eob_blocker_24")
spawn("gw_event", 15,10,3, "gw_event_dwarven_camp")
	:setSource("-- is this event enabled?\
--enabled = true\
\
-- trigger only if party came from west \
--     and only if party didn't attack the dwarves\
\
\
\
-- name of the image to show\
image = \"mod_assets/textures/events/eob1-dwarf-camp-entrance-cut.dds\"\
image_width = 177\
image_hieght = 120\
\
\
-- Defines states. Each entry must have exactly two columns:\
-- first is state, the second is description shown.\
-- Event will start from the first state on the list.\
-- There is also one special state called \"end\". Once moved\
-- to state \"end\", the whole event ends.\
\
\
states = {\
{ \"init\", \"You've entered a camp of dwarves\"},\
{ \"first\",\
--\9\"---------------------------------------------\"\9\9\
\9\"\\\"I am Armun, spokesman of this clan. Of \\n\"..\
\9\"course, we have information on the location\\n\" ..\
\9\"of the exists from these halls, but in our\\n\" ..\
\9\"hour of need, I have no time to help you.\\n\\n\\n\\n\\n\\n\" .. \
\9\"However, if you would be willing to help us..\\\"\\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"visited\",\
--\9\"---------------------------------------------\"\9\9\
\9\"\\\"Have you reconsidered our offer?\\n\\n\"..\
\9\"Both of our parties would benefit\\n\" ..\
\9\"if you assist us.\\\"\\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"helped\",\
\9\"I wish you luck in your travels.\" \
\9},\
{ \"prop1\",\
--\9\"---------------------------------------------\"\9\
\9\"Armun begins, \\\"Our clan is descended from \\n\" ..\
\9\"the  dwarves who  built  these great halls.\\n\" ..\
\9\"Here, our ancestors lived  in peace, until \\n\" ..\
\9\"hordes of  evil  creatures  drove them out \\n\" ..\
\9\"and  into  the realms  of  men  and  elves.\\n\" ..\
\9\"On  the  surface,   our  numbers  dwindled,\\n\" ..\
\9\"finally,our leader, King Teirgoh, gathered \\n\" ..\
\9\"our people and led us underground, \\n\" ..\
\9\"in search of our ancestral home.\\n\\n\" ..\
\9\"Using secret knowlede, passed down through the royal family, \\n\" ..\
\9\"we  finally  discovered  these  stone-carved  halls.\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"prop2\",\
--\9\"---------------------------------------------\"\
\9\"The  halls  were vast and we only explored \\n\" ..\
\9\"a  small  portion  before we had  to  made \\n\" ..\
\9\"camp  in an enclosed  area  decorated with \\n\" ..\
\9\"a stone portal.\\n\" ..\
\9\"But while the camp slept, the stone portal \\n\" ..\
\9\"flared with magical light!  From the light,\\n\" ..\
\9\"a horde of drow charged us. They were led  \\n\" ..\
\9\"by a female they called Shindia.\\n\" ..\
\9\"We rose up and fought the dark ones, though we were  exhausted\\n\" ..\
\9\"by long  weeks of travel. Both sides suffered  many casualties,\\n\" .. \
\9\"but in the end we forced them to retreat into the portal from \\n\" ..\
\9\"which they came.\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"prop3\",\
--\9\"---------------------------------------------\"\
\9\"The  battle  was  costly.  King Teirgoh was \\n\" ..\
\9\"wounded by a poisoned dagger,  and now \\n\" ..\
\9\"lies in ethernal sleep.\\n\" ..\
\9\"Nothing  our  cleric  can  do will wake him.\\n\" ..\
\9\"His only son, prince Keirgar, was  captured \\n\" ..\
\9\"by the invading Drow.\\n\" ..\
\9\"With no member of the royal family among \\n\" ..\
\9\"us, we no longer have access to their secret\\n\" ..\
\9\"knowledge of the exits from these halls.\\n\" ..\
\9\"Now we wait, while  our  cleric  heals our  surviving  warriors.\\n\" .. \
\9\"Once prepared, we will try to rescue our prince and avenge the fall\\n\" ..\
\9\"of Teirgoh. Our numbers are small, but we would rather fight\\n\" ..\
\9\"to our deaths then abandon our prince to the Drow.\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{\"prop4\",\
--\9\"---------------------------------------------\"\
\9\"Unless...if your party were to rescue prince \\n\" ..\
\9\"Keirgar from the Drow and return him to \\n\" ..\
\9\"us, he could give you information about\\n\" ..\
\9\"the exits from these hals. \\n\\n\\n\" ..\
\9\"You would have your information \\n\" ..\
\9\"and we would have our prince.  \\n\\n\" ..\
\9\"So, will you help us?\\\"\"\
\9}, \
--\9\"-----------------------------------------------------------------\"\
{\"help1\",\
--\9\"---------------------------------------------\"\
\9\"Armun Accepts your help with gratitude.\\n\" ..\
\9\"He hands you a medaillion made of stone. \\n\" ..\
\9\"\\\"Take this. Shindia dropped it in the battle.\\n\" ..\
\9\"It is the key to activate the portal through\\n\" ..\
\9\"which she and her minions came.\\\"\\n\" ..\
\9\"\\\"Our ancestors build the portals to trasport\\n\" ..\
\9\"them from one location to another quickly.\\n\" ..\
\9\"When the portal doorway is touched with\\n\" ..\
\9\"the right object, the portal is activated.\\n\" ..\
\9\"We would have followed Shindia and her Drow elves back through \\n\" ..\
\9\"the portal, but we are not ready to confront them. \\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"help2\",\
--\9\"---------------------------------------------\"\
\9\"The Ancient ones also used powerful magic \\n\" ..\
\9\"such as is an Oracle of Knowledge and the key\\n\" ..\
\9\"to its operation is the powerful black orb.\\n\" ..\
\9\"By Placing an orb into the Oracle, its power \\n\" ..\
\9\"is released.\\n\\n\" ..\
\9\"Our cleric can help heal your wounds. Be\\n\" ..\
\9\"careful not to tax him too heavily, he has\\n\" ..\
\9\"been healing the wounds of our warriors\\n\" ..\
\9\"and trying to revive the king from his\\n\" ..\
\9\"poisoned sleep.\\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"dohrum\",\
--\9\"---------------------------------------------\"\
\9\"Armun stops you. \\\"One other thing:\\n\" ..\
\9\"a young dwarven warrior would like to join\\n\" ..\
\9\"you in your quest to find the prince.\\n\\n\" ..\
\9\"Will you allow him to join you?\\\"\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
\
{ \"join\",\
\9\"Dorhum joins the party.\"\
\9},\
{ \"nojoin\",   \
\9\"I wish you luck in your travels\"\
\9},\
{ \"leave\",\
--\9\"---------------------------------------------\"\9\9\
\9\"Armun's expression changes from expectant\\n\" .. \
\9\"hope to sad disappointment.\\n\" .. \
\9\"\\\"It\\'s unfortunate that you can not help us.\\n\" ..  \
\9\"We wish you well in your travels.\\\"\\n\"\
--\9\"-----------------------------------------------------------------\"\
\9}\
}\
\9\
\
function onVisit()\
\9-- did we already visit/help the dwarves?\
\9-- not visited yet, return action name for first visit\
\9--hudPrint(\"onVisit: \".. counter_dwarf_camp_visited:getValue() .. \"-\" .. counter_dwarf_camp_helped:getValue() ..\"\")\
\
\9if \9\9counter_dwarf_camp_visited:getValue() == 0 \
\9\9and\9counter_dwarf_camp_helped:getValue()  == 0\
\9then \
\9\9setVisited()\
\9\9return \"first\"\
\
\9--visited and not helped, return action name for visit while not helped yet\
\9elseif\9counter_dwarf_camp_visited:getValue() == 1\
\9\9and\9counter_dwarf_camp_helped:getValue()  == 0\
\9then\
\9\9return \"visited\"\
\9else\
\
\9-- else return classic greeting that will bother you during every visit\
\9\9return \"helped\"\
\9end\
end\
\
function setVisited()\
\9-- set the counter to 1 to express we already made the first talk to dwarves\
\9counter_dwarf_camp_visited:increment()\
\9--hudPrint(\"setVisited: \".. counter_dwarf_camp_visited:getValue() .. \"-\" .. counter_dwarf_camp_helped:getValue() ..\"\")\9\
end\
\
function setHelped()\
\9-- set the counter to 1 to express we already made the first talk to dwarves\
\9counter_dwarf_camp_helped:increment()\
\
\9-- spawn the reward for helping , 6 rations and stone medailon\
\9spawn(\"eob_stone_medallion\",party.level, party.x, party.y,party.facing)\
\9for r=1,6,1 do\
\9spawn(\"eob_rations\",party.level, party.x, party.y, party.facing)\
\9end\
\9--hudPrint(\"setHelped:\".. counter_dwarf_camp_visited:getValue() .. \"-\" .. counter_dwarf_camp_helped:getValue() ..\"\")\9\
end\
\
function onJoin()\
\9dohrum_join.dohrumJoin()\
end\
\
\
\
-- defines possible actions in each state. Each entry has\
-- 4 values. First is a state in which you can take that action. \
-- Second is a state name to which player will transition if that\
-- action is taken. Third is a text printed on the action button.\
-- Fourth defines function callback. It is optional. This function\
-- may not return anything and the state specified in value 2 will \
-- be used. The function may also return a name of the state, thus\
-- overriding default transition. One of the transitions must\
-- transit to \"end\" state (a dummy state that concludes the whole\
-- event).\
-- abort seems to be another key word to temporarily stop, but trigger again when stepped on\
-- while end means never trigger again\
\
\
actions = {\
-- cant figure out how to run script BEFORE the first text screen \
\9{ \"init\",\9\9\"first\",\9\"More\", onVisit},\
\9{ \"first\",\9\9\"prop1\",\9\"Hear Proposal\"},\
\9{ \"first\",\9\9\"leave\",\9\"Leave\",},\
\9{ \"prop1\",\9\9\"prop2\",\9\"More\"},\
\9{ \"prop2\",\9\9\"prop3\",\9\"More\"},\
\9{ \"prop3\",\9\9\"prop4\",\9\"More\"},\
\9{ \"prop4\",\9\9\"help1\",\9\"Help him\", setHelped},\
\9{ \"prop4\",\9\9\"leave\",\9\"Leave\",},\
\9{ \"visited\",\9\"help1\",\9\"Help him\", setHelped},\
\9{ \"visited\",\9\"leave\",\9\"Leave\",},\
\9{ \"help1\",\9\9\"help2\",\9\"More\"},\
\9{ \"help2\",\9\9\"dohrum\",\9\"More\"},\9\
\9{ \"dohrum\",\9\9\"join\",\9\9\"Yes\" },\
\9{ \"dohrum\",\9\9\"nojoin\",\9\"No\" },\
\9{ \"join\",\9\9\"abort\",\9\"More\", onJoin},\
\9{ \"nojoin\",\9\9\"abort\",\9\"More\"},\
\9{ \"leave\",\9\9\"abort\",\9\"More\"},\
\9{ \"helped\",\9\9\"abort\",\9\"More\"},\
\9{ \"dummy\",\9\9\"end\",\9\9\"No, you will never leave this conversation!\"}\
}\
\
-- optionaly we could make Dohrum joinable during later visits\
")
spawn("script_entity", 13,9,2, "dohrum_join")
	:setSource("function dohrumJoin()\
\9newguy = {\
\9\9name = \"Dohrum\",    -- just a name\
\9\9race = \"Human\", \9-- must be one of: Human, Minotaur, Lizardman, Insectoid\
\9\9class = \"Fighter\",  -- must be one of: Figther, Rogue, Mage or Ranger\
\9\9sex = \"male\", \9\9-- must be one of: male, female\
\9\9level = 3,          -- character's level (EOB level 5)\
\9\9portrait = \"mod_assets/textures/portraits/eob1-dohrum.dds\", -- must be 128x128 dds file\
\9\9\
\9\9-- allowed skills: air_magic, armors, assassination, athletics, axes, daggers, \
\9\9-- dodge, earth_magic, fire_magic, ice_magic, maces, missile_weapons, spellcraft,\
\9\9-- staves, swords, throwing_weapons and unarmed_combat\
\9\9skills = { athletics = 2, armors = 8 , axes = 4, maces = 0, swords = 0, unarme_combat = 0  },\
\9\9\9\9\
\9\9-- allowed traits: aggressive, agile, athletic, aura, cold_resistant, evasive, \
\9\9-- fire_resistant, fist_fighter, head_hunter, healthy, lightning_speed,\
\9\9-- natural_armor, poison_resistant, skilled, strong_mind, tough\
\9\9-- Traits must be specified in quotes.\
\9\9-- Typically each character has 2 traits, but you can specify more or less.\
\9\9traits = { \"athletic\",\"skilled\"},\
\9\9\
\9\9health = 65, \9\9 -- Maximum health (orig EOB1 health 28 (copared to Taghorn who has 45))\
\9\9current_health = 65,  -- Current health\
\9\9\
\9\9energy = 75,         -- Maximum energy\
\9\9current_energy = 75, -- Current energy\
\
\9\9strength = 18,        -- Strength (EOB strength 18/29)\
\9\9dexterity = 13,       -- Dexterity(EOB dexterity 13)\
\9\9vitality = 17,        -- Vitality (EOB constituion 17)\
\9\9willpower = 13,       -- Willpower(EOB wisdom 11, inteligence 13)\
\9\9\
\9\9protection = 5,      -- protection\
\9\9evasion = 0, \9\9  -- evasion\
\9\9\9\9\
\9\9-- Resist fire/cold/poison/shock (remember that those values will be modified by bonuses\
\9\9-- from fire, cold, poison or shock magic\
\9\9resist_fire = 5,\
\9\9resist_cold = 5,\
\9\9resist_poison = 5,\
\9\9resist_shock = 5,\
\9\9\
\9\9-- items: Notation item_name = slot. Slots numbering: 1 (head), 2 (torso), 3 (legs), 4 (feet), \
\9\9-- 5 (cloak), 6 (neck), 7 (left hand), 8 (right hand), 9 (gaunlets), 10 (bracers), 11-31 (backpack\
\9\9-- slots) or 0 (any empty slot in backpack)\
\9\9-- Make sure you put things in the right slot. Wrong slot (e.g. attempt to try boots on head)\
\9\9-- will make the item spawn to fail.\
\
\9\9items = { ring_mail = 2, ring_greaves = 3, ring_boots = 4, eob_axe = 8, eob_potion_healing = 0, eob_rations = 0, eob_rations = 0},\
\9\9-- in EOB Dohrum has chainmail AC+5, dwarf helmet (protects from crit dmg) and axe \
\9\9-- in inventory 2 small rations + healing potion\
\9\9\
\9\9-- food: 0 (starving) to 1000 (just ate the whole cow)\
\9\9food = 800\
\9\9\
\9}\
\
\9-- Call addChampion method. It will add new guy to the party if there are suitable slots and will\
\9-- display a GUI prompt selecting a party member to drop if your party is already 4 guys\
\9gw_party.addChampion(newguy)\
end\
\
")
spawn("counter", 14,11,3, "counter_dwarf_camp_visited")
spawn("counter", 14,13,3, "counter_dwarf_camp_attacked")
spawn("counter", 14,12,1, "counter_dwarf_camp_helped")
spawn("altar", 18,13,2, "altar_1")
	:addItem(spawn("skull"))
spawn("gw_event", 19,6,2, "gw_event_dwarven_cleric")
	:setSource("-- here should be dwarven cleric\
-- if you go away and back to this level he will rest meanwhile\
\
\
-- first screeen\
-- 'A weary dwarven cleric greets you. \"Yes, how can I help you?\"'\
-- choices \"Heal party\" or \"Leave\"\
-- heal party, heals up to 100dmg from 1st char to last char , and cure poison from all poisoned\
\
-- if you have any bones with there is middle option (between heal party and leave\
-- 'Ressurect dead'\
-- next screen shows\
-- 'Which should be ressurected?'\
-- with a joice of all the names to resurrect\
\
-- if tired\
-- 'An exhausted dwarven cleric rubs his eyes and tells you to come back after he has rested.'\
\
")
spawn("eob_blocker", 15,8,0, "eob_blocker_dwarfcamp_1")
spawn("eob_blocker", 16,8,2, "eob_blocker_dwarfcamp_2")
spawn("eob_blocker", 17,9,3, "eob_blocker_dwarfcamp_3")
spawn("eob_blocker", 18,8,3, "eob_blocker_dwarfcamp_4")
spawn("eob_blocker", 17,7,2, "eob_blocker_dwarfcamp_5")
spawn("eob_blocker", 19,12,2, "eob_blocker_dwarfcamp_6")
spawn("eob_blocker", 17,12,1, "eob_blocker_dwarfcamp_7")
spawn("eob_blocker", 17,14,3, "eob_blocker_dwarfcamp_22")
spawn("eob_blocker", 19,14,3, "eob_blocker_dwarfcamp_23")
spawn("eob_blocker", 18,10,0, "eob_blocker_dwarfcamp_25")
spawn("eob_blocker", 19,9,2, "eob_blocker_dwarfcamp_26")
spawn("eob_blocker", 15,11,1, "eob_blocker_dwarfcamp_27")
spawn("starting_location", 10,10,1, "starting_location_1")

--- level 6 ---

mapName("Botton Level of Dwarven Ruins")
setWallSet("dwarven")
playStream("assets/samples/music/temple_ambient.ogg")
mapDesc([[
####.###########################
####.####...........###...#....#
###...###.######.##.###.###.#..#
##.....##.....##.##...#.#.#.####
#.......#.##..#...#...#........#
#.#####.#.#...#...#...###.#.#..#
#.###.#.#.#################.####
#####.###......................#
###.....###...............#.#..#
#...#.#...#..######..##...#.####
#..#...#..#..#....#..#####....##
#..#...#..#..###..#..#......#.##
#..#...#..#..######..#..##.#...#
#####.#####..........#..##.#...#
#....................#.....#...#
#....................#.###..#.##
########.#.##.########.#..###.##
####...#.#.#...#.......#..#...##
###....#.#.#...#..#######.#.####
#.###....#.########.......#.#..#
#......##..#...####.#####.#.#..#
####...#..##...#.##.##.........#
#######..##....#....##.####.####
##......###.#######.##....#.#..#
##.########.###......#....#....#
##......#.#.###......#....#...##
#######.#...##.....###....#...##
##......#...##.#####....#####.##
##.######.........#...####..#.##
##..........##........##......##
##....###...##....#....#......##
################################
]])
spawn("eob_ruins_stairs_up", 25,1,1, "eob_ruins_stairs_up_6")
spawn("eob_ruins_door_stone", 16,2,0, "eob_ruins_door_stone_48")
	:addPullChain()
spawn("eob_ruins_door_stone", 19,2,0, "eob_ruins_door_stone_49")
	:addPullChain()
spawn("eob_ruins_door_stone", 10,3,3, "eob_ruins_door_stone_50")
	:addPullChain()
spawn("eob_ruins_pressure_plate", 25,3,0, "eob_ruins_pressure_plate_north")
	:setTriggeredByParty(false)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "script_entity_41", "openOnWeapon")
spawn("eob_ruins_wall_text", 24,4,2, "eob_ruins_wall_text_18")
	:setWallText("Store weapons before proceeding.")
spawn("eob_ruins_door_stone_one", 26,4,1, "eob_ruins_door_stone_one_4")
spawn("eob_ruins_door_stone_one", 1,5,2, "eob_ruins_door_stone_one_5")
spawn("eob_ruins_door_stone_one", 7,5,2, "eob_ruins_door_stone_one_6")
spawn("eob_ruins_pressure_plate", 25,5,2, "eob_ruins_pressure_plate_south")
	:setTriggeredByParty(false)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "script_entity_41", "openOnWeapon")
spawn("eob_ruins_ceiling_shaft", 1,6,2, "eob_ruins_ceiling_shaft_8")
spawn("eob_ruins_ceiling_shaft", 7,6,2, "eob_ruins_ceiling_shaft_9")
spawn("eob_ruins_ornate_lock", 27,6,3, "eob_ruins_ornate_lock_3")
	:setOpenedBy("eob_key_u_3")
	:addConnector("activate", "eob_ruins_door_stone_one_7", "open")
spawn("eob_ruins_door_stone_one", 27,7,3, "eob_ruins_door_stone_one_7")
	:addPullChain()
spawn("eob_ruins_door_stone", 5,9,2, "eob_ruins_door_stone_51")
	:addPullChain()
spawn("eob_ruins_dart_firing_pad", 4,10,3, "eob_ruins_dart_firing_pad_1")
spawn("eob_ruins_dart_firing_pad", 6,10,1, "eob_ruins_dart_firing_pad_2")
spawn("eob_ruins_portal_scepter", 12,10,1, "eob_ruins_portal_scepter_1")
spawn("eob_ruins_stairs_down", 14,10,3, "eob_ruins_stairs_down_6")
spawn("eob_ruins_dart_firing_pad", 4,11,3, "eob_ruins_dart_firing_pad_3")
spawn("eob_ruins_pressure_plate", 5,11,2, "eob_ruins_pressure_plate_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:addConnector("activate", "script_entity_50", "shootDarts5")
spawn("eob_ruins_dart_firing_pad", 6,11,1, "eob_ruins_dart_firing_pad_4")
spawn("eob_ruins_door_stone", 29,11,2, "eob_ruins_door_stone_52")
	:addPullChain()
spawn("eob_ruins_dart_firing_pad", 4,12,3, "eob_ruins_dart_firing_pad_5")
spawn("eob_ruins_dart_firing_pad", 6,12,1, "eob_ruins_dart_firing_pad_6")
spawn("eob_ruins_door_stone", 5,13,0, "eob_ruins_door_stone_53")
	:addPullChain()
spawn("eob_ruins_ceiling_shaft", 22,13,2, "eob_ruins_ceiling_shaft_10")
spawn("eob_ruins_dart_firing_pad", 28,13,3, "eob_ruins_dart_firing_pad_7")
spawn("eob_ruins_pressure_plate", 29,13,2, "eob_ruins_pressure_plate_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_44", "shootDarts5")
spawn("eob_ruins_dart_firing_pad", 30,13,1, "eob_ruins_dart_firing_pad_8")
spawn("eob_ruins_wall_text", 14,15,2, "eob_ruins_wall_text_19")
	:setWallText("Nest")
spawn("eob_ruins_door_stone_one", 29,15,0, "eob_ruins_door_stone_one_8")
	:addPullChain()
spawn("eob_ruins_door_stone", 13,16,0, "eob_ruins_door_stone_54")
	:addPullChain()
spawn("eob_ruins_ornate_lock", 4,17,2, "eob_ruins_ornate_lock_4")
	:setOpenedBy("eob_key_dwarven_u")
	:addConnector("activate", "script_entity_51", "firstKey")
spawn("eob_ruins_wall_text", 7,19,2, "eob_ruins_wall_text_20")
	:setWallText("Round and round...")
spawn("eob_ruins_stairs_down", 1,19,0, "eob_ruins_stairs_down_7")
spawn("eob_ruins_stairs_up", 16,21,0, "eob_ruins_stairs_up_7")
spawn("eob_ruins_door_stone_one", 18,22,1, "eob_ruins_door_stone_one_9")
spawn("eob_ruins_door_stone_one", 22,22,2, "eob_ruins_door_stone_one_10")
	:addPullChain()
spawn("eob_ruins_door_stone_one", 27,22,2, "eob_ruins_door_stone_one_11")
	:addPullChain()
spawn("eob_ruins_dart_firing_pad", 2,23,3, "eob_ruins_dart_firing_pad_9")
spawn("eob_ruins_pressure_plate", 2,23,3, "eob_ruins_pressure_plate_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_49", "shootDarts2")
spawn("eob_ruins_pressure_plate", 7,23,2, "eob_ruins_pressure_plate_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_49", "shootDarts1")
spawn("eob_ruins_door_stone_one", 19,23,2, "eob_ruins_door_stone_one_12")
	:addPullChain()
spawn("eob_ruins_ceiling_shaft", 20,24,0, "eob_ruins_ceiling_shaft_11")
spawn("eob_ruins_ceiling_shaft", 22,24,2, "eob_ruins_ceiling_shaft_12")
spawn("eob_ruins_ceiling_shaft", 23,24,2, "eob_ruins_ceiling_shaft_13")
spawn("eob_ruins_ceiling_shaft", 24,24,2, "eob_ruins_ceiling_shaft_14")
spawn("eob_ruins_pressure_plate", 2,25,2, "eob_ruins_pressure_plate_12")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_49", "shootDarts3")
spawn("eob_ruins_dart_firing_pad", 2,25,2, "eob_ruins_dart_firing_pad_11")
spawn("eob_ruins_dart_firing_pad", 7,25,1, "eob_ruins_dart_firing_pad_10")
spawn("eob_ruins_pressure_plate", 7,25,0, "eob_ruins_pressure_plate_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_49", "shootDarts4")
spawn("eob_ruins_ceiling_shaft", 18,25,2, "eob_ruins_ceiling_shaft_15")
spawn("eob_ruins_ceiling_shaft", 19,25,2, "eob_ruins_ceiling_shaft_16")
spawn("eob_ruins_ceiling_shaft", 20,25,2, "eob_ruins_ceiling_shaft_17")
spawn("eob_ruins_ceiling_shaft", 22,25,2, "eob_ruins_ceiling_shaft_18")
spawn("eob_ruins_ceiling_shaft", 23,25,2, "eob_ruins_ceiling_shaft_19")
spawn("eob_ruins_ceiling_shaft", 24,25,2, "eob_ruins_ceiling_shaft_20")
spawn("eob_ruins_ceiling_shaft", 25,25,2, "eob_ruins_ceiling_shaft_21")
spawn("eob_ruins_ceiling_shaft", 27,25,2, "eob_ruins_ceiling_shaft_22")
spawn("eob_ruins_ceiling_shaft", 28,25,2, "eob_ruins_ceiling_shaft_23")
spawn("eob_ruins_ceiling_shaft", 29,25,2, "eob_ruins_ceiling_shaft_24")
spawn("eob_ruins_ceiling_shaft", 15,26,2, "eob_ruins_ceiling_shaft_25")
spawn("eob_ruins_ceiling_shaft", 16,26,2, "eob_ruins_ceiling_shaft_26")
spawn("eob_ruins_ceiling_shaft", 17,26,2, "eob_ruins_ceiling_shaft_27")
spawn("eob_ruins_ceiling_shaft", 18,26,2, "eob_ruins_ceiling_shaft_28")
spawn("eob_ruins_ceiling_shaft", 22,26,2, "eob_ruins_ceiling_shaft_29")
spawn("eob_ruins_ceiling_shaft", 29,26,2, "eob_ruins_ceiling_shaft_30")
spawn("eob_ruins_ceiling_shaft", 20,27,3, "eob_ruins_ceiling_shaft_31")
spawn("eob_ruins_ceiling_shaft", 21,27,3, "eob_ruins_ceiling_shaft_32")
spawn("eob_ruins_ceiling_shaft", 22,27,2, "eob_ruins_ceiling_shaft_33")
spawn("eob_ruins_ceiling_shaft", 23,27,2, "eob_ruins_ceiling_shaft_34")
spawn("eob_ruins_ceiling_shaft", 29,27,2, "eob_ruins_ceiling_shaft_35")
spawn("eob_ruins_alcove", 2,28,1, "eob_ruins_alcove_54")
	:addItem(spawn("eob_dart_plus4_u"))
	:addItem(spawn("eob_dagger_u"))
spawn("eob_ruins_secret_button_tiny", 12,28,2, "eob_ruins_secret_button_tiny_6")
	:setActivateOnce(true)
	:addConnector("toggle", "script_entity_48", "destroyWall")
spawn("eob_ruins_ceiling_shaft", 15,28,3, "eob_ruins_ceiling_shaft_36")
spawn("eob_ruins_ceiling_shaft", 16,28,3, "eob_ruins_ceiling_shaft_37")
spawn("eob_ruins_ceiling_shaft", 17,28,0, "eob_ruins_ceiling_shaft_38")
spawn("eob_ruins_ceiling_shaft", 20,28,2, "eob_ruins_ceiling_shaft_39")
spawn("eob_ruins_ceiling_shaft", 21,28,2, "eob_ruins_ceiling_shaft_40")
spawn("eob_ruins_ceiling_shaft", 29,28,2, "eob_ruins_ceiling_shaft_41")
spawn("eob_ruins_alcove", 5,29,1, "eob_ruins_alcove_01")
	:addItem(spawn("eob_wand_magic_missile_3"))
	:addConnector("activate", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_ceiling_shaft", 17,29,2, "eob_ruins_ceiling_shaft_42")
spawn("eob_ruins_ceiling_shaft", 19,29,2, "eob_ruins_ceiling_shaft_43")
spawn("eob_ruins_ceiling_shaft", 20,29,2, "eob_ruins_ceiling_shaft_44")
spawn("eob_ruins_ceiling_shaft", 24,29,3, "eob_ruins_ceiling_shaft_45")
spawn("eob_ruins_ceiling_shaft", 25,29,3, "eob_ruins_ceiling_shaft_46")
spawn("eob_ruins_ceiling_shaft", 27,29,2, "eob_ruins_ceiling_shaft_47")
spawn("eob_ruins_ceiling_shaft", 28,29,3, "eob_ruins_ceiling_shaft_48")
spawn("eob_ruins_ceiling_shaft", 29,29,2, "eob_ruins_ceiling_shaft_49")
spawn("eob_ruins_wall_text", 5,30,1, "eob_ruins_wall_text_21")
	:setWallText("Silverware rack... be neat.")
spawn("eob_ruins_secret_button_tiny", 17,30,1, "eob_ruins_secret_button_tiny_8")
	:addConnector("toggle", "script_entity_47", "toggleWall")
spawn("eob_ruins_secret_button_tiny", 19,30,3, "eob_ruins_secret_button_tiny_7")
	:addConnector("toggle", "script_entity_47", "toggleWall")
spawn("eob_ruins_ceiling_shaft", 20,30,2, "eob_ruins_ceiling_shaft_50")
spawn("eob_ruins_ceiling_shaft", 21,30,2, "eob_ruins_ceiling_shaft_51")
spawn("eob_egg_10_u", 16,5,3, "eob_egg_10_u_2")
spawn("eob_key_dwarven_u", 1,6,0, "eob_key_dwarven_u_6")
spawn("eob_key_dwarven_u", 7,6,0, "eob_key_dwarven_u_7")
spawn("eob_mage_scroll_hold_person", 27,15,2, "eob_mage_scroll_hold_person_1")
spawn("eob_stone_ring_u", 17,11,3, "eob_stone_ring_u_1")
spawn("eob_rock_u", 13,13,0, "eob_rock_u_15")
spawn("eob_cleric_scroll_dispel_magic", 14,20,3, "eob_cleric_scroll_dispel_magic_1")
spawn("eob_cleric_scroll_cure_serious_wnds", 14,20,1, "eob_cleric_scroll_cure_serious_wnds_1")
spawn("eob_key_u", 19,22,0, "eob_key_u_3")
spawn("eob_shield_dwarven_u", 9,25,0, "eob_shield_dwarven_u_1")
spawn("eob_rock_u", 17,25,0, "eob_rock_u_16")
spawn("eob_mace_plus3", 12,28,2, "eob_mace_plus3_1")
spawn("eob_bracers_u", 26,28,0, "eob_bracers_u_1")
spawn("eob_ring2_u", 15,29,0, "eob_ring2_u_2")
spawn("eob_cleric_scroll_flame_blade", 22,30,1, "eob_cleric_scroll_flame_blade_2")
	:setScrollText("")
spawn("eob_halberd_chieftain_u", 14,18,1, "eob_halberd_chieftain_u_1")
spawn("eob_potion_extra_healing", 27,15,1, "eob_potion_extra_healing_3")
spawn("eob_kenku1_1", 15,15,0, "eob_kenku1_1_1")
spawn("eob_kenku1_2", 15,5,0, "eob_kenku1_2_1")
spawn("eob_kenku1_1", 13,3,0, "eob_kenku1_1_2")
spawn("eob_kenku1_2", 14,7,0, "eob_kenku1_2_2")
spawn("eob_kenku1_1", 23,7,0, "eob_kenku1_1_3")
spawn("eob_kenku1_2", 20,12,0, "eob_kenku1_2_3")
spawn("eob_kenku1_2", 3,18,0, "eob_kenku1_2_4")
spawn("eob_kenku1_2", 30,4,0, "eob_kenku1_2_5")
spawn("eob_kenku1_2", 21,5,0, "eob_kenku1_2_6")
spawn("eob_kenku1_1", 13,5,0, "eob_kenku1_1_4")
spawn("eob_kenku2_1_group", 13,17,0, "eob_kenku2_1_group_1")
spawn("eob_kenku1_1", 19,5,0, "eob_kenku1_1_5")
spawn("eob_kenku1_1", 16,8,0, "eob_kenku1_1_6")
spawn("eob_kenku1_2", 16,13,0, "eob_kenku1_2_7")
spawn("eob_kenku1_2", 5,15,0, "eob_kenku1_2_8")
spawn("eob_kenku1_2", 16,4,0, "eob_kenku1_2_9")
spawn("eob_kenku1_1", 21,3,0, "eob_kenku1_1_7")
spawn("eob_kenku1_1", 30,7,0, "eob_kenku1_1_8")
spawn("eob_kenku1_1", 30,24,0, "eob_kenku1_1_9")
spawn("eob_kenku1_2", 30,1,0, "eob_kenku1_2_10")
spawn("eob_kenku1_2", 9,14,0, "eob_kenku1_2_11")
spawn("eob_kenku1_2", 14,28,0, "eob_kenku1_2_12")
spawn("eob_kenku1_1", 11,11,0, "eob_kenku1_1_10")
spawn("eob_kenku1_1", 19,30,0, "eob_kenku1_1_11")
spawn("eob_kenku1_2", 12,5,0, "eob_kenku1_2_13")
spawn("eob_kenku1_1", 17,4,0, "eob_kenku1_1_12")
spawn("eob_kenku1_1", 11,5,0, "eob_kenku1_1_13")
spawn("script_entity", 26,3,3, "script_entity_41")
	:setSource("-- open door if there is at least one melee weapon on each pressure plate\
-- cant figure out how to do the 'melee' part\
-- so for now its fixed on eob_axe (which are provided)\
function openOnWeapon()\
\
\9northplate = 0\
\9southplate = 0\
\
\9-- is there weapon type item on north plate?\
\9for e in entitiesAt(6,25,3) \
\9do\
\9\9--if e.name == \"eob_axe\" \
\9\9if string.find(e.name,\"axe\") ~= nil \
\9\9or string.find(e.name,\"dagger\") ~= nil\
\9\9or string.find(e.name,\"sword\") ~= nil\
\9\9or string.find(e.name,\"mace\") ~= nil\
\9\9or string.find(e.name,\"staff\") ~= nil\
\9\9then northplate = 1\
\9\9end\
\9end\
\9\
\
\9-- is there weapon type item on south plate?\
\9for e in entitiesAt(6,25,5) \
\9do\
\9\9--if e.name == \"eob_axe\"\
\9\9if string.find(e.name,\"axe\") ~= nil \
\9\9or string.find(e.name,\"dagger\") ~= nil\
\9\9or string.find(e.name,\"sword\") ~= nil\
\9\9or string.find(e.name,\"mace\") ~= nil\
\9\9or string.find(e.name,\"staff\") ~= nil\
\9\9then southplate = 1\
\9\9end\
\
\9end\
\
\
\
\9-- if both has weapon type items open door\
\9--hudPrint(\"north  enabled: \" .. northplate .. \"\")\
\9--hudPrint(\"south  enabled: \" .. southplate .. \"\")\
\
\9if northplate == 1 and southplate == 1 \
\9then\
\9\9eob_ruins_door_stone_one_4:open()\
\9end\
\
end")
spawn("script_entity", 29,13,1, "script_entity_44")
	:setSource("--\9one time trigger\
--\9shoots 2 darts from each alcove on sides (4 altogether)\
\
--\9shootProjectile(projName,level,x,y,dir,speed,gravity,velocityUp,offsetX,offsetY,offsetZ,attackPower,ignoreEntity,fragile,championOrdinal)\
--\9projectile: the name of the item to shoot.\
--\9level,x,y: the initial position of the projectile in a level.\
--\9direction: the shooting direction (0=north, 1=east, 2=south, 3=west).\
--\9speed: the speed of the projectile (metres/second). Typical values around 10.\
--\9gravity: the gravity force in y-direction. Typical values around 0.\
--\9velocityUp: the initial velocity in y-direction. Typically set to 0.\
--\9offsetX,offsetY,offsetZ: 3D offset in world space from the center of cell.\
--\9attackPower: attack power of the projectile.\
--\9ignoreEntity: the entity to be ignored for collisions (or nil if the entity should not ignore any collisions).\
--\9fragile: a boolean flag, if set the projectile is destroyed on impact.\
--\9championOrdinal: a champion ordinal number, used for dealing experience points. This parameter is optional.\
\
\
function shootDarts5()\
\
\9shootProjectile(\"eob_dart\",6,28,13,1,10,0,0,0.7,0.7,-0.7,25,nil,false,false)\
\9shootProjectile(\"eob_dart\",6,28,13,1,10,0,0,0.7,0.7, 0.7,25,nil,false,false)\
\9\
\9shootProjectile(\"eob_dart\",6,30,13,3,10,0,0,0.7,0.7,-0.7,25,nil,false,false)\
\9shootProjectile(\"eob_dart\",6,30,13,3,10,0,0,0.7,0.7, 0.7,25,nil,false,false)\
\
\
end\
")
spawn("script_entity", 18,21,1, "script_entity_45")
	:setSource("-- door openable only from east with button\
-- golden key nerby opens the door on 26,7")
spawn("eob_teleporter", 8,12,2, "eob_teleporter_34")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(7,6,2,6)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_teleporter", 2,12,2, "eob_teleporter_35")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,6,2,6)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_dwarven_wall_cube", 18,29,2, "eob_dwarven_wall_cube_15")
spawn("script_entity", 18,29,3, "script_entity_47")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
\
function toggleWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\
\9\9-- if we dont find any wall cube, spawn one\9\9\
\9\9if wallexists == 0\
\9\9  then\
\9\9  spawn(\"eob_dwarven_wall_cube\",self.level,self.x,self.y,0)\
\9\9  playSound(\"pressure_plate_pressed\")\9\9\
\9\9else\
\9\9\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9\9\9x:destroy()\
\9\9\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9\9end\
\9\9\9end\9\9\
\9\9end\
end\
\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end\
\
function createWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\9\9-- if we dont find any wall cube, spawn one\9\9\
\9\9if wallexists == 0\
\9\9  then\
\9\9  spawn(\"eob_dwarven_wall_cube\",self.level,self.x,self.y,0)\
\9\9  playSound(\"pressure_plate_pressed\")\9\9\
\9\9end\
\
end\
\
\
")
spawn("eob_kenku1_2", 17,1,3, "eob_kenku1_2_15")
spawn("eob_dwarven_wall_cube", 13,28,2, "eob_dwarven_wall_cube_16")
spawn("script_entity", 13,28,3, "script_entity_48")
	:setSource("-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
\
function toggleWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\
\9\9-- if we dont find any wall cube, spawn one\9\9\
\9\9if wallexists == 0\
\9\9  then\
\9\9  spawn(\"eob_dwarven_wall_cube\",self.level,self.x,self.y,0)\
\9\9  playSound(\"pressure_plate_pressed\")\9\9\
\9\9else\
\9\9\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9\9\9x:destroy()\
\9\9\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9\9end\
\9\9\9end\9\9\
\9\9end\
end\
\
function destroyWall()\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9x:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9return true\
\9\9end\
\9end\
\9return false\
end\
\
function createWall()\
\9-- assign 1 to variable wallexits if we find wall cube \
\9-- at location self\
\9local wallexists = 0\
\9for x in entitiesAt(self.level,self.x,self.y) do\
\9\9if x.name == \"eob_dwarven_wall_cube\" then\
\9\9\9wallexists = 1\
\9\9end\
\9end\
\9\9-- if we dont find any wall cube, spawn one\9\9\
\9\9if wallexists == 0\
\9\9  then\
\9\9  spawn(\"eob_dwarven_wall_cube\",self.level,self.x,self.y,0)\
\9\9  playSound(\"pressure_plate_pressed\")\9\9\
\9\9end\
\
end\
\
\
")
spawn("script_entity", 5,28,0, "script_entity_46")
	:setSource("-- original accepts darts, throwing daggers. but not arrows\
-- accepts any object which name that starts with \"eob_dagger\" or \"eob_dart\"\
-- if you place eob_dart into the alcove\
-- destory the cube and alcove and eob_dart\
\
\
function destroyWallForDart(alcove, item)\
\9--hudPrint(\"\" .. alcove.x .. \" \" ..alcove.y ..\"\")\
\9for item in alcove:containedItems()\
\9do\
\9--hudPrint(\"Inserted: \" .. item.name .. \"\")\
\
\9\9-- accept any kind of eob_dart or eob_dagger\
\9\9-- if string.find(item.name,\"eob_dart\") ~= nil or string.find(item.name,\"eob_dagger\") ~= nil\
\
\9\9-- only plain eob_dart or eob_dagger\
\9\9if item.name == \"eob_dart\" or item.name == \"eob_dagger\"\
\9\9then\
\9\9\
\9\9\9-- destroy the dart inserted \
\9\9\9-- will destory also all other items inserted before the dart (as per original)\
\9\9\9-- item:destroy()\
\
\9\9\9-- or if more items in stack, lower the stack by 1\
\9\9\9if item:getStackSize()>1 \
\9\9\9then\
\9\9\9\9--either we can pretend the alcove and wall disappeared\
\9\9\9\9--and the rest of the stack of darts fell on the ground\
\9\9\9\9spawn(item.name, party.level, party.x, party.y, party.facing):setStackSize(item:getStackSize()-1)\
\
\9\9\9\9--or we put the items back to cursor to make it a bit easier for players\
\9\9\9\9--cant make this setMouseItem work \
\9\9\9\9--setMouseItem(spawn(item.name):setStackSize(item:getStackSize()-1)\
\
\9\9\
\9\9\9end\
\9\9\9-- either case, destory items inserted to alcove\
\9\9\9item:destroy()\
\
\9\9\9-- destory the alcove into which we inserted dart\
\9\9\9alcove:destroy()\
\9\9\9\
\9\
\9\9\9-- now also destroy the blocking wall cube and the alcove itself\
\9\9\9-- but cube is not on the same square as alcove\
\9\9\9-- we need to calculate the cube possition based on party heading\
\9\9\9local x\
\9\9\9local y\
\9\9\9if party.facing == 0  --north\
\9\9\9then \
\9\9\9\9x = party.x \
\9\9\9\9y = party.y - 1\
\9\9\9elseif party.facing == 1 --east\
\9\9\9then\
\9\9\9\9x = party.x + 1\
\9\9\9\9y = party.y\
\9\9\9elseif party.facing == 2 --south\
\9\9\9then\
\9\9\9\9x = party.x\
\9\9\9\9y = party.y + 1\
\9\9\9elseif party.facing == 3 --west\
\9\9\9then\
\9\9\9\9x = party.x - 1\
\9\9\9\9y = party.y \
\9\9\9end\
\
\9\9\9-- also destroy alcoves that are now impossible to use\
\9\9\9-- those that leads 'into' the cube we are about to destroy\
\9\9\9-- these alcoves can be on north, east, south or west square from cube\
\
\9\9\9for alcove in entitiesAt(party.level,x,y-1)\9\9-- north of cube, facing south\
\9\9\9do\
\9\9\9\9if alcove.name == \"eob_ruins_alcove\" and alcove.facing == 2 \
\9\9\9\9then\
\9\9\9\9\9alcove:destroy()\9\9\9\9\9\
\9\9\9\9end\
\9\9\9end\
\9\9\9for alcove in entitiesAt(party.level,x+1,y)\9\9-- east of cube, facing west\
\9\9\9do\
\9\9\9\9if alcove.name == \"eob_ruins_alcove\"  and alcove.facing == 3\
\9\9\9\9then\
\9\9\9\9\9alcove:destroy()\9\9\9\9\9\
\9\9\9\9end\
\9\9\9end\
\9\9\9for alcove in entitiesAt(party.level,x,y+1)\9\9-- south of cube, facing north\
\9\9\9do\
\9\9\9\9if alcove.name == \"eob_ruins_alcove\"  and alcove.facing == 0 \
\9\9\9\9then\
\9\9\9\9\9alcove:destroy()\9\9\9\9\9\
\9\9\9\9end\
\9\9\9end\
\9\9\9for alcove in entitiesAt(party.level,x-1,y)\9\9-- west of cube, facing east\
\9\9\9do\
\9\9\9\9if alcove.name == \"eob_ruins_alcove\"  and alcove.facing == 1 \
\9\9\9\9then\
\9\9\9\9\9alcove:destroy()\9\9\9\9\9\
\9\9\9\9end\
\9\9\9end\9\9\9\
\
\9\9\9-- finaly destroy the cube itself\
\9\9\9for cube in entitiesAt(party.level,x,y) \
\9\9\9do\
\9\9\9\9if cube.name == \"eob_dwarven_wall_cube_invisible\" then\
\9\9\9\9\9--hudPrint(\"dart inserted, destroying wall on LVL6 x:\" .. x .. \" y: \" .. y .. \"\")\
\9\9\9\9\9cube:destroy()\9\9\9\9\9\
\9\9\9\9\9playSound(\"pressure_plate_released\")\9\9\9\
\9\9\9\9\9return true\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\9\9\
end\
")
spawn("eob_dwarven_wall_cube_invisible", 9,27,1, "eob_dwarven_wall_cube_17")
spawn("eob_dwarven_wall_cube_invisible", 9,26,2, "eob_dwarven_wall_cube_invisible3")
spawn("eob_dwarven_wall_cube_invisible", 10,26,2, "eob_dwarven_wall_cube_invisible4")
spawn("eob_dwarven_wall_cube_invisible", 11,26,3, "eob_dwarven_wall_cube_invisible5")
spawn("eob_dwarven_wall_cube_invisible", 11,25,3, "eob_dwarven_wall_cube_invisible6")
spawn("eob_dwarven_wall_cube_invisible", 11,24,3, "eob_dwarven_wall_cube_invisible7")
spawn("eob_dwarven_wall_cube_invisible", 11,23,2, "eob_dwarven_wall_cube_invisible8")
spawn("eob_dwarven_wall_cube_invisible", 11,22,2, "eob_dwarven_wall_cube_invisible9")
spawn("eob_dwarven_wall_cube_invisible", 12,22,3, "eob_dwarven_wall_cube_30")
spawn("eob_dwarven_wall_cube_invisible", 11,27,2, "eob_dwarven_wall_cube_31")
spawn("eob_dwarven_wall_cube_invisible", 11,28,2, "eob_dwarven_wall_cube_32")
spawn("eob_dwarven_wall_cube_invisible", 10,28,2, "eob_dwarven_wall_cube_33")
spawn("eob_dwarven_wall_cube_invisible", 10,29,1, "eob_dwarven_wall_cube_34")
spawn("eob_dwarven_wall_cube_invisible", 11,29,2, "eob_dwarven_wall_cube_35")
spawn("eob_dwarven_wall_cube_invisible", 11,30,3, "eob_dwarven_wall_cube_36")
spawn("eob_dwarven_wall_cube_invisible", 10,30,1, "eob_dwarven_wall_cube_37")
spawn("eob_dwarven_wall_cube_invisible", 9,30,1, "eob_dwarven_wall_cube_38")
spawn("eob_ruins_wall_text", 8,29,2, "eob_ruins_wall_text_23")
	:setWallText("Dart rack.")
spawn("eob_dwarven_wall_cube_invisible", 6,29,1, "eob_dwarven_wall_cube_14")
spawn("eob_ruins_alcove", 6,29,1, "eob_ruins_alcove_12")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_dwarven_wall_cube_invisible", 7,29,1, "eob_dwarven_wall_cube_invisible0")
spawn("eob_ruins_alcove", 7,29,1, "eob_ruins_alcove_14")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_dwarven_wall_cube_invisible", 8,29,1, "eob_dwarven_wall_cube_19")
spawn("eob_ruins_alcove", 8,29,1, "eob_ruins_alcove_13")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_dwarven_wall_cube_invisible", 9,29,1, "eob_dwarven_wall_cube_invisible1")
spawn("eob_ruins_alcove", 9,29,1, "eob_ruins_alcove_11")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,29,2, "eob_ruins_alcove_15")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_dwarven_wall_cube_invisible", 10,27,1, "eob_dwarven_wall_cube_18")
spawn("eob_ruins_alcove", 10,27,0, "eob_ruins_alcove_18")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,27,2, "eob_ruins_alcove_16")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,27,1, "eob_ruins_alcove_19")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_dwarven_wall_cube_invisible", 9,28,1, "eob_dwarven_wall_cube_invisible2")
spawn("eob_ruins_alcove", 9,28,0, "eob_ruins_alcove_21")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,28,2, "eob_ruins_alcove_9")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,28,1, "eob_ruins_alcove_17")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,29,0, "eob_ruins_alcove_20")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,29,1, "eob_ruins_alcove_29")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,29,1, "eob_ruins_alcove_10")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,29,0, "eob_ruins_alcove_26")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,29,2, "eob_ruins_alcove_27")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,28,1, "eob_ruins_alcove_33")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,28,1, "eob_ruins_alcove_28")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,28,0, "eob_ruins_alcove_30")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,28,2, "eob_ruins_alcove_31")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,27,1, "eob_ruins_alcove_37")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,27,1, "eob_ruins_alcove_32")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,27,0, "eob_ruins_alcove_34")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,27,2, "eob_ruins_alcove_35")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,28,1, "eob_ruins_alcove_36")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,28,0, "eob_ruins_alcove_38")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,28,2, "eob_ruins_alcove_39")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,27,1, "eob_ruins_alcove_43")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,27,0, "eob_ruins_alcove_23")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,27,2, "eob_ruins_alcove_40")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,26,3, "eob_ruins_alcove_46")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,26,0, "eob_ruins_alcove_42")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,26,2, "eob_ruins_alcove_44")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,25,0, "eob_ruins_alcove_45")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,25,2, "eob_ruins_alcove_47")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,24,0, "eob_ruins_alcove_48")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,24,2, "eob_ruins_alcove_50")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,23,0, "eob_ruins_alcove_51")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,23,2, "eob_ruins_alcove_53")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,30,0, "eob_ruins_alcove_55")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,30,1, "eob_ruins_alcove_59")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,30,3, "eob_ruins_alcove_65")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,30,0, "eob_ruins_alcove_60")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,30,1, "eob_ruins_alcove_63")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,30,3, "eob_ruins_alcove_69")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,30,0, "eob_ruins_alcove_64")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,29,3, "eob_ruins_alcove_73")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,29,0, "eob_ruins_alcove_68")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,29,2, "eob_ruins_alcove_70")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,26,2, "eob_ruins_alcove_74")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,26,1, "eob_ruins_alcove_75")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,26,3, "eob_ruins_alcove_81")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,26,2, "eob_ruins_alcove_78")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,26,1, "eob_ruins_alcove_79")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,22,2, "eob_ruins_alcove_82")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,22,1, "eob_ruins_alcove_83")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 12,22,3, "eob_ruins_alcove_89")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,28,3, "eob_ruins_alcove_49")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,27,3, "eob_ruins_alcove_52")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,28,1, "eob_ruins_alcove_56")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 9,27,1, "eob_ruins_alcove_58")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,28,3, "eob_ruins_alcove_61")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 10,27,3, "eob_ruins_alcove_62")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,26,2, "eob_ruins_alcove_66")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("eob_ruins_alcove", 11,27,2, "eob_ruins_alcove_24")
	:addConnector("any", "script_entity_46", "destroyWallForDart")
spawn("script_entity", 4,24,1, "script_entity_49")
	:setSource("-- on stepping on plates shoot darts twice for first 3, once for last plate\
--\9shootProjectile(projName,level,x,y,dir,speed,gravity,velocityUp,offsetX,offsetY,offsetZ,attackPower,ignoreEntity,fragile,championOrdinal)\
--\9projectile: the name of the item to shoot.\
--\9level,x,y: the initial position of the projectile in a level.\
--\9direction: the shooting direction (0=north, 1=east, 2=south, 3=west).\
--\9speed: the speed of the projectile (metres/second). Typical values around 10.\
--\9gravity: the gravity force in y-direction. Typical values around 0.\
--\9velocityUp: the initial velocity in y-direction. Typically set to 0.\
--\9offsetX,offsetY,offsetZ: 3D offset in world space from the center of cell.\
--\9attackPower: attack power of the projectile.\
--\9ignoreEntity: the entity to be ignored for collisions (or nil if the entity should not ignore any collisions).\
--\9fragile: a boolean flag, if set the projectile is destroyed on impact.\
--\9championOrdinal: a champion ordinal number, used for dealing experience points. This parameter is optional.\
\
\
function shootDarts1()\
--hudPrint(\"\".. counter_4:getValue() .. \"\")\
if counter_4:getValue() > 0 \
\9then\
\9\9shootProjectile(\"eob_dart\",6,2,23,1,10,0,0,0,0.7,-0.7,10,nil,false,false)\
\9\9shootProjectile(\"eob_dart\",6,2,23,1,10,0,0,0,0.7, 0.7,10,nil,false,false)\
\9\9counter_4:decrement()\
\9end\
end\
\
function shootDarts2()\
--hudPrint(\"\".. counter_5:getValue() .. \"\")\
\9if counter_5:getValue() > 0 \
\9then\
\9\9shootProjectile(\"eob_dart\",6,2,25,0,10,0,0,-0.7,0.7,0,10,nil,false,false)\
\9\9shootProjectile(\"eob_dart\",6,2,25,0,10,0,0, 0.7,0.7,0,10,nil,false,false)\
\9\9counter_5:decrement()\
\9end\
end\
\
function shootDarts3()\
--hudPrint(\"\".. counter_6:getValue() .. \"\")\
\9if counter_6:getValue() > 0 \
\9then\
\9\9shootProjectile(\"eob_dart\",6,7,25,3,10,0,0,0,0.7,-0.7,10,nil,false,false)\
\9\9shootProjectile(\"eob_dart\",6,7,25,3,10,0,0,0,0.7, 0.7,10,nil,false,false)\
\9\9counter_6:decrement()\
\9end\
end\
\
function shootDarts4()\
--hudPrint(\"\".. counter_7:getValue() .. \"\")\
\9if counter_7:getValue() > 0 \
\9then\
\9\9shootProjectile(\"eob_dart\",6,7,25,3,10,0,0,0,0.7,-0.7,10,nil,false,false)\
\9\9shootProjectile(\"eob_dart\",6,7,25,3,10,0,0,0,0.7, 0.7,10,nil,false,false)\
\9\9counter_7:decrement()\
\9end\
end")
spawn("counter", 8,23,2, "counter_4")
	:setInitialValue(2)
	:setValue(2)
spawn("counter", 1,23,0, "counter_5")
	:setInitialValue(2)
	:setValue(2)
spawn("counter", 1,25,2, "counter_6")
	:setInitialValue(2)
	:setValue(2)
spawn("eob_ruins_alcove", 11,27,0, "eob_ruins_alcove_25")
	:addConnector("activate", "script_entity_46", "destroyWallForDart")
spawn("counter", 8,25,2, "counter_7")
	:setInitialValue(1)
	:setValue(1)
spawn("script_entity", 4,9,2, "script_entity_50")
	:setSource("-- shoot darts once (plate is on activate once)\
-- as per original south most wont shoot any darts\
--\9shootProjectile(projName,level,x,y,dir,speed,gravity,velocityUp,offsetX,offsetY,offsetZ,attackPower,ignoreEntity,fragile,championOrdinal)\
--\9projectile: the name of the item to shoot.\
--\9level,x,y: the initial position of the projectile in a level.\
--\9direction: the shooting direction (0=north, 1=east, 2=south, 3=west).\
--\9speed: the speed of the projectile (metres/second). Typical values around 10.\
--\9gravity: the gravity force in y-direction. Typical values around 0.\
--\9velocityUp: the initial velocity in y-direction. Typically set to 0.\
--\9offsetX,offsetY,offsetZ: 3D offset in world space from the center of cell.\
--\9attackPower: attack power of the projectile.\
--\9ignoreEntity: the entity to be ignored for collisions (or nil if the entity should not ignore any collisions).\
--\9fragile: a boolean flag, if set the projectile is destroyed on impact.\
--\9championOrdinal: a champion ordinal number, used for dealing experience points. This parameter is optional.\
\
function shootDarts5()\
\
\9shootProjectile(\"eob_dart\",6,4,10,1,10,0,0,-0.7,0.7,0,10,nil,false,false)\
\9shootProjectile(\"eob_dart\",6,6,10,3,10,0,0, 0.7,0.7,0,10,nil,false,false)\
\9shootProjectile(\"eob_dart\",6,6,11,3,10,0,0, 0.7,0.7,0,10,nil,false,false)\
\9shootProjectile(\"eob_dart\",6,4,11,1,10,0,0, 0.7,0.7,0,10,nil,false,false)\
\
\
end\
")
spawn("eob_ruins_button", 7,6,3, "eob_ruins_button_9")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_ruins_door_stone_one_6", "open")
spawn("eob_ruins_button", 1,6,1, "eob_ruins_button_10")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_ruins_door_stone_one_5", "open")
spawn("eob_ruins_pit", 2,12,2, "eob_ruins_pit_4")
	:addTrapDoor()
	:setPitState("open")
spawn("eob_ruins_pit", 8,12,2, "eob_ruins_pit_7")
	:addTrapDoor()
	:setPitState("open")
spawn("script_entity", 4,19,1, "script_entity_51")
	:setSource("-- any dwarven key works with these locks\
\
-- function tries to destroy a wall at position specified \
-- function returns true if destruction was successful or false,\
-- if there was no eob_dwarven_wall_cube there\
\
function firstKey()\
\9-- remove the cube\
\9for e in entitiesAt(6,4,18) \
\9do\
\9\9if e.name == \"eob_dwarven_wall_cube\" \
\9\9then\
\9\9\9e:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\
\9\9end\
\9end\
\9-- remove the lock\
\9for e in entitiesAt(6,4,17) \
\9do\
\9\9if e.name == \"eob_ruins_ornate_lock\" \
\9\9then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\
\9-- spawn new lock \
\9spawn(\"eob_ruins_ornate_lock\",6,6,19,3):setOpenedBy(\"eob_key_dwarven_u\"):addConnector(\"activate\",\"script_entity_51\",\"secondKey\")\
\9\9\
end\
\
\
\
function secondKey()\
\9-- remove the cube\
\9for e in entitiesAt(6,5,19) \
\9do\
\9\9if e.name == \"eob_dwarven_wall_cube\" \
\9\9then\
\9\9\9e:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\
\9\9end\
\9end\
\9-- remove the lock\
\9for e in entitiesAt(6,6,19) \
\9do\
\9\9if e.name == \"eob_ruins_ornate_lock\" \
\9\9then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\
\9-- spawn eob_dwarven_wall_cube\
\9spawn(\"eob_dwarven_wall_cube\",6,4,18,0)\
\9\
\9-- spawn new lock \
\9spawn(\"eob_ruins_ornate_lock\",6,4,21,0):setOpenedBy(\"eob_key_dwarven_u\"):addConnector(\"activate\",\"script_entity_51\",\"thirdKey\")\
\
end\
\
\
function thirdKey()\
\9-- remove the cube\
\9for e in entitiesAt(6,4,20) \
\9do\
\9\9if e.name == \"eob_dwarven_wall_cube\" \
\9\9then\
\9\9\9e:destroy()\
\9\9\9playSound(\"pressure_plate_released\")\9\
\9\9end\
\9end\
\9-- remove the lock\
\9for e in entitiesAt(6,4,21) \
\9do\
\9\9if e.name == \"eob_ruins_ornate_lock\" \
\9\9then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\
\9-- spawn eob_dwarven_wall_cube\
\9spawn(\"eob_dwarven_wall_cube\",6,5,19,0)\
\9\
\
\
end")
spawn("eob_dwarven_wall_cube", 4,18,3, "eob_dwarven_wall_cube_39")
spawn("eob_dwarven_wall_cube", 5,19,3, "eob_dwarven_wall_cube_40")
spawn("eob_dwarven_wall_cube", 4,20,2, "eob_dwarven_wall_cube_41")
spawn("secret", 15,17,2, "secret_special_quest_6")
spawn("script_entity", 15,18,0, "script_entity_52")
	:setSource("-- secret special quest for level 6\
-- put all(10) kengu eggs into the nest room\
\
function specialQuest6()\
\
\9local eggcount = 0\
\
\9-- activate only once, not when quest was already done\
\9if counter_special_quest_6:getValue() == 0 \
\9then \
\
\9-- two ways how to trigger the special quest\
\9-- how many eggs are there in the room ?\
\9for e in entitiesAt(6,13,17)\
\9do\
\9\9if e.name == \"eob_egg_10_u\" \
\9\9then\
\9\9eggcount = eggcount + 1 \
\9\9\9hudPrint(\"\".. e.id ..\" \" .. eggcount .. \"\")\
\9\9end\
\9end\
\
\9-- are all the eggs on map6 in the room?\
\9-- disadvantage: might misbehave if some eggs are taken away from level 6\
\9-- advantage:\9\9we might use more then 10 eggs (change to original though)\
--[[\9for e in allEntities(6)\
\9do\
\9\9if e.name == \"eob_egg_10_u\" and e.level == 6 and e.x == 13 and e.y == 17\
\9\9then\
\9\9eggcount = eggcount + 1\
\9\9\9hudPrint(\"\".. e.id ..\" \" .. eggcount .. \"\")\
\9\9end\
\9end\
]]\9\
\9\
\9-- if there is at least 10 eggs in the room \
\9-- set counter_special_quest_6 to 1, activate secret and destory walls\
\9\
\9if eggcount >= 10\
\9then \
\9\9counter_special_quest_6:setValue(1)\
\9\9secret_special_quest_6:activate()\
\9\9eob_dwarven_wall_cube_sp6_1:destroy()\
\9\9eob_dwarven_wall_cube_sp6_2:destroy()\
\9\9eob_dwarven_wall_cube_sp6_3:destroy()\
\9\9eob_dwarven_wall_cube_sp6_4:destroy()\
\9\9eob_dwarven_wall_cube_sp6_5:destroy()\
\9end\
\
\9end\9\9\
end\
")
spawn("counter", 15,16,1, "counter_special_quest_6")
spawn("script_entity", 2,6,1, "script_entity_53")
	:setSource("--damageTile(level, x, y, direction, elevation, flags, damageType, power)\
\
-- add damange on fall?")
spawn("pressure_plate_hidden", 13,16,1, "pressure_plate_hidden_95")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_52", "specialQuest6")
spawn("eob_egg_10_u", 29,8,2, "eob_egg_10_u_3")
spawn("eob_egg_10_u", 21,5,2, "eob_egg_10_u_4")
spawn("eob_egg_10_u", 19,5,2, "eob_egg_10_u_5")
spawn("eob_egg_10_u", 15,4,3, "eob_egg_10_u_6")
spawn("eob_egg_10_u", 15,5,2, "eob_egg_10_u_7")
spawn("eob_egg_10_u", 17,5,1, "eob_egg_10_u_9")
spawn("eob_egg_10_u", 17,5,3, "eob_egg_10_u_8")
spawn("eob_egg_10_u", 11,5,2, "eob_egg_10_u_10")
spawn("eob_egg_10_u", 17,18,1, "eob_egg_10_u_13")
spawn("pressure_plate_hidden", 13,17,1, "pressure_plate_hidden_97")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_52", "specialQuest6")
spawn("pressure_plate_hidden", 13,15,1, "pressure_plate_hidden_98")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_52", "specialQuest6")
spawn("pressure_plate_hidden", 13,14,1, "pressure_plate_hidden_99")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_52", "specialQuest6")
spawn("pressure_plate_hidden", 13,13,1, "pressure_plate_hidden_100")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_52", "specialQuest6")
spawn("eob_dwarven_wall_cube", 12,17,3, "eob_dwarven_wall_cube_sp6_1")
spawn("eob_dwarven_wall_cube", 12,18,0, "eob_dwarven_wall_cube_sp6_2")
spawn("eob_dwarven_wall_cube", 13,18,2, "eob_dwarven_wall_cube_sp6_3")
spawn("eob_dwarven_wall_cube", 14,18,0, "eob_dwarven_wall_cube_sp6_4")
spawn("eob_dwarven_wall_cube", 14,17,1, "eob_dwarven_wall_cube_sp6_5")
spawn("eob_teleporter", 5,6,2, "eob_teleporter_36")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(4,1,2,6)
spawn("eob_teleporter", 4,0,2, "eob_teleporter_37")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(5,7,2,6)
spawn("eob_ruins_button", 19,21,3, "eob_ruins_button_11")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_ruins_door_stone_one_9", "open")
spawn("secret", 9,25,1, "secret_5")
spawn("secret", 12,22,2, "secret_10")
spawn("secret", 15,10,2, "secret_11")
spawn("goromorg", 27,15,3, "goromorg_darkmage")
	:setAIState("guard")
	:addItem(spawn("eob_potion_extra_healing"))
spawn("eob_blocker", 26,15,2, "eob_blocker_darkmage")
spawn("eob_teleporter", 26,15,1, "eob_teleporter_darkmage")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(26,15,1,6)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("gw_event", 26,15,1, "gw_event_darkmage")
	:setSource("-- bad guy here, evil mage, likes to cast hold person\
\
\
-- name of the image to show\
image = \"mod_assets/textures/events/eob1-darkmage-cut.dds\"\
image_width = 170\
image_hieght = 190\
\
\
-- Defines states. Each entry must have exactly two columns:\
-- first is state, the second is description shown.\
-- Event will start from the first state on the list.\
-- There is also one special state called \"end\". Once moved\
-- to state \"end\", the whole event ends.\
\
\
states = {\
{ \"first\",\
--\9\"---------------------------------------------\"\9\9\
\9\"You interrupted a dark-robed figure. He's \9\9\\n\" ..\
\9\"startled at first, then sneers in recognition.\\n\\n\" ..\
\9\"\\\"Oh, you. Waterdeep's saviours of the week. \9\\n\" ..\
\9\"You don't realize how many other adventures \9\\n\" ..\
\9\"have been sent to find the truth about the \9\\n\" ..\
\9\"evils underground. Well, rented redeemers, \9\\n\" ..\
\9\"let me give you the benefit of my vast and \9\\n\" ..\
\9\"profound knowledge.\9\9\9\9\9\9\9\\n\" ..\
\9\"Xanathar has been undermining Waterdeep for years. When  \9\9\9\\n\" ..\
\9\"Waterdeep is sufficiently weakened, he will lead is minions  \9\9\\n\" ..\
\9\"in conquest of the unsuspecting city. The only way to stop \9\9\\n\" ..\
\9\"Xanathar is to kill him, and that would be virtually impossible \9\\n\" ..\
\9\"XXXXXXXXXXX                            without the wand of silvias.\9\\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"second\",\
--\9\"---------------------------------------------\"\9\9\
\9\"As I understand it, the dwarves have the \9\9\\n\" ..\
\9\"magical artifact, but they do not know what \9\\n\" ..\
\9\"they posses. The Drow know that the wand \9 \9\\n\" ..\
\9\"of silvias is poweful, but not of its use \9\9\\n\" ..\
\9\"against Xanathar.\\n \9\9\9\9\9\9\9\9\\n\" ..\
\9\"You see the wand is one of the few magic\9\9\\n\" ..\
\9\"items that can effect a beholder, becuase it\9\\n\" ..\
\9\"is made from a beholder's eyestalk. \9\9\9\\n\" ..\
\9\"Stupid Drow. They're supposed to be Xanathar's alies, but they \\n\" ..\
\9\"plan to finish off the dwarves, steal the wand, and use it to \9\\n\" ..\
\9\"raid the city. This would alert the lords of Waterdeep to the\9\\n\" ..\
\9\"immensity of the threat from below ground and delay Xanathar's \\n\" ..\
\9\"XXXXXXXXXXX                                  plans of conquest. \\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"third\",\
--\9\"---------------------------------------------\"\9\9\
\9\"So, I have to stop the drow and get the wand \9\\n\" ..\
\9\"of silvias for myself.\\n\9\9\9\9\9\9\\n\" ..\
\9\"You see my friends, I have no intention of\9\9\\n\" ..\
\9\"stopping Xanathar until he has completed the\9\\n\" ..\
\9\"conquest of Waterdeep. After the conquest,\9\9\\n\" ..\
\9\"Xanathar will be at his weakest. Only then \9\\n\" ..\
\9\"will I strike.\9\9\9\9\9\9\9\9\9\\n\" ..\
\9\"Xanathar will be at my mercy, and Waterdeep will be mine. \9\9\\n\" ..\
\9\"So, I certainly can't let you keep Xanathar from conquering \9\\n\" ..\
\9\"Waterdeep. \9\9\9\9\9\9\9\9\9\9\9\9\9\\n\" ..\
\9\"I need only get the wand of silvias... \9\9\9\9\9\9\\n\"\
--\9\"-----------------------------------------------------------------\"\
\9},\
{ \"fourth\",\
\9\"\\n\\nand, of course, kill you.\\\"\\n\"\
\9}\
}\
\9\
-- at the end of the monolog\
-- remove blocker = mage starts to attack\
-- create an invisible wall so that player cant run away right the way \
-- trying to simulate first unavoidable ice storm hit from original\
-- after given time by timer, remove the wall\
function attackParty()\
\9eob_blocker_darkmage:destroy()\
\9spawn(\"eob_dwarven_wall_cube_invisible\",6,26,14,0,\"eob_dwarven_wall_cube_invisible_darkmage\")\
\9spawn(\"timer\",6,26,14,0):setTimerInterval(1):addConnector(\"activate\",\"gw_event_darkmage\",\"removeWall\"):activate()\
\
end\
\
-- clear the timer and invisibile wall \
function removeWall()\
\9for e in entitiesAt(6,26,14)\
\9do\
\9\9if e.name == \"eob_dwarven_wall_cube_invisible\" or e.name == \"timer\"\
\9\9then \
\9\9\9e:destroy()\
\9\9end\
\9end\
end\
\
-- defines possible actions in each state. Each entry has\
-- 4 values. First is a state in which you can take that action. \
-- Second is a state name to which player will transition if that\
-- action is taken. Third is a text printed on the action button.\
-- Fourth defines function callback. It is optional. This function\
-- may not return anything and the state specified in value 2 will \
-- be used. The function may also return a name of the state, thus\
-- overriding default transition. One of the transitions must\
-- transit to \"end\" state (a dummy state that concludes the whole\
-- event).\
-- abort seems to be another key word to temporarily stop, but trigger again when stepped on\
-- while end means never trigger again\
\
\
actions = {\
\9{ \"first\",\9\9\"second\",\9\"More\"},\
\9{ \"second\",\9\9\"third\",\9\"More\"},\
\9{ \"third\",\9\9\"fourth\",\9\"More\"},\
\9{ \"fourth\",\9\9\"end\",\9\9\"More\", attackParty}\
}\
\
\
-- after this fight starts with unavoidable ice storm (which hit the guy too)\
-- after about 25dmg dealt is dead and drops potion of extra healing\
\9\
\
")

--- level 7 ---

mapName("Upper Reaches of The Drow")
setWallSet("prison")
playStream("assets/samples/music/prison_ambient.ogg")
mapDesc([[
################################
#......#...##........###########
#..###.#.#.##.#.####.#......####
#..###...#.#..#.#..#.#..###.####
######.###.#.#..#....#....#...##
##.....#.#...#..#..#.#..#.#.####
##.#.#.#.###########.#..#.#.####
#..#.#.#.............####.#....#
#..#.#.#.###.####.####..#..#.###
#..#.....#.#.###...##...#..#...#
#.##.###.#.#...#.#....####.#.###
#.#..#...#..####...###.....#...#
#.#..#...##......##....###..#..#
#.#######...####....###...#.####
#.#...###.#.########....#.#....#
#.#...###.#..#...########.###..#
#.#.......#..#.#.#...#.##.##.###
#.####.##.####...#.###.##..#.###
#......##...####...#.#.##....###
#.##......##########.#.######.##
#.##.#.##.##....#....#.#.......#
####.#.##...####..##.#.#.#.#.###
#....#..##.####..###.#.#.#.#.###
####.##.##.#....#.#.##.##.#.####
#..........#.####.#.#...#.#.####
#.######.###.#......#...#......#
#..#.#...#...####.#.#...#.#.####
##.#.#.###.######.#.#####.#.####
#..#.#.#...#...######...########
#.##.#.###.#...#######.#########
#........#.............#########
################################
]])
spawn("eob_drow_door", 24,2,3, "eob_drow_door_1")
	:addPullChain()
spawn("eob_drow_door", 19,4,1, "eob_drow_door_2")
	:addPullChain()
spawn("eob_drow_fireball_firing_pad", 25,4,0, "eob_drow_fireball_firing_pad_1")
spawn("eob_drow_door", 28,4,3, "eob_drow_door_3")
spawn("eob_drow_wall_text", 2,5,0, "eob_drow_wall_text_1")
	:setWallText("")
spawn("eob_drow_pressure_plate", 4,5,3, "eob_drow_pressure_plate_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_fireball_firing_pad", 4,5,0, "eob_drow_fireball_firing_pad_2")
spawn("eob_drow_pressure_plate", 6,5,2, "eob_drow_pressure_plate_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_door_one", 12,7,1, "eob_drow_door_one_1")
	:addPullChain()
spawn("eob_drow_door", 29,7,3, "eob_drow_door_4")
spawn("eob_drow_pit", 26,8,0, "eob_drow_pit_1")
spawn("eob_drow_pressure_plate", 4,9,2, "eob_drow_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pressure_plate", 6,9,2, "eob_drow_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_lock_spider", 12,9,1, "eob_drow_lock_spider_1")
spawn("eob_drow_pit", 26,9,2, "eob_drow_pit_2")
spawn("eob_drow_door", 29,9,3, "eob_drow_door_5")
spawn("eob_drow_door", 13,10,3, "eob_drow_door_6")
spawn("eob_drow_stairs_up", 14,10,1, "eob_drow_stairs_up_1")
spawn("eob_drow_button", 26,10,3, "eob_drow_button_1")
spawn("eob_drow_pressure_plate", 29,11,3, "eob_drow_pressure_plate_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_lock_spider", 11,13,1, "eob_drow_lock_spider_2")
spawn("eob_drow_door", 11,14,0, "eob_drow_door_7")
spawn("eob_drow_button", 20,14,0, "eob_drow_button_2")
spawn("eob_drow_alcove", 20,14,3, "eob_drow_alcove_1")
spawn("eob_drow_door", 21,14,1, "eob_drow_door_8")
	:addPullChain()
spawn("eob_drow_wall_text", 22,14,0, "eob_drow_wall_text_2")
	:setWallText("")
spawn("eob_drow_wall_text", 14,15,0, "eob_drow_wall_text_3")
	:setWallText("")
spawn("eob_drow_pit", 16,15,0, "eob_drow_pit_3")
spawn("eob_drow_stairs_down", 22,16,0, "eob_drow_stairs_down_1")
spawn("eob_drow_door", 25,16,2, "eob_drow_door_9")
	:addPullChain()
spawn("eob_drow_stairs_down", 28,16,0, "eob_drow_stairs_down_2")
spawn("eob_drow_wall_text", 22,17,3, "eob_drow_wall_text_4")
	:setWallText("")
spawn("eob_drow_stairs_down", 11,18,1, "eob_drow_stairs_down_3")
spawn("eob_drow_wall_text", 22,18,1, "eob_drow_wall_text_5")
	:setWallText("")
spawn("eob_drow_door_one", 27,18,1, "eob_drow_door_one_2")
	:addPullChain()
spawn("eob_drow_wall_text", 28,18,2, "eob_drow_wall_text_10")
	:setWallText("")
spawn("eob_drow_door_one", 20,19,2, "eob_drow_door_one_3")
	:addPullChain()
spawn("eob_drow_door_one", 22,19,0, "eob_drow_door_one_4")
	:addPullChain()
spawn("eob_drow_stairs_up", 1,20,2, "eob_drow_stairs_up_2")
spawn("eob_drow_stairs_down", 12,20,3, "eob_drow_stairs_down_4")
spawn("eob_drow_lock_spider", 13,20,2, "eob_drow_lock_spider_3")
spawn("eob_drow_door", 14,20,3, "eob_drow_door_10")
spawn("eob_drow_stairs_down", 15,20,1, "eob_drow_stairs_down_5")
spawn("eob_drow_wall_text", 18,20,0, "eob_drow_wall_text_6")
	:setWallText("")
spawn("eob_drow_wall_text", 24,20,0, "eob_drow_wall_text_7")
	:setWallText("")
spawn("eob_drow_lever", 25,20,2, "eob_drow_lever_1")
spawn("eob_drow_wall_text", 26,20,0, "eob_drow_wall_text_8")
	:setWallText("")
spawn("eob_drow_lever", 27,20,2, "eob_drow_lever_2")
spawn("eob_drow_wall_text", 28,20,0, "eob_drow_wall_text_9")
	:setWallText("")
spawn("eob_drow_lever", 29,20,2, "eob_drow_lever_3")
spawn("eob_teleporter", 30,20,1, "eob_teleporter_22")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_door", 20,21,0, "eob_drow_door_11")
spawn("eob_drow_door", 24,21,0, "eob_drow_door_12")
spawn("eob_drow_door", 26,21,0, "eob_drow_door_13")
spawn("eob_drow_door", 28,21,0, "eob_drow_door_14")
spawn("eob_teleporter", 20,22,2, "eob_teleporter_23")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_wall_text", 22,22,1, "eob_drow_wall_text_11")
	:setWallText("")
spawn("eob_drow_wall_text", 13,23,2, "eob_drow_wall_text_12")
	:setWallText("")
spawn("eob_drow_door_one", 22,23,0, "eob_drow_door_one_5")
	:addPullChain()
spawn("eob_drow_door", 17,24,2, "eob_drow_door_15")
spawn("eob_drow_door", 19,24,2, "eob_drow_door_16")
spawn("eob_drow_door", 25,24,2, "eob_drow_door_17")
spawn("eob_drow_door", 27,24,2, "eob_drow_door_18")
spawn("eob_drow_door", 15,25,1, "eob_drow_door_19")
spawn("eob_drow_button", 16,25,0, "eob_drow_button_3")
spawn("eob_drow_button", 18,25,2, "eob_drow_button_8")
spawn("eob_drow_button", 18,25,0, "eob_drow_button_4")
spawn("eob_drow_button", 20,25,0, "eob_drow_button_5")
spawn("eob_drow_button", 20,25,2, "eob_drow_button_9")
spawn("eob_drow_button", 24,25,2, "eob_drow_button_10")
spawn("eob_drow_button", 24,25,0, "eob_drow_button_6")
spawn("eob_drow_button", 26,25,2, "eob_drow_button_11")
spawn("eob_drow_button", 26,25,0, "eob_drow_button_7")
spawn("eob_drow_button", 28,25,2, "eob_drow_button_12")
spawn("eob_drow_door", 29,25,3, "eob_drow_door_20")
spawn("eob_drow_fireball_firing_pad", 4,26,3, "eob_drow_fireball_firing_pad_3")
spawn("eob_drow_fireball_firing_pad", 4,26,1, "eob_drow_fireball_firing_pad_4")
spawn("eob_drow_door", 17,26,0, "eob_drow_door_21")
spawn("eob_drow_door", 19,26,0, "eob_drow_door_22")
spawn("eob_drow_button", 22,26,2, "eob_drow_button_13")
spawn("eob_drow_door", 25,26,0, "eob_drow_door_23")
spawn("eob_drow_door", 27,26,0, "eob_drow_door_24")
spawn("eob_drow_fireball_firing_pad", 4,27,3, "eob_drow_fireball_firing_pad_5")
spawn("eob_drow_fireball_firing_pad", 4,27,1, "eob_drow_fireball_firing_pad_6")
spawn("eob_drow_door_one", 10,27,2, "eob_drow_door_one_6")
	:addPullChain()
spawn("eob_drow_fireball_firing_pad", 4,28,1, "eob_drow_fireball_firing_pad_8")
spawn("eob_drow_fireball_firing_pad", 4,28,3, "eob_drow_fireball_firing_pad_7")
spawn("eob_drow_stairs_down", 8,28,3, "eob_drow_stairs_down_6")
spawn("eob_drow_portal_necklace", 12,28,0, "eob_drow_portal_necklace_1")
spawn("eob_drow_portal_cross", 12,28,3, "eob_drow_portal_cross_1")
spawn("eob_drow_portal_dagger", 13,28,0, "eob_drow_portal_dagger_1")
spawn("eob_drow_portal_amulet", 14,28,0, "eob_drow_portal_amulet_1")
spawn("eob_drow_portal_gem", 14,28,1, "eob_drow_portal_gem_1")
spawn("eob_drow_door", 4,29,2, "eob_drow_door_25")
	:addPullChain()
spawn("eob_drow_door", 10,29,2, "eob_drow_door_26")
spawn("eob_drow_lock_ornate", 11,30,0, "eob_drow_lock_ornate_1")
spawn("eob_drow_alcove", 12,30,2, "eob_drow_alcove_2")
	:addItem(spawn("eob_rock_glowing_u"))
spawn("eob_drow_alcove", 13,30,2, "eob_drow_alcove_3")
	:addItem(spawn("eob_wand_u"))
spawn("eob_drow_alcove", 14,30,2, "eob_drow_alcove_4")
spawn("eob_drow_door", 15,30,1, "eob_drow_door_27")
spawn("eob_drow_lock_ornate", 16,30,2, "eob_drow_lock_ornate_2")
spawn("eob_drow_door", 17,30,1, "eob_drow_door_28")
spawn("eob_drow_lock_ornate", 18,30,2, "eob_drow_lock_ornate_3")
spawn("eob_drow_door", 19,30,1, "eob_drow_door_29")
spawn("eob_drow_lock_ornate", 20,30,2, "eob_drow_lock_ornate_4")
spawn("eob_drow_door", 21,30,1, "eob_drow_door_30")
spawn("eob_drow_lock_ornate", 22,30,2, "eob_drow_lock_ornate_5")
spawn("scroll_fireball", 2,3,3, "eob_mage_scroll_fireball_2")
spawn("eob_rations_iron_u", 17,5,2, "eob_rations_iron_u_9")
spawn("eob_medallion_of_adornment_u", 17,5,2, "eob_medallion_of_adornment_u_2")
spawn("eob_cleric_scroll_bless", 17,5,2, "eob_cleric_scroll_bless_1")
spawn("eob_arrow_u", 22,8,0, "eob_arrow_u_13")
spawn("eob_cleric_scroll_protect_evil10", 30,11,1, "eob_cleric_scroll_protect_evil10_1")
spawn("eob_cleric_scroll_remove_paralysis", 30,11,0, "eob_cleric_scroll_remove_paralysis_1")
spawn("eob_cleric_scroll_slow_poison", 3,12,2, "eob_cleric_scroll_slow_poison_2")
spawn("eob_cleric_scroll_create_food", 6,12,2, "eob_cleric_scroll_create_food_1")
spawn("eob_key_u", 30,12,3, "eob_key_u_4")
spawn("eob_medallion_luck_stone_u", 3,14,0, "eob_medallion_luck_stone_u_1")
spawn("eob_ring_protection2_u", 14,15,2, "eob_ring_protection2_u_1")
spawn("eob_arrow_u", 12,16,1, "eob_arrow_u_14")
spawn("eob_arrow_u", 12,16,2, "eob_arrow_u_15")
spawn("eob_arrow_u", 12,16,3, "eob_arrow_u_16")
spawn("eob_arrow_u", 7,22,1, "eob_arrow_u_17")
spawn("eob_short_sword_slicer", 24,22,3, "eob_short_sword_slicer_1")
spawn("eob_bracers_defense3_u", 26,22,3, "eob_bracers_defense3_u_1")
spawn("eob_ring2_wizardry_u", 28,22,3, "eob_ring2_wizardry_u_1")
spawn("eob_mage_scroll_fear", 17,23,0, "eob_mage_scroll_fear_1")
spawn("eob_key_jeweled_u", 19,23,0, "eob_key_jeweled_u_1")
spawn("eob_banded_armor_u", 25,23,0, "eob_banded_armor_u_1")
spawn("eob_arrow_u", 27,23,0, "eob_arrow_u_18")
spawn("eob_arrow_u", 27,23,1, "eob_arrow_u_19")
spawn("eob_arrow_u", 27,23,2, "eob_arrow_u_20")
spawn("eob_key_drow_u", 14,25,0, "eob_key_drow_u_1")
spawn("scroll_lightning_bolt", 30,25,1, "eob_mage_scroll_lightning_bolt_1")
spawn("eob_key_u", 4,26,1, "eob_key_u_5")
spawn("eob_potion_healing", 4,26,0, "eob_potion_healing_7")
spawn("eob_key_drow_u", 17,27,2, "eob_key_drow_u_2")
spawn("eob_cleric_scroll_cure_light_wnds", 19,27,3, "eob_cleric_scroll_cure_light_wnds_1")
spawn("eob_key_jeweled_u", 25,27,3, "eob_key_jeweled_u_2")
spawn("eob_key_ruby_u", 27,27,3, "eob_key_ruby_u_1")
spawn("eob_shield_u", 30,14,2, "eob_shield_u_5")
spawn("eob_bones_human_ileria_u", 29,4,1, "eob_bones_human_ileria_u_1")
spawn("eob_holy_symbol", 29,4,1, "eob_holy_symbol_1")
spawn("eob_skelwar2_1_group", 27,27,0, "eob_skelwar2_1_group_1")
spawn("eob_skelwar1_1", 19,27,0, "eob_skelwar1_1_1")
spawn("eob_skelwar1_2", 27,23,0, "eob_skelwar1_2_1")
spawn("eob_drowelf1_1", 3,16,0, "eob_drowelf1_1_1")
spawn("eob_skelwar1_1", 29,4,0, "eob_skelwar1_1_2")
spawn("eob_drowelf1_1", 3,15,0, "eob_drowelf1_1_2")
spawn("eob_skelwar2_1_group", 20,18,0, "eob_skelwar2_1_group_2")
spawn("eob_skelwar1_2", 30,9,0, "eob_skelwar1_2_2")
spawn("eob_drowelf1_1", 6,2,0, "eob_drowelf1_1_3")
spawn("eob_skelwar2_2_group", 30,25,0, "eob_skelwar2_2_group_1")
spawn("eob_skelwar1_1", 30,7,0, "eob_skelwar1_1_3")
spawn("eob_drowelf2_1_group", 2,2,0, "eob_drowelf2_1_group_1")
spawn("eob_skelwar1_2", 17,27,0, "eob_skelwar1_2_3")
spawn("eob_drowelf1_1", 7,11,0, "eob_drowelf1_1_4")
spawn("eob_drowelf1_1", 7,12,0, "eob_drowelf1_1_5")
spawn("eob_drowelf2_1_group", 1,18,0, "eob_drowelf2_1_group_2")
spawn("eob_drowelf1_1", 3,14,0, "eob_drowelf1_1_6")
spawn("eob_drowelf2_1_group", 1,17,0, "eob_drowelf2_1_group_3")
spawn("eob_skelwar1_1", 17,23,0, "eob_skelwar1_1_4")
spawn("eob_drowelf1_1", 17,4,0, "eob_drowelf1_1_7")
spawn("eob_skelwar1_1", 26,18,0, "eob_skelwar1_1_5")
spawn("eob_skelwar1_1", 25,23,0, "eob_skelwar1_1_6")
spawn("eob_skelwar1_1", 14,25,0, "eob_skelwar1_1_7")

--- level 8 ---

mapName("Drow Outcasts")
setWallSet("prison")
playStream("assets/samples/music/prison_ambient.ogg")
mapDesc([[
################################
#####..........................#
######.#.#.#.##.##.##.########.#
######.#.#.#.#...#.##........#.#
#...#........#.#.#...###.....#.#
#...##########.#.#############.#
#.###..........#............#..#
#.#.....######.#.###.#.##...#..#
#.#.##.#.##..#.#.#.#.#..#...#..#
#.#.#.....#..#.....#.##.#...#..#
#.#.##.#.###########..#.########
#.#.#.....#...........#........#
#.#.#.#.#.#.#############.##...#
#.#.#.....#.#...##...###...#...#
#.#.#####.#.#...#.##.###...#...#
#...#...###.#.##..###.########.#
##.##...##..#...##.##.#......#.#
#..###.###.####.##.#..###.####.#
#..#.....#.#.......##.#.....#..#
##.#.....#.###.###...##.....#..#
##..##.###.###.#.###.###.#.##..#
##..##.....#####.####.##...##..#
##.###.###.##.##....#.####.###.#
#..#.#.#.#....#...##...#...#.#.#
#..#.....#..#.#.####.#.#####.#.#
##.###.######.#........##....#.#
##............################.#
######.###.###..........##.....#
#....#...#.###...######....#.#.#
#.##.#####.#..####......##.#.#.#
#..........#........######.....#
################################
]])
spawn("eob_drow_button", 5,1,3, "eob_drow_button_14")
spawn("eob_drow_door", 23,1,1, "eob_drow_door_31")
	:addPullChain()
spawn("eob_drow_door", 6,2,0, "eob_drow_door_32")
spawn("eob_drow_door", 8,2,0, "eob_drow_door_33")
spawn("eob_drow_door", 10,2,0, "eob_drow_door_34")
spawn("eob_drow_door", 12,2,0, "eob_drow_door_35")
spawn("eob_drow_door", 15,2,0, "eob_drow_door_36")
	:addPullChain()
spawn("eob_drow_door", 23,3,1, "eob_drow_door_37")
	:addPullChain()
spawn("eob_drow_pressure_plate", 24,3,3, "eob_drow_pressure_plate_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_dart_firing_pad", 24,3,0, "eob_drow_dart_firing_pad_1")
spawn("eob_drow_dart_firing_pad", 25,3,0, "eob_drow_dart_firing_pad_2")
spawn("eob_drow_dart_firing_pad", 26,3,0, "eob_drow_dart_firing_pad_3")
spawn("eob_drow_dart_firing_pad", 27,3,0, "eob_drow_dart_firing_pad_4")
spawn("eob_drow_dart_firing_pad", 28,3,1, "eob_drow_dart_firing_pad_6")
spawn("eob_drow_dart_firing_pad", 28,3,0, "eob_drow_dart_firing_pad_5")
spawn("eob_drow_stairs_down", 20,4,1, "eob_drow_stairs_down_7")
spawn("eob_drow_dart_firing_pad", 24,4,2, "eob_drow_dart_firing_pad_8")
spawn("eob_drow_dart_firing_pad", 25,4,2, "eob_drow_dart_firing_pad_9")
spawn("eob_drow_dart_firing_pad", 26,4,2, "eob_drow_dart_firing_pad_10")
spawn("eob_drow_dart_firing_pad", 27,4,2, "eob_drow_dart_firing_pad_11")
spawn("eob_drow_dart_firing_pad", 28,4,2, "eob_drow_dart_firing_pad_12")
spawn("eob_drow_dart_firing_pad", 28,4,1, "eob_drow_dart_firing_pad_7")
spawn("eob_drow_alcove", 3,5,1, "eob_drow_alcove_5")
	:addItem(spawn("eob_ring2_sustenance_u"))
spawn("eob_drow_wall_text", 14,6,1, "eob_drow_wall_text_14")
	:setWallText("")
spawn("eob_drow_wall_text", 16,6,3, "eob_drow_wall_text_13")
	:setWallText("")
spawn("eob_drow_door_one", 19,6,3, "eob_drow_door_one_7")
	:addPullChain()
spawn("eob_drow_door_one", 24,6,1, "eob_drow_door_one_8")
	:addPullChain()
spawn("eob_teleporter", 27,6,0, "eob_teleporter_24")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_door_one", 6,8,0, "eob_drow_door_one_9")
	:addPullChain()
spawn("eob_drow_button", 11,8,0, "eob_drow_button_15")
spawn("eob_drow_ceiling_shaft", 26,8,2, "eob_drow_ceiling_shaft_1")
spawn("eob_drow_pressure_plate", 6,9,2, "eob_drow_pressure_plate_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_secret_button_tiny", 9,9,2, "eob_drow_secret_button_tiny_1")
spawn("eob_drow_wall_illusion", 16,9,1, "eob_drow_wall_illusion_2")
spawn("eob_drow_wall_illusion", 18,9,3, "eob_drow_wall_illusion_1")
spawn("eob_drow_ceiling_shaft", 26,9,2, "eob_drow_ceiling_shaft_2")
spawn("eob_drow_pressure_plate", 28,11,3, "eob_drow_pressure_plate_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pit", 29,11,3, "eob_drow_pit_4")
spawn("eob_drow_button", 30,11,1, "eob_drow_button_16")
spawn("eob_drow_door", 25,12,0, "eob_drow_door_38")
	:addPullChain()
spawn("eob_drow_pressure_plate", 28,12,2, "eob_drow_pressure_plate_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pit", 29,12,2, "eob_drow_pit_5")
spawn("eob_drow_button", 30,12,1, "eob_drow_button_17")
spawn("eob_drow_stairs_down", 18,13,3, "eob_drow_stairs_down_8")
spawn("eob_drow_pressure_plate", 28,13,2, "eob_drow_pressure_plate_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pit", 29,13,2, "eob_drow_pit_6")
spawn("eob_drow_button", 30,13,1, "eob_drow_button_18")
spawn("eob_teleporter", 17,14,0, "eob_teleporter_25")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pressure_plate", 28,14,2, "eob_drow_pressure_plate_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pit", 29,14,2, "eob_drow_pit_7")
spawn("eob_drow_button", 30,14,1, "eob_drow_button_19")
spawn("eob_blocker", 1,15,2, "eob_blocker_9")
spawn("eob_drow_fireball_firing_pad", 2,15,0, "eob_drow_fireball_firing_pad_9")
spawn("eob_blocker", 3,15,2, "eob_blocker_10")
spawn("eob_drow_portal_scepter", 6,15,0, "eob_drow_portal_scepter_1")
spawn("eob_drow_door", 13,15,0, "eob_drow_door_39")
spawn("eob_drow_ceiling_shaft", 16,15,3, "eob_drow_ceiling_shaft_3")
spawn("eob_drow_wall_text", 17,15,1, "eob_drow_wall_text_15")
	:setWallText("")
spawn("eob_drow_lock_spider", 13,16,3, "eob_drow_lock_spider_4")
spawn("eob_drow_wall_illusion_with_spider", 15,16,2, "eob_drow_wall_illusion_with_spider_2")
spawn("eob_drow_stairs_down", 18,16,0, "eob_drow_stairs_down_9")
spawn("eob_drow_door_one", 21,16,2, "eob_drow_door_one_10")
	:addPullChain()
spawn("eob_drow_stairs_up", 23,16,3, "eob_drow_stairs_up_3")
spawn("eob_drow_stairs_up", 28,16,1, "eob_drow_stairs_up_4")
spawn("eob_drow_pit", 1,17,3, "eob_drow_pit_8")
spawn("eob_drow_door", 6,17,0, "eob_drow_door_40")
	:addPullChain()
spawn("eob_drow_door", 25,17,0, "eob_drow_door_41")
spawn("eob_drow_stairs_up", 12,18,3, "eob_drow_stairs_up_5")
spawn("eob_drow_wall_illusion_with_spider", 15,18,0, "eob_drow_wall_illusion_with_spider_1")
spawn("eob_teleporter", 21,18,2, "eob_teleporter_26")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_lock_gem", 24,18,0, "eob_drow_lock_gem_1")
spawn("eob_drow_button", 27,18,1, "eob_drow_button_20")
spawn("eob_drow_wall_text", 25,19,2, "eob_drow_wall_text_16")
	:setWallText("")
spawn("eob_drow_alcove", 27,19,1, "eob_drow_alcove_6")
spawn("eob_drow_door", 6,20,0, "eob_drow_door_42")
	:addPullChain()
spawn("eob_drow_stairs_up", 14,20,2, "eob_drow_stairs_up_6")
spawn("eob_drow_stairs_up", 16,20,0, "eob_drow_stairs_up_7")
spawn("eob_drow_portal_scepter", 29,20,3, "eob_drow_portal_scepter_2")
spawn("eob_drow_pit", 3,21,2, "eob_drow_pit_9")
spawn("eob_drow_alcove", 29,21,2, "eob_drow_alcove_7")
	:addItem(spawn("eob_wand_lightning_bolt_10_u"))
spawn("eob_drow_stairs_down", 19,22,1, "eob_drow_stairs_down_10")
spawn("eob_drow_door_one", 21,22,2, "eob_drow_door_one_11")
	:addPullChain()
spawn("eob_drow_stairs_down", 24,23,3, "eob_drow_stairs_down_11")
spawn("eob_drow_secret_button_tiny", 25,23,2, "eob_drow_secret_button_tiny_2")
spawn("eob_drow_wall_illusion_with_spider", 28,23,2, "eob_drow_wall_illusion_with_spider_4")
spawn("eob_drow_door", 5,24,1, "eob_drow_door_43")
	:addPullChain()
spawn("eob_drow_door", 7,24,3, "eob_drow_door_44")
	:addPullChain()
spawn("eob_drow_door", 2,25,0, "eob_drow_door_45")
spawn("eob_drow_wall_illusion_with_spider", 28,25,0, "eob_drow_wall_illusion_with_spider_3")
spawn("eob_drow_button", 2,26,3, "eob_drow_button_21")
spawn("eob_drow_fireball_firing_pad", 2,26,2, "eob_drow_fireball_firing_pad_10")
spawn("eob_drow_door", 3,26,1, "eob_drow_door_46")
	:addPullChain()
spawn("eob_drow_door", 4,26,1, "eob_drow_door_47")
	:addPullChain()
spawn("eob_drow_door", 5,26,1, "eob_drow_door_48")
	:addPullChain()
spawn("eob_drow_door", 30,26,2, "eob_drow_door_49")
	:addPullChain()
spawn("eob_drow_pressure_plate", 21,27,3, "eob_drow_pressure_plate_12")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_door", 22,27,1, "eob_drow_door_50")
	:addPullChain()
spawn("eob_drow_stairs_up", 8,28,1, "eob_drow_stairs_up_8")
spawn("eob_drow_door", 25,28,1, "eob_drow_door_51")
	:addPullChain()
spawn("eob_drow_pressure_plate", 21,29,3, "eob_drow_pressure_plate_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_door", 22,29,1, "eob_drow_door_52")
	:addPullChain()
spawn("eob_drow_door", 5,30,3, "eob_drow_door_53")
	:addPullChain()
spawn("eob_drow_door", 9,30,1, "eob_drow_door_54")
	:addPullChain()
spawn("eob_cleric_scroll_prayer", 28,3,1, "eob_cleric_scroll_prayer_2")
spawn("eob_cleric_scroll_neutral_poison", 28,3,3, "eob_cleric_scroll_neutral_poison_1")
spawn("eob_cleric_scroll_cure_critical_wnds", 28,3,3, "eob_cleric_scroll_cure_critical_wnds_1")
spawn("eob_medallion_of_adornment_u", 5,4,0, "eob_medallion_of_adornment_u_3")
spawn("eob_ring2_u", 5,4,0, "eob_ring2_u_3")
spawn("eob_long_sword_night_stalker_u", 18,8,0, "eob_long_sword_night_stalker_u_1")
spawn("eob_cleric_scroll_hold_person", 12,9,3, "eob_cleric_scroll_hold_person_2")
spawn("eob_rock_glowing_u", 28,12,2, "eob_rock_glowing_u_1")
spawn("eob_key_ruby_u", 15,13,1, "eob_key_ruby_u_2")
spawn("eob_mage_scroll_invisibility 10'", 9,14,3, "eob_mage_scroll_invisibility 10'_2")
spawn("eob_bow_u", 15,14,3, "eob_bow_u_2")
spawn("eob_key_drow_u", 20,14,3, "eob_key_drow_u_3")
spawn("eob_cleric_scroll_protect_evil", 5,15,0, "eob_cleric_scroll_protect_evil_1")
spawn("eob_leather_boots_u", 7,15,1, "eob_leather_boots_u_3")
spawn("eob_potion_extra_healing", 21,15,0, "eob_potion_extra_healing_4")
spawn("eob_cleric_scroll_raise_dead", 21,15,0, "eob_cleric_scroll_raise_dead_1")
spawn("eob_key_ruby_u", 25,16,0, "eob_key_ruby_u_3")
spawn("eob_key_drow_u", 20,20,2, "eob_key_drow_u_4")
spawn("eob_key_jeweled_u", 21,21,0, "eob_key_jeweled_u_3")
spawn("scroll_shield", 21,21,0, "eob_mage_scroll_shield_2")
spawn("eob_plate_mail_cursed3_u", 4,23,0, "eob_plate_mail_cursed3_u_1")
spawn("eob_flail_u", 8,23,1, "eob_flail_u_1")
spawn("eob_key_drow_u", 28,23,1, "eob_key_drow_u_5")
spawn("eob_robe_u", 1,28,0, "eob_robe_u_2")
spawn("eob_mace_u", 1,28,0, "eob_mace_u_3")
spawn("scroll_ice_storm", 14,28,2, "eob_mage_scroll_ice_storm_1")
spawn("eob_lock_picks_u", 12,29,0, "eob_lock_picks_u_2")
spawn("eob_gem_red_u", 20,20,3, "eob_gem_red_u_2")
spawn("eob_mage_scroll_vampiric_touch", 15,14,3, "eob_mage_scroll_vampiric_touch_1")
spawn("eob_hellhnd", 8,4,0, "eob_hellhnd_1")
spawn("eob_hellhnd", 5,12,0, "eob_hellhnd_2")
spawn("eob_hellhnd", 6,10,0, "eob_hellhnd_3")
spawn("eob_drider1_1", 5,16,0, "eob_drider1_1_1")
spawn("eob_hellhnd", 24,13,0, "eob_hellhnd_4")
spawn("eob_drider1_1", 5,19,0, "eob_drider1_1_2")
spawn("eob_hellhnd", 9,11,0, "eob_hellhnd_5")
spawn("eob_hellhnd", 15,28,0, "eob_hellhnd_6")
spawn("eob_hellhnd", 8,9,0, "eob_hellhnd_7")
spawn("eob_hellhnd_group", 2,5,0, "eob_hellhnd_group_1")
spawn("eob_hellhnd", 10,4,0, "eob_hellhnd_8")
spawn("eob_drider1_1", 4,19,0, "eob_drider1_1_3")
spawn("eob_drider1_1", 29,6,0, "eob_drider1_1_4")
spawn("eob_drider1_1", 29,7,0, "eob_drider1_1_5")
spawn("eob_drider1_1", 7,19,0, "eob_drider1_1_6")
spawn("eob_hellhnd", 6,4,0, "eob_hellhnd_9")
spawn("eob_hellhnd", 7,13,0, "eob_hellhnd_10")
spawn("eob_drider1_1", 2,28,0, "eob_drider1_1_7")
spawn("eob_hellhnd", 7,4,0, "eob_hellhnd_11")
spawn("eob_drider1_1", 7,16,0, "eob_drider1_1_8")
spawn("eob_drider1_1", 14,11,0, "eob_drider1_1_9")
spawn("eob_hellhnd", 9,4,0, "eob_hellhnd_12")
spawn("eob_hellhnd", 25,14,0, "eob_hellhnd_13")
spawn("eob_hellhnd", 8,13,0, "eob_hellhnd_14")
spawn("eob_hellhnd", 8,19,0, "eob_hellhnd_15")
spawn("eob_hellhnd", 26,7,0, "eob_hellhnd_16")
spawn("eob_drider1_1", 10,26,0, "eob_drider1_1_10")

--- level 9 ---

mapName("Lower Reaches of The Drow")
setWallSet("prison")
playStream("assets/samples/music/prison_ambient.ogg")
mapDesc([[
################################
#......................##...####
#.#######..###########.##.#.#..#
#.#..#...###..#..#####....#....#
#.#..#.#...........#......#.#..#
#.#....###########.###.##.#.####
#.#.#####..#..#..#.##...#.#.#..#
#.#................###.##.#....#
#.#.#.############.##...#.#.#..#
#.#.#.############.###.##.#.####
#...###.....##.###.....##.#...##
###..............#.....##.###.##
#.##..#.....##..#########...#.##
#.############.#...#...####.#.##
#.#.########...#.###.#.#..#.#.##
##....#.#.#..###.....#.#..#.####
#...#.#.....#####.####.#.......#
#...#.#.....#####.#....####.#..#
##.##.#.....####.##....#.##.#..#
#...#...#.#.#..#.##....###...#.#
#..##.########...#####.#.....#.#
###...#...#..###.###.#.###...#.#
###..##......###.###.#.####.##.#
##############.......#...##....#
####..........#############.####
####.########.###......#..#.#..#
####.#.....##.#...#..#.#.......#
####.#####.##.#.#.####.#..#.#..#
####.#...#.#....#.#..#.####.####
####.#####.#.####.#....####.#..#
####.......#......####.........#
################################
]])
spawn("eob_drow_lock_spider", 4,1,2, "eob_drow_lock_spider_5")
spawn("eob_drow_door", 5,1,1, "eob_drow_door_55")
spawn("eob_drow_lock_spider", 6,1,2, "eob_drow_lock_spider_6")
spawn("eob_drow_door", 11,1,1, "eob_drow_door_56")
	:addPullChain()
spawn("eob_drow_door", 22,2,2, "eob_drow_door_57")
	:addPullChain()
spawn("eob_drow_door", 25,2,2, "eob_drow_door_58")
	:addPullChain()
spawn("eob_drow_door", 28,3,3, "eob_drow_door_59")
spawn("eob_drow_door", 11,4,1, "eob_drow_door_60")
	:addPullChain()
spawn("eob_drow_door", 14,4,1, "eob_drow_door_61")
	:addPullChain()
spawn("eob_drow_door", 17,4,1, "eob_drow_door_62")
	:addPullChain()
spawn("eob_drow_stairs_up", 20,4,3, "eob_drow_stairs_up_9")
spawn("eob_drow_lock_gem", 27,4,1, "eob_drow_lock_gem_2")
spawn("eob_drow_door", 22,5,0, "eob_drow_door_63")
	:addPullChain()
spawn("eob_drow_door", 25,5,0, "eob_drow_door_64")
	:addPullChain()
spawn("eob_drow_door", 3,6,0, "eob_drow_door_65")
	:addPullChain()
spawn("eob_drow_wall_text", 21,6,3, "eob_drow_wall_text_17")
	:setWallText("")
spawn("eob_drow_pressure_plate", 21,6,3, "eob_drow_pressure_plate_14")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_wall_text", 23,6,1, "eob_drow_wall_text_19")
	:setWallText("")
spawn("eob_drow_pressure_plate", 23,6,1, "eob_drow_pressure_plate_15")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_wall_text", 25,6,3, "eob_drow_wall_text_18")
	:setWallText("")
spawn("eob_drow_door", 8,7,1, "eob_drow_door_66")
	:addPullChain()
spawn("eob_drow_door", 11,7,1, "eob_drow_door_67")
	:addPullChain()
spawn("eob_drow_door", 14,7,1, "eob_drow_door_68")
	:addPullChain()
spawn("eob_drow_door", 17,7,1, "eob_drow_door_69")
	:addPullChain()
spawn("eob_drow_alcove", 25,7,3, "eob_drow_alcove_8")
spawn("eob_drow_door", 28,7,3, "eob_drow_door_70")
spawn("eob_drow_wall_text", 21,8,3, "eob_drow_wall_text_20")
	:setWallText("")
spawn("eob_drow_pressure_plate", 21,8,3, "eob_drow_pressure_plate_16")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_pressure_plate", 23,8,1, "eob_drow_pressure_plate_17")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_wall_text", 23,8,1, "eob_drow_wall_text_21")
	:setWallText("")
spawn("eob_drow_alcove", 25,8,3, "eob_drow_alcove_9")
spawn("eob_drow_lock_gem", 27,8,1, "eob_drow_lock_gem_3")
spawn("eob_drow_door", 18,9,2, "eob_drow_door_71")
	:addPullChain()
spawn("eob_drow_door", 22,9,2, "eob_drow_door_72")
spawn("eob_drow_alcove", 25,9,3, "eob_drow_alcove_10")
spawn("eob_drow_dart_firing_pad", 7,10,0, "eob_drow_dart_firing_pad_14")
spawn("eob_drow_wall_illusion", 8,10,3, "eob_drow_wall_illusion_3")
spawn("eob_drow_dart_firing_pad", 8,10,0, "eob_drow_dart_firing_pad_18")
spawn("eob_drow_wall_illusion", 8,10,1, "eob_drow_wall_illusion_7")
spawn("eob_drow_dart_firing_pad", 9,10,0, "eob_drow_dart_firing_pad_22")
spawn("eob_drow_wall_illusion", 10,10,3, "eob_drow_wall_illusion_5")
spawn("eob_drow_wall_illusion", 10,10,1, "eob_drow_wall_illusion_9")
spawn("eob_drow_dart_firing_pad", 10,10,0, "eob_drow_dart_firing_pad_26")
spawn("eob_drow_dart_firing_pad", 11,10,0, "eob_drow_dart_firing_pad_30")
spawn("eob_drow_dart_firing_pad", 14,10,0, "eob_drow_dart_firing_pad_34")
spawn("eob_drow_alcove", 25,10,3, "eob_drow_alcove_11")
spawn("eob_drow_wall_text", 29,10,1, "eob_drow_wall_text_22")
	:setWallText("")
spawn("eob_drow_wall_illusion", 7,11,0, "eob_drow_wall_illusion_4")
spawn("eob_drow_wall_illusion", 7,11,2, "eob_drow_wall_illusion_11")
spawn("eob_drow_pressure_plate", 8,11,2, "eob_drow_pressure_plate_18")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_wall_illusion", 9,11,0, "eob_drow_wall_illusion_6")
spawn("eob_drow_wall_illusion", 9,11,2, "eob_drow_wall_illusion_14")
spawn("eob_drow_pressure_plate", 10,11,2, "eob_drow_pressure_plate_19")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_wall_illusion", 11,11,0, "eob_drow_wall_illusion_8")
spawn("eob_drow_wall_illusion", 11,11,2, "eob_drow_wall_illusion_16")
spawn("eob_drow_pressure_plate", 14,11,2, "eob_drow_pressure_plate_20")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_dart_firing_pad", 15,11,1, "eob_drow_dart_firing_pad_37")
spawn("eob_drow_wall_illusion", 15,11,2, "eob_drow_wall_illusion_18")
spawn("eob_drow_wall", 16,11,3, "eob_drow_wall_1")
spawn("eob_drow_alcove", 25,11,3, "eob_drow_alcove_12")
spawn("eob_drow_ceiling_shaft", 29,11,2, "eob_drow_ceiling_shaft_4")
spawn("eob_drow_stairs_down", 1,12,0, "eob_drow_stairs_down_12")
spawn("eob_drow_wall_text", 5,12,1, "eob_drow_wall_text_23")
	:setWallText("")
spawn("eob_drow_dart_firing_pad", 7,12,2, "eob_drow_dart_firing_pad_41")
spawn("eob_drow_wall_illusion", 8,12,1, "eob_drow_wall_illusion_13")
spawn("eob_drow_wall_illusion", 8,12,3, "eob_drow_wall_illusion_10")
spawn("eob_drow_dart_firing_pad", 8,12,2, "eob_drow_dart_firing_pad_45")
spawn("eob_drow_dart_firing_pad", 9,12,2, "eob_drow_dart_firing_pad_49")
spawn("eob_drow_wall_illusion", 10,12,1, "eob_drow_wall_illusion_15")
spawn("eob_drow_wall_illusion", 10,12,3, "eob_drow_wall_illusion_12")
spawn("eob_drow_dart_firing_pad", 10,12,2, "eob_drow_dart_firing_pad_53")
spawn("eob_drow_dart_firing_pad", 11,12,2, "eob_drow_dart_firing_pad_57")
spawn("eob_drow_wall_illusion", 14,12,1, "eob_drow_wall_illusion_17")
spawn("eob_drow_wall_text", 25,12,2, "eob_drow_wall_text_24")
	:setWallText("")
spawn("eob_drow_pressure_plate", 26,12,3, "eob_drow_pressure_plate_21")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_ceiling_shaft", 29,12,2, "eob_drow_ceiling_shaft_5")
spawn("eob_drow_stairs_up", 18,13,1, "eob_drow_stairs_up_10")
spawn("eob_drow_lock_spider", 22,13,1, "eob_drow_lock_spider_7")
spawn("eob_drow_ceiling_shaft", 29,13,2, "eob_drow_ceiling_shaft_6")
spawn("eob_drow_button", 3,14,0, "eob_drow_button_22")
spawn("eob_drow_wall_text", 12,14,3, "eob_drow_wall_text_25")
	:setWallText("")
spawn("eob_drow_magic_missile_firing_pad", 14,14,2, "eob_drow_magic_missile_firing_pad_3")
spawn("eob_drow_door", 16,14,2, "eob_drow_door_73")
spawn("eob_drow_door", 22,14,0, "eob_drow_door_74")
spawn("eob_drow_ceiling_shaft", 29,14,2, "eob_drow_ceiling_shaft_7")
spawn("eob_drow_pit", 2,15,3, "eob_drow_pit_10")
spawn("eob_drow_wall_throwable", 3,15,0, "eob_drow_wall_throwable_1")
spawn("eob_drow_magic_missile_firing_pad", 7,15,0, "eob_drow_magic_missile_firing_pad_1")
spawn("eob_drow_button", 9,15,0, "eob_drow_button_23")
spawn("eob_drow_magic_missile_firing_pad", 11,15,0, "eob_drow_magic_missile_firing_pad_2")
spawn("eob_drow_pressure_plate", 12,15,2, "eob_drow_pressure_plate_22")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_lock_spider", 16,15,3, "eob_drow_lock_spider_8")
spawn("eob_blocker", 25,15,2, "eob_blocker_11")
spawn("eob_drow_pit", 3,16,2, "eob_drow_pit_11")
spawn("eob_drow_magic_missile_firing_pad", 7,16,3, "eob_drow_magic_missile_firing_pad_4")
spawn("eob_drow_button", 11,16,1, "eob_drow_button_24")
spawn("eob_blocker", 24,16,2, "eob_blocker_12")
spawn("eob_drow_pressure_plate", 25,16,2, "eob_drow_pressure_plate_23")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_door", 26,16,1, "eob_drow_door_75")
	:addPullChain()
spawn("eob_drow_door_one", 27,16,1, "eob_drow_door_one_12")
	:addPullChain()
spawn("eob_drow_ceiling_shaft", 1,17,2, "eob_drow_ceiling_shaft_8")
spawn("eob_drow_wall_illusion", 2,17,2, "eob_drow_wall_illusion_20")
spawn("eob_drow_pressure_plate", 3,17,2, "eob_drow_pressure_plate_24")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_drow_button", 7,17,3, "eob_drow_button_25")
spawn("eob_drow_magic_missile_firing_pad", 11,17,1, "eob_drow_magic_missile_firing_pad_5")
spawn("eob_drow_stairs_up", 17,17,2, "eob_drow_stairs_up_11")
spawn("eob_drow_wall_text", 19,17,3, "eob_drow_wall_text_26")
	:setWallText("")
spawn("eob_drow_magic_missile_firing_pad", 7,18,3, "eob_drow_magic_missile_firing_pad_6")
spawn("eob_drow_button", 11,18,1, "eob_drow_button_26")
spawn("eob_drow_alcove", 19,18,3, "eob_drow_alcove_13")
spawn("eob_drow_wall_text", 22,18,1, "eob_drow_wall_text_27")
	:setWallText("")
spawn("eob_drow_button", 24,18,1, "eob_drow_button_27")
spawn("eob_drow_wall_illusion", 30,18,2, "eob_drow_wall_illusion_24")
spawn("eob_drow_wall_illusion", 2,19,0, "eob_drow_wall_illusion_19")
spawn("eob_drow_door", 3,19,1, "eob_drow_door_76")
	:addPullChain()
spawn("eob_drow_door", 6,19,1, "eob_drow_door_77")
spawn("eob_drow_button", 7,19,2, "eob_drow_button_29")
spawn("eob_drow_lock_spider", 7,19,1, "eob_drow_lock_spider_9")
spawn("eob_drow_magic_missile_firing_pad", 9,19,2, "eob_drow_magic_missile_firing_pad_7")
spawn("eob_drow_button", 11,19,2, "eob_drow_button_30")
spawn("eob_drow_wall_illusion", 13,19,1, "eob_drow_wall_illusion_22")
spawn("eob_drow_door_one", 16,19,2, "eob_drow_door_one_13")
	:addPullChain()
spawn("eob_drow_button", 19,19,3, "eob_drow_button_28")
spawn("eob_drow_door_one", 5,20,2, "eob_drow_door_one_14")
	:addPullChain()
spawn("eob_drow_wall_illusion", 14,20,0, "eob_drow_wall_illusion_21")
spawn("eob_drow_door_one", 15,20,1, "eob_drow_door_one_15")
	:addPullChain()
spawn("eob_drow_lock_spider", 22,20,1, "eob_drow_lock_spider_10")
spawn("eob_drow_wall_illusion", 24,20,1, "eob_drow_wall_illusion_26")
spawn("eob_drow_wall_illusion", 26,20,3, "eob_drow_wall_illusion_25")
spawn("eob_drow_portal_dagger", 28,20,1, "eob_drow_portal_dagger_2")
spawn("eob_drow_wall_illusion", 30,20,0, "eob_drow_wall_illusion_23")
spawn("eob_drow_ceiling_shaft", 3,21,3, "eob_drow_ceiling_shaft_9")
spawn("eob_drow_stairs_up", 20,21,0, "eob_drow_stairs_up_12")
spawn("eob_drow_door", 22,21,0, "eob_drow_door_78")
spawn("eob_drow_door_one", 22,22,0, "eob_drow_door_one_16")
	:addPullChain()
spawn("eob_drow_door_one", 15,23,1, "eob_drow_door_one_17")
	:addPullChain()
spawn("eob_drow_wall_text", 20,23,2, "eob_drow_wall_text_28")
	:setWallText("")
spawn("eob_drow_stairs_up", 24,23,1, "eob_drow_stairs_up_13")
spawn("eob_drow_secret_button_tiny", 9,24,2, "eob_drow_secret_button_tiny_3")
spawn("eob_drow_door", 18,25,1, "eob_drow_door_79")
	:addPullChain()
spawn("eob_drow_door_one", 21,25,3, "eob_drow_door_one_18")
	:addPullChain()
spawn("eob_drow_wall_text", 24,25,3, "eob_drow_wall_text_29")
	:setWallText("")
spawn("eob_drow_stairs_down", 6,26,3, "eob_drow_stairs_down_13")
spawn("eob_drow_alcove", 24,26,3, "eob_drow_alcove_14")
spawn("eob_drow_door", 26,26,1, "eob_drow_door_80")
	:addPullChain()
spawn("eob_drow_door", 28,26,3, "eob_drow_door_81")
	:addPullChain()
spawn("eob_drow_stairs_down", 6,28,3, "eob_drow_stairs_down_14")
spawn("eob_drow_button", 19,28,3, "eob_drow_button_31")
spawn("eob_drow_alcove", 19,29,3, "eob_drow_alcove_15")
spawn("eob_drow_door", 21,29,1, "eob_drow_door_82")
	:addPullChain()
spawn("eob_drow_wall_illusion", 27,30,1, "eob_drow_wall_illusion_28")
spawn("eob_drow_wall_illusion", 29,30,3, "eob_drow_wall_illusion_27")
spawn("eob_key_drow_u", 30,2,1, "eob_key_drow_u_6")
spawn("eob_cleric_scroll_detect_magic", 12,3,0, "eob_cleric_scroll_detect_magic_2")
spawn("eob_potion_poison", 15,6,0, "eob_potion_poison_2")
spawn("scroll_stoneskin", 30,8,3, "eob_mage_scroll_stone_skin_1")
spawn("eob_arrow_u", 25,14,3, "eob_arrow_u_21")
spawn("eob_arrow_u", 25,14,1, "eob_arrow_u_22")
spawn("eob_arrow_u", 25,14,2, "eob_arrow_u_23")
spawn("eob_key_drow_u", 9,15,2, "eob_key_drow_u_7")
spawn("eob_cleric_scroll_dispel_magic", 2,16,1, "eob_cleric_scroll_dispel_magic_2")
spawn("eob_cleric_scroll_cure_serious_wnds", 2,16,3, "eob_cleric_scroll_cure_serious_wnds_2")
spawn("scroll_invisibility", 29,18,2, "eob_mage_scroll_invisibility_2")
spawn("eob_cleric_scroll_flame_blade", 13,19,0, "eob_cleric_scroll_flame_blade_3")
spawn("eob_cleric_scroll_protect_evil10", 1,20,2, "eob_cleric_scroll_protect_evil10_2")
spawn("scroll_armor", 14,20,0, "eob_mage_scroll_armor_1")
spawn("eob_shield_drow_u", 24,20,0, "eob_shield_drow_u_1")
spawn("eob_cleric_scroll_raise_dead", 12,21,2, "eob_cleric_scroll_raise_dead_2")
spawn("eob_leather_boots_u", 28,21,3, "eob_leather_boots_u_4")
spawn("eob_potion_extra_healing", 3,22,2, "eob_potion_extra_healing_5")
spawn("eob_spear_u", 14,23,0, "eob_spear_u_3")
spawn("eob_wand_fireball_10_u", 20,26,3, "eob_wand_fireball_10_u_1")
spawn("eob_cleric_scroll_raise_dead", 8,28,1, "eob_cleric_scroll_raise_dead_3")
spawn("eob_chain_mail_u", 30,29,1, "eob_chain_mail_u_2")
spawn("eob_bones_human_beohram_u", 11,11,1, "eob_bones_human_beohram_u_1")
spawn("eob_plate_mail_u", 11,11,1, "eob_plate_mail_u_2")
spawn("eob_shield_u", 11,11,1, "eob_shield_u_6")
spawn("eob_long_sword_severious_u", 11,11,1, "eob_long_sword_severious_u_1")
spawn("eob_dwarven_helmet_u", 11,11,1, "eob_dwarven_helmet_u_2")
spawn("eob_holy_symbol_u", 11,11,1, "eob_holy_symbol_u_1")
spawn("eob_orb_of_power_u", 24,18,0, "eob_orb_of_power_u_1")
spawn("eob_orb_of_power_u", 24,18,1, "eob_orb_of_power_u_2")
spawn("eob_orb_of_power_u", 24,18,3, "eob_orb_of_power_u_3")
spawn("eob_dart_plus4_u", 7,9,0, "eob_dart_plus4_u_1")
spawn("eob_dart_plus4_u", 8,9,0, "eob_dart_plus4_u_2")
spawn("eob_dart_plus4_u", 9,9,0, "eob_dart_plus4_u_3")
spawn("eob_dart_plus4_u", 10,9,0, "eob_dart_plus4_u_4")
spawn("eob_dart_plus4_u", 11,9,0, "eob_dart_plus4_u_5")
spawn("eob_dart_plus4_u", 7,13,0, "eob_dart_plus4_u_6")
spawn("eob_dart_plus4_u", 8,13,0, "eob_dart_plus4_u_7")
spawn("eob_dart_plus4_u", 9,13,0, "eob_dart_plus4_u_8")
spawn("eob_dart_plus4_u", 10,13,0, "eob_dart_plus4_u_9")
spawn("eob_dart_plus4_u", 11,13,0, "eob_dart_plus4_u_10")
spawn("eob_disbeast", 15,4,0, "eob_disbeast_1")
spawn("eob_rust", 13,28,0, "eob_rust_1")
spawn("eob_disbeast", 9,6,0, "eob_disbeast_2")
spawn("eob_rust", 22,7,0, "eob_rust_2")
spawn("eob_disbeast", 29,26,0, "eob_disbeast_3")
spawn("eob_disbeast", 24,14,0, "eob_disbeast_4")
spawn("eob_disbeast", 29,4,0, "eob_disbeast_5")
spawn("eob_disbeast", 24,26,0, "eob_disbeast_6")
spawn("eob_disbeast", 29,2,0, "eob_disbeast_7")
spawn("eob_rust", 5,9,0, "eob_rust_3")
spawn("eob_disbeast", 19,11,0, "eob_disbeast_8")
spawn("eob_disbeast", 19,10,0, "eob_disbeast_9")
spawn("eob_rust", 3,3,0, "eob_rust_4")
spawn("eob_disbeast", 12,4,0, "eob_disbeast_10")
spawn("eob_rust", 4,3,0, "eob_rust_5")
spawn("eob_disbeast", 10,1,0, "eob_disbeast_11")
spawn("eob_disbeast", 16,18,0, "eob_disbeast_12")
spawn("eob_disbeast", 25,14,0, "eob_disbeast_13")
spawn("eob_disbeast", 10,2,0, "eob_disbeast_14")
spawn("eob_disbeast", 9,2,0, "eob_disbeast_15")
spawn("eob_disbeast", 9,1,0, "eob_disbeast_16")
spawn("eob_disbeast", 12,6,0, "eob_disbeast_17")

--- level 10 ---

mapName("Xanathar's Outer Sanctum, Mantis Hive")
setWallSet("dungeon")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
################################
################################
################################
################################
################################
################################
################################
################################
####.######.......##############
#.......###.#####.##############
#.##.##.....#...#.#########..###
#.#.##.######...#.###...#.##.###
###.....##..##.##.#.###.#....###
#######.##.##...#.#......#.#####
#...##......#####.####.###.#####
#...#..#.##.................####
#...##.#...###.########..##.####
##.###...#..########.#.#..#.####
##.#..##.####..#..#.....########
##......................#.....##
##.#..##.####..#..#.....#.....##
#..####......########.###.....##
#..#..#.####...######.##########
#..#..#......#..#...#.#.....####
##.#.###.##.#####.#.#.#.#..#####
##.....#.....#....#.....#...####
#######..###.#...##.....#..#####
##.....#...#.#.#..#.....#...####
##...################.###..#####
##....................###...####
################################
]])
spawn("eob_hive_wall_rift", 17,9,1, "eob_hive_wall_rift_1")
spawn("eob_hive_wall_rift", 9,11,0, "eob_hive_wall_rift_2")
spawn("eob_hive_alcove", 13,11,3, "eob_hive_alcove_1")
	:addItem(spawn("eob_potion_giant_strength"))
spawn("eob_hive_wall_text", 13,11,0, "eob_hive_wall_text_1")
	:setWallText("")
spawn("eob_hive_pit", 14,11,3, "eob_hive_pit_1")
spawn("eob_hive_wall_text", 15,11,0, "eob_hive_wall_text_2")
	:setWallText("")
spawn("eob_hive_alcove", 15,11,1, "eob_hive_alcove_2")
	:addItem(spawn("eob_ring2_feather_fall_u"))
spawn("eob_hive_stairs_up", 1,12,2, "eob_hive_stairs_up_1")
spawn("eob_hive_wall_rift", 11,13,0, "eob_hive_wall_rift_3")
spawn("eob_hive_lever", 13,14,3, "eob_hive_lever_1")
	:setLeverState("activated")
spawn("eob_hive_lever", 15,14,1, "eob_hive_lever_2")
	:setLeverState("activated")
spawn("eob_hive_wall_rift", 22,14,0, "eob_hive_wall_rift_4")
spawn("eob_hive_wall_rift", 24,14,1, "eob_hive_wall_rift_6")
spawn("eob_hive_ceiling_shaft", 2,15,3, "eob_hive_ceiling_shaft_1")
spawn("eob_hive_wall_rift", 3,15,0, "eob_hive_wall_rift_5")
spawn("eob_blocker", 11,15,0, "eob_blocker_13")
spawn("eob_hive_ceiling_shaft", 3,16,2, "eob_hive_ceiling_shaft_2")
spawn("eob_hive_wall_rift", 8,16,1, "eob_hive_wall_rift_7")
spawn("eob_hive_door", 16,16,1, "eob_hive_door_1")
	:addPullChain()
spawn("eob_hive_wall_text", 19,16,2, "eob_hive_wall_text_3")
	:setWallText("")
spawn("eob_hive_door", 20,16,3, "eob_hive_door_2")
	:addPullChain()
spawn("eob_hive_lever", 14,17,2, "eob_hive_lever_3")
	:setLeverState("activated")
spawn("eob_hive_door", 2,18,0, "eob_hive_door_3")
	:addPullChain()
spawn("eob_hive_switch", 20,18,0, "eob_hive_switch_1")
spawn("eob_hive_door", 20,18,2, "eob_hive_door_4")
	:addPullChain()
spawn("eob_hive_door", 22,18,2, "eob_hive_door_5")
	:addPullChain()
spawn("eob_hive_switch", 22,18,0, "eob_hive_switch_2")
spawn("eob_hive_secret_button_tiny", 27,18,3, "eob_hive_secret_button_tiny_1")
spawn("eob_hive_door", 8,19,2, "eob_hive_door_6")
	:addPullChain()
spawn("eob_hive_wall_text", 19,19,0, "eob_hive_wall_text_4")
	:setWallText("")
spawn("eob_hive_wall_rift", 21,19,0, "eob_hive_wall_rift_8")
spawn("eob_hive_wall_text", 23,19,0, "eob_hive_wall_text_5")
	:setWallText("")
spawn("eob_hive_wall_text", 7,20,2, "eob_hive_wall_text_7")
	:setWallText("")
spawn("eob_hive_wall_text", 7,20,0, "eob_hive_wall_text_6")
	:setWallText("")
spawn("eob_hive_door", 15,20,1, "eob_hive_door_7")
	:addPullChain()
spawn("eob_hive_door", 18,20,1, "eob_hive_door_8")
	:addPullChain()
spawn("eob_hive_door_one", 2,21,0, "eob_hive_door_one_1")
	:addPullChain()
spawn("eob_hive_door", 8,21,0, "eob_hive_door_9")
	:addPullChain()
spawn("eob_hive_wall_rift", 16,21,2, "eob_hive_wall_rift_12")
spawn("eob_hive_lock", 20,21,2, "eob_hive_lock_1")
spawn("eob_hive_wall_rift", 22,21,2, "eob_hive_wall_rift_13")
spawn("eob_hive_wall_rift", 23,21,1, "eob_hive_wall_rift_9")
spawn("eob_hive_wall_rift", 29,21,1, "eob_hive_wall_rift_10")
spawn("eob_hive_pressure_plate", 1,22,3, "eob_hive_pressure_plate_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_door", 21,22,0, "eob_hive_door_10")
spawn("eob_hive_pressure_plate", 1,23,2, "eob_hive_pressure_plate_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_wall_rift", 5,23,0, "eob_hive_wall_rift_11")
spawn("eob_hive_pressure_plate", 1,24,2, "eob_hive_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_wall_rift", 9,24,2, "eob_hive_wall_rift_14")
spawn("eob_hive_wall_text", 21,24,1, "eob_hive_wall_text_8")
	:setWallText("")
spawn("eob_blocker", 26,24,3, "eob_blocker_14")
spawn("eob_hive_wall_text", 2,25,3, "eob_hive_wall_text_9")
	:setWallText("")
spawn("eob_hive_door", 19,25,2, "eob_hive_door_11")
	:addPullChain()
spawn("eob_hive_door", 21,25,2, "eob_hive_door_12")
	:addPullChain()
spawn("eob_hive_door", 23,25,2, "eob_hive_door_13")
	:addPullChain()
spawn("eob_hive_alcove", 26,25,1, "eob_hive_alcove_3")
	:addItem(spawn("eob_potion_poison"))
spawn("eob_hive_stairs_up", 6,26,1, "eob_hive_stairs_up_2")
spawn("eob_hive_wall_rift", 19,26,3, "eob_hive_wall_rift_15")
spawn("eob_blocker", 26,26,2, "eob_blocker_15")
spawn("eob_hive_wall_rift", 14,27,3, "eob_hive_wall_rift_16")
spawn("eob_hive_portal_scepter", 19,27,3, "eob_hive_portal_scepter_1")
spawn("eob_hive_portal_ring", 23,27,1, "eob_hive_portal_ring_1")
spawn("eob_hive_alcove", 26,27,1, "eob_hive_alcove_4")
	:addItem(spawn("eob_wand_cone_of_cold_10_u"))
spawn("eob_hive_stairs_up", 6,28,1, "eob_hive_stairs_up_3")
spawn("eob_hive_prison_manacles", 17,28,1, "eob_hive_prison_manacles_1")
spawn("eob_hive_alcove", 19,28,3, "eob_hive_alcove_5")
	:addItem(spawn("eob_cleric_scroll_flame_blade"))
	:addItem(spawn("eob_cleric_scroll_remove_paralysis"))
spawn("eob_hive_wall_rift", 19,28,2, "eob_hive_wall_rift_18")
spawn("eob_hive_wall_rift", 23,28,2, "eob_hive_wall_rift_19")
spawn("eob_hive_alcove", 23,28,1, "eob_hive_alcove_6")
spawn("eob_blocker", 26,28,2, "eob_blocker_16")
spawn("eob_hive_wall_rift", 2,29,3, "eob_hive_wall_rift_17")
spawn("eob_hive_alcove", 26,29,1, "eob_hive_alcove_7")
	:addItem(spawn("eob_cleric_scroll_flame_blade"))
	:addItem(spawn("eob_cleric_scroll_cure_critical_wnds"))
spawn("eob_hive_pressure_plate", 5,30,3, "eob_hive_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_teleporter", 6,30,3, "eob_teleporter_27")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_lever", 7,30,0, "eob_hive_lever_4")
spawn("eob_hive_wall_rift", 7,30,2, "eob_hive_wall_rift_20")
spawn("eob_teleporter", 8,30,3, "eob_teleporter_28")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_lever", 9,30,0, "eob_hive_lever_5")
spawn("eob_teleporter", 10,30,3, "eob_teleporter_29")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_lever", 11,30,0, "eob_hive_lever_6")
spawn("eob_hive_wall_rift", 11,30,2, "eob_hive_wall_rift_21")
spawn("eob_teleporter", 12,30,3, "eob_teleporter_30")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_lever", 13,30,0, "eob_hive_lever_7")
spawn("eob_teleporter", 14,30,3, "eob_teleporter_31")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_wall_rift", 15,30,2, "eob_hive_wall_rift_22")
spawn("eob_hive_lever", 15,30,0, "eob_hive_lever_8")
spawn("eob_teleporter", 16,30,3, "eob_teleporter_32")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_lever", 17,30,0, "eob_hive_lever_9")
spawn("eob_teleporter", 18,30,3, "eob_teleporter_33")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_hive_lever", 19,30,0, "eob_hive_lever_10")
spawn("eob_hive_wall_text", 20,30,2, "eob_hive_wall_text_10")
	:setWallText("")
spawn("eob_hive_wall_text", 21,30,2, "eob_hive_wall_text_11")
	:setWallText("")
spawn("eob_hive_secret_button_small", 25,30,3, "eob_hive_secret_button_small_1")
spawn("eob_blocker", 26,30,2, "eob_blocker_17")
spawn("eob_plate_mail_u", 2,28,0, "eob_plate_mail_u_3")
spawn("eob_wand_u", 14,27,0, "eob_wand_u_1")
spawn("eob_arrow_u", 4,11,2, "eob_arrow_u_24")
spawn("eob_arrow_u", 15,24,1, "eob_arrow_u_25")
spawn("eob_key_skull_u", 3,12,0, "eob_key_skull_u_1")
spawn("eob_cleric_scroll_neutral_poison", 19,13,0, "eob_cleric_scroll_neutral_poison_2")
spawn("scroll_cone_of_cold", 25,22,2, "eob_mage_scroll_cone_of_cold_1")
spawn("eob_bones_elf_tyrra_u", 3,12,1, "eob_bones_elf_tyrra_u_1")
spawn("eob_mantis1_1", 27,24,0, "eob_mantis1_1_1")
spawn("eob_mantis1_2", 16,21,0, "eob_mantis1_2_1")
spawn("eob_mantis1_1", 5,24,0, "eob_mantis1_1_2")
spawn("eob_mantis1_2", 27,26,0, "eob_mantis1_2_2")
spawn("eob_mantis1_2", 27,30,0, "eob_mantis1_2_3")
spawn("eob_mantis1_1", 6,15,0, "eob_mantis1_1_3")
spawn("eob_mantis1_1", 27,28,0, "eob_mantis1_1_4")
spawn("eob_mantis1_2", 12,23,0, "eob_mantis1_2_4")
spawn("eob_mantis1_2", 2,16,0, "eob_mantis1_2_5")
spawn("eob_mantis1_2", 8,24,0, "eob_mantis1_2_6")
spawn("eob_mantis1_1", 10,14,0, "eob_mantis1_1_5")
spawn("eob_mantis1_1", 16,19,0, "eob_mantis1_1_6")
spawn("eob_mantis1_1", 8,27,0, "eob_mantis1_1_7")
spawn("eob_mantis1_2", 8,16,0, "eob_mantis1_2_7")

--- level 11 ---

mapName("Xanathar's Outer Sanctum, Lower Reaches")
setWallSet("dungeon")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
#..####....#..........#...#...##
#.......##.#######..#.#...##...#
#######.#....#...####.#.###..#.#
#...###.#....#.#............#..#
#.#...#.###############.###...##
#...#.#.#...........#...#...#..#
#######.#.#########.#...#.#..#.#
#...###.#.#.......#.#.###..#...#
#.#.##..#.#.##.##.#.#....#...###
#...##.##.#.#...#.#.####.##.#..#
######..#.#.#.#.#...#..#.#...#.#
#...#####.#.#...#.#.##.#.#.#...#
#.#.....#.#.#####.#.#..#.#####.#
#...###.#.#.......#.#.##.#.#...#
#######.#.#########.#.#..#.#...#
#...###.#...........#.#..#######
#.#.###.#############.####..#..#
#...###......#.#............#..#
#######.####...#.#########..#..#
##......#..#####.#.......#####.#
##...##.#..#####...#.#.#.......#
##...##........###.......#####.#
#########..###.###########..#..#
#.......#..###.#.........#..#..#
#.......######.#..##.....##.#..#
#..#.#..#......#######.##...####
#..#.#..#...##.#..###...#.###.##
#..###..#...##.#....#...#..#...#
#.......#...#...###.##.###.#...#
#.......#...#...###........#...#
################################
]])
spawn("eob_hive_wall_rift", 21,1,0, "eob_hive_wall_rift_23")
spawn("eob_hive_door", 3,2,3, "eob_hive_door_14")
	:addPullChain()
spawn("eob_hive_door", 10,2,2, "eob_hive_door_15")
	:addPullChain()
spawn("eob_hive_door", 21,3,2, "eob_hive_door_16")
	:addPullChain()
spawn("eob_hive_door", 23,3,2, "eob_hive_door_17")
	:addPullChain()
spawn("eob_hive_door", 14,4,0, "eob_hive_door_18")
	:addPullChain()
spawn("eob_blocker", 27,4,2, "eob_blocker_18")
spawn("eob_hive_door", 4,5,3, "eob_hive_door_19")
	:addPullChain()
spawn("eob_hive_door", 23,5,0, "eob_hive_door_20")
	:addPullChain()
spawn("eob_hive_button", 14,6,0, "eob_hive_button_1")
spawn("eob_hive_wall_rift", 30,7,3, "eob_hive_wall_rift_24")
spawn("eob_hive_wall_text", 14,8,0, "eob_hive_wall_text_12")
	:setWallText("")
spawn("eob_hive_door", 21,8,0, "eob_hive_door_21")
	:addPullChain()
spawn("eob_hive_wall_rift", 3,9,1, "eob_hive_wall_rift_25")
spawn("eob_hive_lever", 24,9,1, "eob_hive_lever_11")
	:setLeverState("activated")
spawn("eob_hive_ceiling_shaft", 14,10,2, "eob_hive_ceiling_shaft_3")
spawn("eob_hive_lever", 24,10,1, "eob_hive_lever_12")
spawn("eob_hive_door", 7,11,3, "eob_hive_door_22")
	:addPullChain()
spawn("eob_hive_wall_star", 11,11,3, "eob_hive_wall_star_1")
spawn("eob_hive_wall_rift", 13,11,1, "eob_hive_wall_rift_26")
spawn("eob_hive_wall_text", 13,11,3, "eob_hive_wall_text_13")
	:setWallText("")
spawn("eob_hive_portal_cross", 15,11,3, "eob_hive_portal_cross_1")
spawn("eob_hive_button", 15,11,1, "eob_hive_button_2")
spawn("eob_hive_wall_star", 19,11,1, "eob_hive_wall_star_2")
spawn("eob_hive_door", 21,11,1, "eob_hive_door_23")
	:addPullChain()
spawn("eob_hive_lever", 24,11,1, "eob_hive_lever_13")
spawn("eob_hive_wall_star", 14,12,2, "eob_hive_wall_star_3")
spawn("eob_hive_lever", 24,12,1, "eob_hive_lever_14")
spawn("eob_hive_door", 4,13,3, "eob_hive_door_24")
	:addPullChain()
spawn("eob_hive_lever", 24,13,1, "eob_hive_lever_15")
	:setLeverState("activated")
spawn("eob_hive_door", 30,13,2, "eob_hive_door_25")
	:addPullChain()
spawn("eob_hive_wall_rift", 1,14,3, "eob_hive_wall_rift_27")
spawn("eob_hive_button", 14,14,2, "eob_hive_button_3")
spawn("eob_hive_lever", 24,14,1, "eob_hive_lever_16")
	:setLeverState("activated")
spawn("eob_hive_lever", 24,15,1, "eob_hive_lever_17")
	:setLeverState("activated")
spawn("eob_hive_secret_button_small", 28,15,3, "eob_hive_secret_button_small_2")
spawn("eob_hive_wall_text", 30,15,2, "eob_hive_wall_text_14")
	:setWallText("")
spawn("eob_hive_wall_rift", 1,16,3, "eob_hive_wall_rift_28")
spawn("eob_hive_wall_text", 14,16,2, "eob_hive_wall_text_15")
	:setWallText("")
spawn("eob_hive_lever", 24,16,1, "eob_hive_lever_18")
spawn("eob_hive_alcove", 24,16,2, "eob_hive_alcove_8")
	:addItem(spawn("eob_dwarven_potion_healing"))
spawn("eob_hive_door", 8,18,1, "eob_hive_door_26")
spawn("eob_hive_lock", 9,18,2, "eob_hive_lock_2")
spawn("eob_hive_door", 14,18,2, "eob_hive_door_27")
	:addPullChain()
spawn("eob_hive_door", 6,20,1, "eob_hive_door_28")
	:addPullChain()
spawn("eob_hive_door", 30,20,2, "eob_hive_door_29")
	:addPullChain()
spawn("eob_hive_door", 17,21,1, "eob_hive_door_30")
	:addPullChain()
spawn("eob_hive_wall_text", 18,21,1, "eob_hive_wall_text_16")
	:setWallText("")
spawn("eob_hive_secret_button_tiny", 22,21,3, "eob_hive_secret_button_tiny_2")
spawn("eob_hive_wall_rift", 24,21,3, "eob_hive_wall_rift_29")
spawn("eob_hive_door", 25,21,3, "eob_hive_door_31")
	:addPullChain()
spawn("eob_hive_secret_button_tiny", 4,22,2, "eob_hive_secret_button_tiny_3")
spawn("eob_hive_door", 8,22,1, "eob_hive_door_32")
	:addPullChain()
spawn("eob_hive_door", 11,22,3, "eob_hive_door_33")
	:addPullChain()
spawn("eob_hive_door", 30,22,0, "eob_hive_door_34")
	:addPullChain()
spawn("eob_hive_wall_rift", 6,24,0, "eob_hive_wall_rift_30")
spawn("eob_hive_wall_rift", 10,24,1, "eob_hive_wall_rift_31")
spawn("eob_hive_door", 18,24,3, "eob_hive_door_35")
	:addPullChain()
spawn("eob_hive_wall_rift", 29,24,3, "eob_hive_wall_rift_32")
spawn("eob_hive_lock", 3,25,2, "eob_hive_lock_3")
spawn("eob_hive_door", 27,25,0, "eob_hive_door_36")
	:addPullChain()
spawn("eob_hive_secret_button_tiny", 30,25,2, "eob_hive_secret_button_tiny_4")
spawn("eob_hive_door", 4,26,0, "eob_hive_door_37")
spawn("eob_hive_door", 13,26,1, "eob_hive_door_38")
	:addPullChain()
spawn("eob_hive_door", 22,26,0, "eob_hive_door_39")
	:addPullChain()
spawn("eob_hive_portal_orb", 4,27,2, "eob_hive_portal_orb_1")
spawn("eob_hive_wall_rift", 6,27,3, "eob_hive_wall_rift_33")
spawn("eob_hive_secret_button_tiny", 9,27,3, "eob_hive_secret_button_tiny_5")
spawn("eob_hive_door", 14,28,2, "eob_hive_door_40")
	:addPullChain()
spawn("eob_hive_door", 18,28,3, "eob_hive_door_41")
	:addPullChain()
spawn("eob_hive_wall_rift", 7,29,1, "eob_hive_wall_rift_34")
spawn("eob_hive_door", 22,29,0, "eob_hive_door_42")
	:addPullChain()
spawn("eob_hive_wall_rift", 13,30,3, "eob_hive_wall_rift_35")
spawn("eob_stone_holy_symbol_u", 17,27,0, "eob_stone_holy_symbol_u_1")
spawn("eob_wand_lightning_bolt_10_u", 3,8,1, "eob_wand_lightning_bolt_10_u_1")
spawn("eob_medallion_luck_stone_u", 5,6,2, "eob_medallion_luck_stone_u_2")
spawn("eob_cleric_scroll_raise_dead", 5,6,3, "eob_cleric_scroll_raise_dead_4")
spawn("eob_stone_orb_u", 26,15,3, "eob_stone_orb_u_1")
spawn("eob_key_drow_u", 26,15,3, "eob_key_drow_u_8")
spawn("eob_orb_of_power__from_level11_u", 28,30,2, "eob_orb_of_power__from_level11_u_1")
spawn("eob_cleric_scroll_raise_dead", 25,1,1, "eob_cleric_scroll_raise_dead_5")
spawn("eob_rock_mossy_u", 25,1,1, "eob_rock_mossy_u_1")
spawn("eob_rock_mossy_u", 9,11,0, "eob_rock_mossy_u_2")
spawn("eob_long_sword_slasher", 1,1,0, "eob_long_sword_slasher_1")
spawn("eob_banded_armor_plus3_u", 1,1,0, "eob_banded_armor_plus3_u_1")
spawn("eob_ring2_u", 12,4,3, "eob_ring2_u_4")
spawn("scroll_hold_monster", 1,17,0, "eob_mage_scroll_hold_monster_1")
spawn("eob_cleric_scroll_cure_serious_wnds", 23,16,2, "eob_cleric_scroll_cure_serious_wnds_3")
spawn("eob_robe_protection5_u", 16,27,0, "eob_robe_protection5_u_1")
spawn("eob_dagger_flicka_u", 16,27,0, "eob_dagger_flicka_u_1")
spawn("eob_key_drow_u", 16,24,0, "eob_key_drow_u_9")
spawn("eob_bones_human_kirath_u", 16,27,0, "eob_bones_human_kirath_u_1")
spawn("eob_ring_protection2_u", 16,27,0, "eob_ring_protection2_u_2")
spawn("eob_bracers_defense2_u", 16,27,0, "eob_bracers_defense2_u_1")
spawn("eob_spell_book_u", 16,27,0, "eob_spell_book_u_1")
spawn("eob_mflayer1_1", 15,30,0, "eob_mflayer1_1_1")
spawn("eob_mflayer1_1", 4,27,0, "eob_mflayer1_1_2")
spawn("eob_mflayer1_1", 27,23,0, "eob_mflayer1_1_3")
spawn("eob_xorn", 23,2,0, "eob_xorn_1")
spawn("eob_xorn", 30,4,0, "eob_xorn_2")
spawn("eob_xorn", 30,10,0, "eob_xorn_3")
spawn("eob_xorn", 1,24,0, "eob_xorn_4")
spawn("eob_xorn", 30,8,0, "eob_xorn_5")
spawn("eob_mflayer1_1", 9,26,0, "eob_mflayer1_1_4")
spawn("eob_mflayer1_1", 29,25,0, "eob_mflayer1_1_5")
spawn("eob_mflayer1_1", 17,28,0, "eob_mflayer1_1_6")
spawn("eob_xorn", 27,7,0, "eob_xorn_6")
spawn("eob_xorn", 25,2,0, "eob_xorn_7")
spawn("eob_mflayer1_1", 17,25,0, "eob_mflayer1_1_7")
spawn("eob_xorn", 22,24,0, "eob_xorn_8")
spawn("eob_mflayer1_1", 29,19,0, "eob_mflayer1_1_8")
spawn("eob_mflayer1_1", 26,18,0, "eob_mflayer1_1_9")
spawn("eob_xorn", 27,1,0, "eob_xorn_9")
spawn("eob_xorn", 25,8,0, "eob_xorn_10")
spawn("eob_xorn", 7,30,0, "eob_xorn_11")
spawn("eob_xorn", 24,1,0, "eob_xorn_12")
spawn("eob_xorn", 26,12,0, "eob_xorn_13")

--- level 12 ---

mapName("Xanathar's Inner Sanctum")
setWallSet("temple")
playStream("assets/samples/music/temple_ambient.ogg")
mapDesc([[
################################
#.#....#...#...................#
#...............###.###.###.##.#
#.#######.##....#.#.###.###.##.#
#.######...####.#####..........#
#.######...#....#...#.##########
#.######...#....#...#.##...#..##
#.#######.#########.#..........#
#.......#.........#....#...##..#
#.###############.####.#####...#
#.#.#...#...#...#.#.##.#.#..#.##
#.....#...#.#.#.#....#......#.##
#.#.#...#...#...#.#.##.#.#..#.##
#.###############.####.######.##
#.#..#.....#....#.#..#.#..#....#
#....#...#.#....#....#....#....#
#.#..#...#.#....#.#..#.#..#...##
#.####...#.#....#.####.####...##
#........#.#....#....#.....#####
##########.##...####.#####.....#
#.......#...#.....#...#..####..#
#.......#...#.....#...#.....####
#.......#...#.....#####........#
#.......##.##..................#
#........#.#...................#
#........#.#...................#
#........###...................#
#..............................#
#..............................#
#..............................#
#..............................#
################################
]])
spawn("eob_sanctum_pedestal", 3,1,3, "eob_sanctum_pedestal_1")
spawn("eob_sanctum_pedestal", 4,1,3, "eob_sanctum_pedestal_2")
spawn("eob_sanctum_pedestal", 5,1,3, "eob_sanctum_pedestal_3")
spawn("eob_sanctum_button", 6,1,0, "eob_sanctum_button_1")
spawn("eob_sanctum_button", 18,1,2, "eob_sanctum_button_2")
spawn("eob_sanctum_skull_lock", 24,1,2, "eob_sanctum_skull_lock_1")
spawn("eob_sanctum_door", 26,1,1, "eob_sanctum_door_1")
	:addPullChain()
spawn("eob_sanctum_alcove", 28,1,2, "eob_sanctum_alcove_1")
	:addItem(spawn("eob_rations_iron_u"))
spawn("eob_sanctum_text", 3,2,2, "eob_sanctum_text_1")
	:setWallText("")
spawn("eob_sanctum_text", 4,2,2, "eob_sanctum_text_2")
	:setWallText("")
spawn("eob_sanctum_text", 5,2,2, "eob_sanctum_text_3")
	:setWallText("")
spawn("eob_sanctum_door_one", 7,2,1, "eob_sanctum_door_one_1")
	:addPullChain()
spawn("eob_sanctum_door_one", 11,2,3, "eob_sanctum_door_one_2")
	:addPullChain()
spawn("eob_sanctum_pedestal", 13,2,2, "eob_sanctum_pedestal_4")
	:addItem(spawn("eob_orb_of_power_u"))
	:addItem(spawn("eob_orb_of_power_u"))
	:addItem(spawn("eob_orb_of_power_u"))
spawn("eob_sanctum_door", 19,2,0, "eob_sanctum_door_2")
spawn("eob_sanctum_door", 23,2,0, "eob_sanctum_door_3")
spawn("eob_sanctum_alcove", 30,2,3, "eob_sanctum_alcove_2")
	:addItem(spawn("eob_rations_iron_u"))
spawn("eob_sanctum_door", 1,3,0, "eob_sanctum_door_4")
	:addPullChain()
spawn("eob_sanctum_door", 9,3,0, "eob_sanctum_door_5")
	:addPullChain()
spawn("eob_sanctum_secret_button_tiny", 14,3,2, "eob_sanctum_secret_button_tiny_1")
spawn("eob_sanctum_door", 23,3,2, "eob_sanctum_door_6")
spawn("eob_sanctum_alcove", 27,3,1, "eob_sanctum_alcove_3")
	:addItem(spawn("eob_rations_iron_u"))
spawn("eob_sanctum_pedestal", 8,4,3, "eob_sanctum_pedestal_5")
spawn("eob_sanctum_pedestal_eye", 9,4,2, "eob_sanctum_pedestal_eye_1")
spawn("eob_sanctum_pedestal", 10,4,0, "eob_sanctum_pedestal_6")
spawn("eob_sanctum_door", 15,4,0, "eob_sanctum_door_7")
spawn("eob_sanctum_skull_lock", 22,4,0, "eob_sanctum_skull_lock_2")
spawn("eob_sanctum_door", 26,4,1, "eob_sanctum_door_8")
	:addPullChain()
spawn("eob_sanctum_alcove", 29,4,0, "eob_sanctum_alcove_4")
	:addItem(spawn("eob_rations_iron_u"))
spawn("eob_sanctum_secret_button_tiny", 17,5,3, "eob_sanctum_secret_button_tiny_2")
spawn("eob_sanctum_door", 21,6,2, "eob_sanctum_door_9")
	:addPullChain()
spawn("eob_sanctum_fireball_firing_pad", 29,6,0, "eob_sanctum_fireball_firing_pad_1")
spawn("eob_sanctum_wall_lamp", 1,7,3, "eob_sanctum_wall_lamp_1")
spawn("eob_sanctum_text", 9,7,3, "eob_sanctum_text_4")
	:setWallText("")
spawn("eob_sanctum_pressure_plate", 21,7,2, "eob_sanctum_pressure_plate_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_pressure_plate", 22,7,3, "eob_sanctum_pressure_plate_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_door", 23,7,3, "eob_sanctum_door_10")
	:addPullChain()
spawn("eob_blocker", 24,7,2, "eob_blocker_19")
spawn("eob_sanctum_door_one", 27,7,3, "eob_sanctum_door_one_3")
	:addPullChain()
spawn("eob_sanctum_secret_button_small", 6,8,2, "eob_sanctum_secret_button_small_1")
spawn("eob_sanctum_pressure_plate", 6,8,3, "eob_sanctum_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_fireball_firing_pad", 7,8,1, "eob_sanctum_fireball_firing_pad_2")
spawn("eob_sanctum_door", 20,8,1, "eob_sanctum_door_11")
	:addPullChain()
spawn("eob_sanctum_pressure_plate", 21,8,2, "eob_sanctum_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_pressure_plate", 22,8,2, "eob_sanctum_pressure_plate_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_door_one", 1,9,0, "eob_sanctum_door_one_4")
	:addPullChain()
spawn("eob_sanctum_door", 17,9,0, "eob_sanctum_door_12")
	:addPullChain()
spawn("eob_sanctum_door", 22,9,0, "eob_sanctum_door_13")
	:addPullChain()
spawn("eob_sanctum_pedestal_eye", 28,9,3, "eob_sanctum_pedestal_eye_2")
spawn("eob_sanctum_pedestal_eye", 30,9,1, "eob_sanctum_pedestal_eye_3")
spawn("eob_sanctum_secret_button_tiny", 7,10,1, "eob_sanctum_secret_button_tiny_3")
spawn("eob_sanctum_wall_lamp_smoke", 13,10,0, "eob_sanctum_wall_lamp_smoke_1")
spawn("eob_sanctum_fireball_firing_pad", 13,10,3, "eob_sanctum_fireball_firing_pad_3")
spawn("eob_sanctum_wall_lamp", 15,10,0, "eob_sanctum_wall_lamp_2")
spawn("eob_sanctum_wall_lamp", 15,10,1, "eob_sanctum_wall_lamp_3")
spawn("eob_sanctum_fireball_firing_pad", 26,10,3, "eob_sanctum_fireball_firing_pad_4")
spawn("eob_sanctum_button", 27,10,1, "eob_sanctum_button_3")
spawn("eob_sanctum_wall_lamp", 1,11,3, "eob_sanctum_wall_lamp_4")
spawn("eob_sanctum_pressure_plate", 3,11,2, "eob_sanctum_pressure_plate_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_door", 4,11,1, "eob_sanctum_door_14")
	:addPullChain()
spawn("eob_sanctum_text", 7,11,3, "eob_sanctum_text_5")
	:setWallText("")
spawn("eob_sanctum_door", 8,11,1, "eob_sanctum_door_15")
	:addPullChain()
spawn("eob_sanctum_text", 11,11,3, "eob_sanctum_text_6")
	:setWallText("")
spawn("eob_sanctum_wall_lamp", 13,11,3, "eob_sanctum_wall_lamp_5")
spawn("eob_sanctum_portal_orb", 15,11,3, "eob_sanctum_portal_orb_1")
spawn("eob_sanctum_pressure_plate", 19,11,2, "eob_sanctum_pressure_plate_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_button", 20,11,1, "eob_sanctum_button_4")
spawn("eob_sanctum_door_one", 20,11,3, "eob_sanctum_door_one_5")
	:addPullChain()
spawn("eob_sanctum_pressure_plate", 24,11,2, "eob_sanctum_pressure_plate_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_door", 25,11,1, "eob_sanctum_door_16")
	:addPullChain()
spawn("eob_sanctum_pressure_plate", 26,11,2, "eob_sanctum_pressure_plate_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
spawn("eob_sanctum_button", 27,11,1, "eob_sanctum_button_5")
spawn("eob_sanctum_wall_lamp", 14,12,2, "eob_sanctum_wall_lamp_7")
spawn("eob_sanctum_wall_lamp", 15,12,1, "eob_sanctum_wall_lamp_6")
spawn("eob_sanctum_fireball_firing_pad", 26,12,3, "eob_sanctum_fireball_firing_pad_5")
spawn("eob_sanctum_button", 27,12,1, "eob_sanctum_button_6")
spawn("eob_sanctum_door", 1,13,0, "eob_sanctum_door_17")
	:addPullChain()
spawn("eob_sanctum_door", 17,13,0, "eob_sanctum_door_18")
	:addPullChain()
spawn("eob_sanctum_door", 22,13,0, "eob_sanctum_door_19")
	:addPullChain()
spawn("eob_sanctum_button", 4,14,1, "eob_sanctum_button_7")
spawn("eob_sanctum_door", 9,14,1, "eob_sanctum_door_20")
spawn("eob_sanctum_button", 20,14,1, "eob_sanctum_button_8")
spawn("eob_sanctum_button", 25,14,1, "eob_sanctum_button_9")
spawn("eob_sanctum_door", 2,15,3, "eob_sanctum_door_21")
	:addPullChain()
spawn("eob_sanctum_button", 4,15,1, "eob_sanctum_button_10")
spawn("eob_sanctum_pedestal", 7,15,2, "eob_sanctum_pedestal_7")
	:addItem(spawn("eob_potion_extra_healing"))
	:addItem(spawn("eob_ring2_u"))
spawn("eob_sanctum_skull_lock", 8,15,1, "eob_sanctum_skull_lock_3")
spawn("eob_sanctum_door", 18,15,3, "eob_sanctum_door_22")
	:addPullChain()
spawn("eob_sanctum_button", 20,15,1, "eob_sanctum_button_11")
spawn("eob_sanctum_door", 23,15,3, "eob_sanctum_door_23")
	:addPullChain()
spawn("eob_sanctum_button", 25,15,1, "eob_sanctum_button_12")
spawn("eob_sanctum_button", 4,16,1, "eob_sanctum_button_13")
spawn("eob_sanctum_pedestal", 7,16,2, "eob_sanctum_pedestal_8")
	:addItem(spawn("eob_key_skull_u"))
spawn("eob_sanctum_button", 20,16,1, "eob_sanctum_button_14")
spawn("eob_sanctum_button", 25,16,1, "eob_sanctum_button_15")
spawn("eob_sanctum_pedestal_eye", 27,16,2, "eob_sanctum_pedestal_eye_4")
spawn("eob_sanctum_pedestal_eye", 29,16,2, "eob_sanctum_pedestal_eye_5")
spawn("eob_sanctum_pedestal", 7,17,2, "eob_sanctum_pedestal_9")
	:addItem(spawn("eob_potion_extra_healing"))
	:addItem(spawn("eob_medallion_of_adornment_u"))
spawn("eob_sanctum_pedestal_eye", 27,17,3, "eob_sanctum_pedestal_eye_6")
spawn("eob_sanctum_spike_trap", 28,17,2, "eob_sanctum_spike_trap_1")
spawn("eob_sanctum_alcove", 28,17,2, "eob_sanctum_alcove_5")
	:addItem(spawn("eob_stone_scepter_u"))
	:addItem(spawn("eob_stone_dagger_u"))
	:addItem(spawn("eob_stone_medallion_u"))
	:addItem(spawn("eob_stone_necklace_u"))
	:addItem(spawn("eob_stone_scepter_u"))
	:addItem(spawn("eob_stone_holy_symbol_u"))
	:addItem(spawn("eob_stone_orb_u"))
spawn("eob_sanctum_pedestal_eye", 29,17,1, "eob_sanctum_pedestal_eye_7")
spawn("eob_blocker", 1,18,2, "eob_blocker_20")
spawn("eob_sanctum_door", 20,19,0, "eob_sanctum_door_24")
	:addPullChain()
spawn("eob_sanctum_door", 28,19,1, "eob_sanctum_door_25")
	:addPullChain()
spawn("eob_sanctum_pedestal_eye", 9,21,2, "eob_sanctum_pedestal_eye_8")
spawn("eob_sanctum_pedestal_eye", 11,21,2, "eob_sanctum_pedestal_eye_9")
spawn("eob_sanctum_alcove", 9,22,2, "eob_sanctum_alcove_6")
	:addItem(spawn("eob_potion_invisibility"))
	:addItem(spawn("eob_potion_vitality"))
spawn("eob_blocker", 10,22,2, "eob_blocker_21")
spawn("eob_sanctum_alcove", 11,22,2, "eob_sanctum_alcove_7")
	:addItem(spawn("eob_potion_invisibility"))
	:addItem(spawn("eob_potion_vitality"))
spawn("eob_wand_fireball_10_u", 19,13,8, "eob_wand_fireball_10_u_2")
spawn("eob_orb_of_power_u", 27,13,8, "eob_orb_of_power_u_4")
spawn("eob_potion_speed", 27,9,8, "eob_potion_speed_2")
spawn("eob_potion_invisibility", 17,3,0, "eob_potion_invisibility_1")
spawn("eob_potion_invisibility", 17,3,3, "eob_potion_invisibility_2")
spawn("eob_wand_magic_missile_20_u", 23,2,2, "eob_wand_magic_missile_20_u_1")
spawn("eob_golem", 3,10,0, "eob_golem_1")
spawn("eob_golem1_1", 3,12,0, "eob_golem1_1_1")
spawn("eob_golem", 19,3,0, "eob_golem_2")
spawn("eob_golem", 10,25,0, "eob_golem_3")
spawn("eob_golem", 10,24,0, "eob_golem_4")
spawn("eob_golem", 10,23,0, "eob_golem_5")
spawn("eob_golem", 1,10,0, "eob_golem_6")
spawn("eob_golem", 1,12,0, "eob_golem_7")
